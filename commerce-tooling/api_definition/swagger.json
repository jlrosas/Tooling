{
  "swagger": "2.0",
  "info": {
    "title": "Commerce API",
    "version": "1.0.0"
  },
  "paths": {
    "/rest/admin/v2/organizations": {
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "description": "The unique numeric ID for identifying the organization.",
                  "type": "string",
                  "readOnly": true
                },
                "address": {
                  "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The unique numeric ID for identifying the address."
                    },
                    "address1": {
                      "type": "string",
                      "description": "The first address line of the street address."
                    },
                    "address2": {
                      "type": "string",
                      "description": "The second address line of the street address."
                    },
                    "address3": {
                      "type": "string",
                      "description": "The third address line of the street address."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                    },
                    "bestCallingTime": {
                      "type": "string",
                      "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                    },
                    "billingCode": {
                      "type": "string",
                      "description": "A code to identify the shipping or billing information."
                    },
                    "billingCodeType": {
                      "type": "string",
                      "description": "The code for identifying the system or method of code structure that is used for billing."
                    },
                    "businessTitle": {
                      "type": "string",
                      "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                    },
                    "city": {
                      "type": "string",
                      "description": "The name of the city where the user or organization resides."
                    },
                    "country": {
                      "type": "string",
                      "description": "The name of the country or region where the user or organization resides."
                    },
                    "createdDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time that the address was created."
                    },
                    "email1": {
                      "type": "string",
                      "description": "The primary e-mail."
                    },
                    "email2": {
                      "type": "string",
                      "description": "The secondary e-mail."
                    },
                    "fax1": {
                      "type": "string",
                      "description": "The primary facsimile number."
                    },
                    "fax2": {
                      "type": "string",
                      "description": "The secondary facsimile number."
                    },
                    "field1": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field2": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field3": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user."
                    },
                    "memberId": {
                      "type": "string",
                      "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "middleName": {
                      "type": "string",
                      "description": "The middle name or initial of the user."
                    },
                    "mobilePhone1": {
                      "type": "string",
                      "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                    },
                    "mobilePhone1Country": {
                      "type": "string",
                      "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                    },
                    "nickName": {
                      "type": "string",
                      "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "officeAddress": {
                      "type": "string",
                      "description": "The internal office address line, such as the internal designation for an employee's desk location."
                    },
                    "organizationName": {
                      "type": "string",
                      "description": "The name of the organization to which the address information applies, if this is a business address."
                    },
                    "organizationUnitName": {
                      "type": "string",
                      "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                    },
                    "packageSuppression": {
                      "type": "integer",
                      "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "personTitle": {
                      "type": "string",
                      "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                    },
                    "phone1": {
                      "type": "string",
                      "description": "The primary phone number."
                    },
                    "phone1Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "phone2": {
                      "type": "string",
                      "description": "The secondary phone number."
                    },
                    "phone2Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "primary": {
                      "type": "integer",
                      "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                      "default": 0,
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone1": {
                      "type": "integer",
                      "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone2": {
                      "type": "integer",
                      "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "selfAddress": {
                      "type": "integer",
                      "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ],
                      "readOnly": true
                    },
                    "shippingGeoCode": {
                      "type": "string",
                      "description": "The geographical code that identifies a region for the shipping purposes."
                    },
                    "state": {
                      "type": "string",
                      "description": "The name of the state, province, or equivalent where the user or organization resides."
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                      "readOnly": true
                    },
                    "taxGeoCode": {
                      "type": "string",
                      "description": "The geographical tax code that identifies a region for the tax purposes."
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The ZIP or postal code of the user's address."
                    }
                  }
                },
                "administratorFirstName": {
                  "description": "The first name of the administrator.",
                  "type": "string"
                },
                "administratorLastName": {
                  "description": "The last name of the administrator.",
                  "type": "string"
                },
                "administratorMiddleName": {
                  "description": "The middle name of the administrator.",
                  "type": "string"
                },
                "approvalState": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The organizational entity's approval status. Available values: <br>* 0 - pending approval.<br>* 1 - approved.<br>* 2 - rejected.<br>* null - approval not applicable, so considered approved.",
                  "readOnly": true
                },
                "businessCategory": {
                  "description": "Describes the kind of business performed by an organization or organizational unit.",
                  "type": "string"
                },
                "description": {
                  "description": "A description of the registrant.",
                  "type": "string"
                },
                "distinguishedName": {
                  "description": "Distinguished Name (DN) of the organization or organizational unit, for LDAP use.",
                  "type": "string",
                  "readOnly": true
                },
                "isBusinessEntity": {
                  "description": "Whether this organization is a business entity, that is, an organization that can have business accounts. If the organization is a business entity, the value will be true, or false otherwise.",
                  "type": "boolean",
                  "readOnly": true
                },
                "legalId": {
                  "description": "The organization's legal identifier, such as the identifier assigned by a government. The value may be null for an organization whose type is an organizational unit (OU).",
                  "type": "string"
                },
                "organizationName": {
                  "description": "The name of the organization that the registrant represents.",
                  "type": "string"
                },
                "organizationType": {
                  "description": "The type of the organizational entity being added. The value can be set when creating an organization, but is otherwise read-only. Available values: <br>* O - Organization.<br>* OU - Organization Unit.",
                  "type": "string",
                  "readOnly": true
                },
                "parentOrganizationId": {
                  "description": "If the organization type is an organizational unit (OU), parentOrganizationId is the unique ID of the parent organization of this organization. If the organization type is an organization (O), parentOrganizationId is not required and the default value is the root organization (-2001). The value can be set when creating an organization, but is otherwise read-only.",
                  "type": "string"
                },
                "parentOrganizationName": {
                  "description": "The name of this organization's parent.",
                  "type": "string",
                  "readOnly": true
                },
                "preferredDelivery": {
                  "description": "The registrant's preferred mode of delivery.",
                  "type": "string"
                },
                "status": {
                  "description": "Whether or not the organization is locked. Available values: <br> * 0 - The organization is unlocked.<br> * -1 - The organization is locked.",
                  "enum": [
                    0,
                    -1
                  ],
                  "format": "int32",
                  "type": "integer",
                  "readOnly": true
                },
                "taxPayerId": {
                  "description": "A string used to identify the user for taxation, especially useful with tax software.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Create an organization.",
        "produces": [
          "application/json"
        ],
        "summary": "Create an organization.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Organizations-createOrganization"
      }
    },
    "/rest/admin/v2/organizations/{id}": {
      "patch": {
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "required": false,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "description": "The unique numeric ID for identifying the organization.",
                  "type": "string",
                  "readOnly": true
                },
                "address": {
                  "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The unique numeric ID for identifying the address."
                    },
                    "address1": {
                      "type": "string",
                      "description": "The first address line of the street address."
                    },
                    "address2": {
                      "type": "string",
                      "description": "The second address line of the street address."
                    },
                    "address3": {
                      "type": "string",
                      "description": "The third address line of the street address."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                    },
                    "bestCallingTime": {
                      "type": "string",
                      "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                    },
                    "billingCode": {
                      "type": "string",
                      "description": "A code to identify the shipping or billing information."
                    },
                    "billingCodeType": {
                      "type": "string",
                      "description": "The code for identifying the system or method of code structure that is used for billing."
                    },
                    "businessTitle": {
                      "type": "string",
                      "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                    },
                    "city": {
                      "type": "string",
                      "description": "The name of the city where the user or organization resides."
                    },
                    "country": {
                      "type": "string",
                      "description": "The name of the country or region where the user or organization resides."
                    },
                    "createdDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time that the address was created."
                    },
                    "email1": {
                      "type": "string",
                      "description": "The primary e-mail."
                    },
                    "email2": {
                      "type": "string",
                      "description": "The secondary e-mail."
                    },
                    "fax1": {
                      "type": "string",
                      "description": "The primary facsimile number."
                    },
                    "fax2": {
                      "type": "string",
                      "description": "The secondary facsimile number."
                    },
                    "field1": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field2": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field3": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user."
                    },
                    "memberId": {
                      "type": "string",
                      "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "middleName": {
                      "type": "string",
                      "description": "The middle name or initial of the user."
                    },
                    "mobilePhone1": {
                      "type": "string",
                      "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                    },
                    "mobilePhone1Country": {
                      "type": "string",
                      "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                    },
                    "nickName": {
                      "type": "string",
                      "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "officeAddress": {
                      "type": "string",
                      "description": "The internal office address line, such as the internal designation for an employee's desk location."
                    },
                    "organizationName": {
                      "type": "string",
                      "description": "The name of the organization to which the address information applies, if this is a business address."
                    },
                    "organizationUnitName": {
                      "type": "string",
                      "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                    },
                    "packageSuppression": {
                      "type": "integer",
                      "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "personTitle": {
                      "type": "string",
                      "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                    },
                    "phone1": {
                      "type": "string",
                      "description": "The primary phone number."
                    },
                    "phone1Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "phone2": {
                      "type": "string",
                      "description": "The secondary phone number."
                    },
                    "phone2Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "primary": {
                      "type": "integer",
                      "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                      "default": 0,
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone1": {
                      "type": "integer",
                      "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone2": {
                      "type": "integer",
                      "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "selfAddress": {
                      "type": "integer",
                      "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ],
                      "readOnly": true
                    },
                    "shippingGeoCode": {
                      "type": "string",
                      "description": "The geographical code that identifies a region for the shipping purposes."
                    },
                    "state": {
                      "type": "string",
                      "description": "The name of the state, province, or equivalent where the user or organization resides."
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                      "readOnly": true
                    },
                    "taxGeoCode": {
                      "type": "string",
                      "description": "The geographical tax code that identifies a region for the tax purposes."
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The ZIP or postal code of the user's address."
                    }
                  }
                },
                "administratorFirstName": {
                  "description": "The first name of the administrator.",
                  "type": "string"
                },
                "administratorLastName": {
                  "description": "The last name of the administrator.",
                  "type": "string"
                },
                "administratorMiddleName": {
                  "description": "The middle name of the administrator.",
                  "type": "string"
                },
                "approvalState": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The organizational entity's approval status. Available values: <br>* 0 - pending approval.<br>* 1 - approved.<br>* 2 - rejected.<br>* null - approval not applicable, so considered approved.",
                  "readOnly": true
                },
                "businessCategory": {
                  "description": "Describes the kind of business performed by an organization or organizational unit.",
                  "type": "string"
                },
                "description": {
                  "description": "A description of the registrant.",
                  "type": "string"
                },
                "distinguishedName": {
                  "description": "Distinguished Name (DN) of the organization or organizational unit, for LDAP use.",
                  "type": "string",
                  "readOnly": true
                },
                "isBusinessEntity": {
                  "description": "Whether this organization is a business entity, that is, an organization that can have business accounts. If the organization is a business entity, the value will be true, or false otherwise.",
                  "type": "boolean",
                  "readOnly": true
                },
                "legalId": {
                  "description": "The organization's legal identifier, such as the identifier assigned by a government. The value may be null for an organization whose type is an organizational unit (OU).",
                  "type": "string"
                },
                "organizationName": {
                  "description": "The name of the organization that the registrant represents.",
                  "type": "string"
                },
                "organizationType": {
                  "description": "The type of the organizational entity being added. The value can be set when creating an organization, but is otherwise read-only. Available values: <br>* O - Organization.<br>* OU - Organization Unit.",
                  "type": "string",
                  "readOnly": true
                },
                "parentOrganizationId": {
                  "description": "If the organization type is an organizational unit (OU), parentOrganizationId is the unique ID of the parent organization of this organization. If the organization type is an organization (O), parentOrganizationId is not required and the default value is the root organization (-2001). The value can be set when creating an organization, but is otherwise read-only.",
                  "type": "string"
                },
                "parentOrganizationName": {
                  "description": "The name of this organization's parent.",
                  "type": "string",
                  "readOnly": true
                },
                "preferredDelivery": {
                  "description": "The registrant's preferred mode of delivery.",
                  "type": "string"
                },
                "status": {
                  "description": "Whether or not the organization is locked. Available values: <br> * 0 - The organization is unlocked.<br> * -1 - The organization is locked.",
                  "enum": [
                    0,
                    -1
                  ],
                  "format": "int32",
                  "type": "integer",
                  "readOnly": true
                },
                "taxPayerId": {
                  "description": "A string used to identify the user for taxation, especially useful with tax software.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Update an organization.",
        "produces": [
          "application/json"
        ],
        "summary": "Update an organization.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Organizations-updateOrganization"
      },
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "id": {
                  "description": "The unique numeric ID for identifying the organization.",
                  "type": "string",
                  "readOnly": true
                },
                "address": {
                  "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The unique numeric ID for identifying the address."
                    },
                    "address1": {
                      "type": "string",
                      "description": "The first address line of the street address."
                    },
                    "address2": {
                      "type": "string",
                      "description": "The second address line of the street address."
                    },
                    "address3": {
                      "type": "string",
                      "description": "The third address line of the street address."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                    },
                    "bestCallingTime": {
                      "type": "string",
                      "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                    },
                    "billingCode": {
                      "type": "string",
                      "description": "A code to identify the shipping or billing information."
                    },
                    "billingCodeType": {
                      "type": "string",
                      "description": "The code for identifying the system or method of code structure that is used for billing."
                    },
                    "businessTitle": {
                      "type": "string",
                      "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                    },
                    "city": {
                      "type": "string",
                      "description": "The name of the city where the user or organization resides."
                    },
                    "country": {
                      "type": "string",
                      "description": "The name of the country or region where the user or organization resides."
                    },
                    "createdDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time that the address was created."
                    },
                    "email1": {
                      "type": "string",
                      "description": "The primary e-mail."
                    },
                    "email2": {
                      "type": "string",
                      "description": "The secondary e-mail."
                    },
                    "fax1": {
                      "type": "string",
                      "description": "The primary facsimile number."
                    },
                    "fax2": {
                      "type": "string",
                      "description": "The secondary facsimile number."
                    },
                    "field1": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field2": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field3": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user."
                    },
                    "memberId": {
                      "type": "string",
                      "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "middleName": {
                      "type": "string",
                      "description": "The middle name or initial of the user."
                    },
                    "mobilePhone1": {
                      "type": "string",
                      "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                    },
                    "mobilePhone1Country": {
                      "type": "string",
                      "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                    },
                    "nickName": {
                      "type": "string",
                      "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "officeAddress": {
                      "type": "string",
                      "description": "The internal office address line, such as the internal designation for an employee's desk location."
                    },
                    "organizationName": {
                      "type": "string",
                      "description": "The name of the organization to which the address information applies, if this is a business address."
                    },
                    "organizationUnitName": {
                      "type": "string",
                      "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                    },
                    "packageSuppression": {
                      "type": "integer",
                      "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "personTitle": {
                      "type": "string",
                      "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                    },
                    "phone1": {
                      "type": "string",
                      "description": "The primary phone number."
                    },
                    "phone1Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "phone2": {
                      "type": "string",
                      "description": "The secondary phone number."
                    },
                    "phone2Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "primary": {
                      "type": "integer",
                      "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                      "default": 0,
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone1": {
                      "type": "integer",
                      "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone2": {
                      "type": "integer",
                      "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "selfAddress": {
                      "type": "integer",
                      "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ],
                      "readOnly": true
                    },
                    "shippingGeoCode": {
                      "type": "string",
                      "description": "The geographical code that identifies a region for the shipping purposes."
                    },
                    "state": {
                      "type": "string",
                      "description": "The name of the state, province, or equivalent where the user or organization resides."
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                      "readOnly": true
                    },
                    "taxGeoCode": {
                      "type": "string",
                      "description": "The geographical tax code that identifies a region for the tax purposes."
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The ZIP or postal code of the user's address."
                    }
                  }
                },
                "administratorFirstName": {
                  "description": "The first name of the administrator.",
                  "type": "string"
                },
                "administratorLastName": {
                  "description": "The last name of the administrator.",
                  "type": "string"
                },
                "administratorMiddleName": {
                  "description": "The middle name of the administrator.",
                  "type": "string"
                },
                "approvalState": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The organizational entity's approval status. Available values: <br>* 0 - pending approval.<br>* 1 - approved.<br>* 2 - rejected.<br>* null - approval not applicable, so considered approved.",
                  "readOnly": true
                },
                "businessCategory": {
                  "description": "Describes the kind of business performed by an organization or organizational unit.",
                  "type": "string"
                },
                "description": {
                  "description": "A description of the registrant.",
                  "type": "string"
                },
                "distinguishedName": {
                  "description": "Distinguished Name (DN) of the organization or organizational unit, for LDAP use.",
                  "type": "string",
                  "readOnly": true
                },
                "isBusinessEntity": {
                  "description": "Whether this organization is a business entity, that is, an organization that can have business accounts. If the organization is a business entity, the value will be true, or false otherwise.",
                  "type": "boolean",
                  "readOnly": true
                },
                "legalId": {
                  "description": "The organization's legal identifier, such as the identifier assigned by a government. The value may be null for an organization whose type is an organizational unit (OU).",
                  "type": "string"
                },
                "organizationName": {
                  "description": "The name of the organization that the registrant represents.",
                  "type": "string"
                },
                "organizationType": {
                  "description": "The type of the organizational entity being added. The value can be set when creating an organization, but is otherwise read-only. Available values: <br>* O - Organization.<br>* OU - Organization Unit.",
                  "type": "string",
                  "readOnly": true
                },
                "parentOrganizationId": {
                  "description": "If the organization type is an organizational unit (OU), parentOrganizationId is the unique ID of the parent organization of this organization. If the organization type is an organization (O), parentOrganizationId is not required and the default value is the root organization (-2001). The value can be set when creating an organization, but is otherwise read-only.",
                  "type": "string"
                },
                "parentOrganizationName": {
                  "description": "The name of this organization's parent.",
                  "type": "string",
                  "readOnly": true
                },
                "preferredDelivery": {
                  "description": "The registrant's preferred mode of delivery.",
                  "type": "string"
                },
                "status": {
                  "description": "Whether or not the organization is locked. Available values: <br> * 0 - The organization is unlocked.<br> * -1 - The organization is locked.",
                  "enum": [
                    0,
                    -1
                  ],
                  "format": "int32",
                  "type": "integer",
                  "readOnly": true
                },
                "taxPayerId": {
                  "description": "A string used to identify the user for taxation, especially useful with tax software.",
                  "type": "string"
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Get an organization by ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Get an organization by ID.",
        "operationId": "Organizations-findByOrganizationId"
      }
    },
    "/rest/admin/v2/organizations/{id}/lock": {
      "post": {
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "id",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Lock an organization. When locked the organization's status is -1.",
        "produces": [
          "application/json"
        ],
        "summary": "Lock an organization.",
        "operationId": "Organization-lock"
      }
    },
    "/rest/admin/v2/organizations/{id}/unlock": {
      "post": {
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "id",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Unlock an organization. When unlocked the organization's status is 0.",
        "produces": [
          "application/json"
        ],
        "summary": "Unlock an organization.",
        "operationId": "Organization-unlock"
      }
    },
    "/rest/admin/v2/organizations/manageable": {
      "get": {
        "responses": {
          "200": {
            "description": "The request completed successfully.",
            "schema": {
              "description": "The model for list of organizations.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0
                },
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "The unique numeric ID for identifying the organization.",
                        "type": "string",
                        "readOnly": true
                      },
                      "address": {
                        "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique numeric ID for identifying the address."
                          },
                          "address1": {
                            "type": "string",
                            "description": "The first address line of the street address."
                          },
                          "address2": {
                            "type": "string",
                            "description": "The second address line of the street address."
                          },
                          "address3": {
                            "type": "string",
                            "description": "The third address line of the street address."
                          },
                          "addressType": {
                            "type": "string",
                            "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                          },
                          "bestCallingTime": {
                            "type": "string",
                            "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                          },
                          "billingCode": {
                            "type": "string",
                            "description": "A code to identify the shipping or billing information."
                          },
                          "billingCodeType": {
                            "type": "string",
                            "description": "The code for identifying the system or method of code structure that is used for billing."
                          },
                          "businessTitle": {
                            "type": "string",
                            "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city where the user or organization resides."
                          },
                          "country": {
                            "type": "string",
                            "description": "The name of the country or region where the user or organization resides."
                          },
                          "createdDateTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time that the address was created."
                          },
                          "email1": {
                            "type": "string",
                            "description": "The primary e-mail."
                          },
                          "email2": {
                            "type": "string",
                            "description": "The secondary e-mail."
                          },
                          "fax1": {
                            "type": "string",
                            "description": "The primary facsimile number."
                          },
                          "fax2": {
                            "type": "string",
                            "description": "The secondary facsimile number."
                          },
                          "field1": {
                            "type": "string",
                            "description": "A customizable field."
                          },
                          "field2": {
                            "type": "string",
                            "description": "A customizable field."
                          },
                          "field3": {
                            "type": "string",
                            "description": "A customizable field."
                          },
                          "firstName": {
                            "type": "string",
                            "description": "The first name of the user."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "The last name of the user."
                          },
                          "memberId": {
                            "type": "string",
                            "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                          },
                          "middleName": {
                            "type": "string",
                            "description": "The middle name or initial of the user."
                          },
                          "mobilePhone1": {
                            "type": "string",
                            "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                          },
                          "mobilePhone1Country": {
                            "type": "string",
                            "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                          },
                          "nickName": {
                            "type": "string",
                            "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                          },
                          "officeAddress": {
                            "type": "string",
                            "description": "The internal office address line, such as the internal designation for an employee's desk location."
                          },
                          "organizationName": {
                            "type": "string",
                            "description": "The name of the organization to which the address information applies, if this is a business address."
                          },
                          "organizationUnitName": {
                            "type": "string",
                            "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                          },
                          "packageSuppression": {
                            "type": "integer",
                            "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "personTitle": {
                            "type": "string",
                            "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                          },
                          "phone1": {
                            "type": "string",
                            "description": "The primary phone number."
                          },
                          "phone1Type": {
                            "type": "string",
                            "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                          },
                          "phone2": {
                            "type": "string",
                            "description": "The secondary phone number."
                          },
                          "phone2Type": {
                            "type": "string",
                            "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                          },
                          "primary": {
                            "type": "integer",
                            "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                            "default": 0,
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "publishPhone1": {
                            "type": "integer",
                            "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "publishPhone2": {
                            "type": "integer",
                            "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "selfAddress": {
                            "type": "integer",
                            "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                            "enum": [
                              0,
                              1
                            ],
                            "readOnly": true
                          },
                          "shippingGeoCode": {
                            "type": "string",
                            "description": "The geographical code that identifies a region for the shipping purposes."
                          },
                          "state": {
                            "type": "string",
                            "description": "The name of the state, province, or equivalent where the user or organization resides."
                          },
                          "status": {
                            "type": "string",
                            "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                            "readOnly": true
                          },
                          "taxGeoCode": {
                            "type": "string",
                            "description": "The geographical tax code that identifies a region for the tax purposes."
                          },
                          "zipCode": {
                            "type": "string",
                            "description": "The ZIP or postal code of the user's address."
                          }
                        }
                      },
                      "administratorFirstName": {
                        "description": "The first name of the administrator.",
                        "type": "string"
                      },
                      "administratorLastName": {
                        "description": "The last name of the administrator.",
                        "type": "string"
                      },
                      "administratorMiddleName": {
                        "description": "The middle name of the administrator.",
                        "type": "string"
                      },
                      "approvalState": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The organizational entity's approval status. Available values: <br>* 0 - pending approval.<br>* 1 - approved.<br>* 2 - rejected.<br>* null - approval not applicable, so considered approved.",
                        "readOnly": true
                      },
                      "businessCategory": {
                        "description": "Describes the kind of business performed by an organization or organizational unit.",
                        "type": "string"
                      },
                      "description": {
                        "description": "A description of the registrant.",
                        "type": "string"
                      },
                      "distinguishedName": {
                        "description": "Distinguished Name (DN) of the organization or organizational unit, for LDAP use.",
                        "type": "string",
                        "readOnly": true
                      },
                      "isBusinessEntity": {
                        "description": "Whether this organization is a business entity, that is, an organization that can have business accounts. If the organization is a business entity, the value will be true, or false otherwise.",
                        "type": "boolean",
                        "readOnly": true
                      },
                      "legalId": {
                        "description": "The organization's legal identifier, such as the identifier assigned by a government. The value may be null for an organization whose type is an organizational unit (OU).",
                        "type": "string"
                      },
                      "organizationName": {
                        "description": "The name of the organization that the registrant represents.",
                        "type": "string"
                      },
                      "organizationType": {
                        "description": "The type of the organizational entity being added. The value can be set when creating an organization, but is otherwise read-only. Available values: <br>* O - Organization.<br>* OU - Organization Unit.",
                        "type": "string",
                        "readOnly": true
                      },
                      "parentOrganizationId": {
                        "description": "If the organization type is an organizational unit (OU), parentOrganizationId is the unique ID of the parent organization of this organization. If the organization type is an organization (O), parentOrganizationId is not required and the default value is the root organization (-2001). The value can be set when creating an organization, but is otherwise read-only.",
                        "type": "string"
                      },
                      "parentOrganizationName": {
                        "description": "The name of this organization's parent.",
                        "type": "string",
                        "readOnly": true
                      },
                      "preferredDelivery": {
                        "description": "The registrant's preferred mode of delivery.",
                        "type": "string"
                      },
                      "status": {
                        "description": "Whether or not the organization is locked. Available values: <br> * 0 - The organization is unlocked.<br> * -1 - The organization is locked.",
                        "enum": [
                          0,
                          -1
                        ],
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                      },
                      "taxPayerId": {
                        "description": "A string used to identify the user for taxation, especially useful with tax software.",
                        "type": "string"
                      }
                    }
                  },
                  "description": "The items."
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. Some of the inputs provided to the request are not valid."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The organization name.",
            "in": "query",
            "name": "organizationName",
            "required": false,
            "type": "string"
          },
          {
            "description": "The parent organization name.",
            "in": "query",
            "name": "parentOrganizationName",
            "required": false,
            "type": "string"
          },
          {
            "default": "Manage",
            "description": "Limits the results to organizations that match the specified task. The following values are accepted:\n * AssignRoleToUser - Returns organizations for which the current user is allowed to assign roles to other users.\n * CreateAccount - Returns organizations for which the current user is allowed to create accounts.\n * Manage - Returns organizations that the current user is allowed to manage. The organizations may be of type \"O\", \"OU\" or \"AD\".\n * ManageExcludingAD - Returns organizations that the current user is allowed to manage. The organiztaion may be of type \"O\" or \"OU\".\n * ManageO - Returns organizations of type \"O\" that the current user is allowed to manage.\n * ManageOU - Returns organizations of type \"OU\" that the current user is allowed to manage.\n",
            "in": "query",
            "name": "taskName",
            "required": false,
            "type": "string",
            "items": {
              "type": "string",
              "enum": [
                "AssignRoleToUser",
                "CreateAccount",
                "Manage",
                "ManageExcludingAD",
                "ManageO",
                "ManageOU"
              ]
            }
          },
          {
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID of the store for which the organizations are being managed. This parameter should be passed if the taskName is CreateAccount.",
            "in": "query",
            "name": "storeId"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name,-id will order the items first based on the name value in ascending order, and then by their ID value in descending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include organizations with a parent organization ID that matches the value of this parameter.",
            "in": "query",
            "name": "parentOrganizationId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include organizations with an ancestor organization ID that matches the value of this parameter.",
            "in": "query",
            "name": "ancestorOrganizationId",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Get a collection of organizations the currently logged in administrator user can manage.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of organizations the currently logged in administrator user can manage.",
        "operationId": "Organization-getManageableOrganizations"
      }
    },
    "/rest/admin/v2/organizations/{id}/site-attributes": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "description": "A list of custom attributes.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "items": {
                  "type": "array",
                  "items": {
                    "description": "A custom attribute that is associated with a user or organization and that is store-independent.",
                    "properties": {
                      "name": {
                        "description": "The name of the custom attribute.",
                        "type": "string"
                      },
                      "values": {
                        "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "2019-01-11 10:44:30.360000"
                        }
                      }
                    }
                  },
                  "description": "The items."
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "default": 100000,
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Get an organization's site-level, store-independent attributes.",
        "produces": [
          "application/json"
        ],
        "summary": "Get an organization's site-level, store-independent attributes.",
        "operationId": "Organizations-findSiteAttributesByOrganizationId"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that is store-independent.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Create an organization site-level attribute.",
        "produces": [
          "application/json"
        ],
        "summary": "Create an organization site-level attribute.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Organizations-createOrganizationSiteAttribute"
      }
    },
    "/rest/admin/v2/organizations/{id}/site-attributes/{name}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that is store-independent.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "name": "name",
            "type": "string",
            "description": "The name of the attribute to use as the search term.",
            "in": "path"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Get an organization's site-level, store-independent attribute by organization ID and attribute name.",
        "produces": [
          "application/json"
        ],
        "summary": "Get an organization's site-level, store-independent attribute by organization ID and attribute name.",
        "operationId": "Organizations-findSiteAttributeByOrganizationId"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "name": "name",
            "type": "string",
            "description": "The name of the attribute to be updated.",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that is store-independent.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Update an organization's site-level attributes. Attribute values are merged at the attribute level, rather than at the attribute value level. For example, if an attribute has the following values '[a, b]', after performing an update using values '[c, d, e]', the attribute values would be '[c, d, e]'.",
        "produces": [
          "application/json"
        ],
        "summary": "Update an organization's site-level attributes.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Organizations-updateOrganizationSiteAttribute"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "name": "name",
            "type": "string",
            "description": "The name of the attribute to be deleted.",
            "in": "path"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Delete a site-level attribute of an organization.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete a site-level attribute of an organization.",
        "operationId": "Organizations-deleteOrganizationSiteAttribute"
      }
    },
    "/rest/admin/v2/organizations/{id}/store-attributes": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "description": "A list of custom attributes.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "items": {
                  "type": "array",
                  "items": {
                    "description": "A custom attribute that is associated with a user or organization and that applies to a specific store.",
                    "properties": {
                      "name": {
                        "description": "The name of the custom attribute.",
                        "type": "string"
                      },
                      "storeId": {
                        "description": "The unique numeric ID of the store where the attribute applies. This parameter can only be set at attribute creation time.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "values": {
                        "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "2019-01-11 10:44:30.360000"
                        }
                      }
                    }
                  },
                  "description": "The items."
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID of the store where the attribute applies.",
            "in": "query",
            "name": "storeId"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "default": 100000,
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Get an organization's store-specific attributes.",
        "produces": [
          "application/json"
        ],
        "summary": "Get an organization's store-specific attributes.",
        "operationId": "Organizations-findStoreMemberAttributesByOrganizationId"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that applies to a specific store.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "storeId": {
                  "description": "The unique numeric ID of the store where the attribute applies. This parameter can only be set at attribute creation time.",
                  "type": "integer",
                  "format": "int32"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Create a store-specific organization attribute.",
        "produces": [
          "application/json"
        ],
        "summary": "Create a store-specific organization attribute.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Organizations-createOrganizationStoreMemberAttribute"
      }
    },
    "/rest/admin/v2/organizations/{id}/store-attributes/storeId:{storeId},name:{name}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that applies to a specific store.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "storeId": {
                  "description": "The unique numeric ID of the store where the attribute applies. This parameter can only be set at attribute creation time.",
                  "type": "integer",
                  "format": "int32"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID of the store where the attribute applies.",
            "in": "path",
            "name": "storeId"
          },
          {
            "required": true,
            "name": "name",
            "type": "string",
            "description": "The name of the attribute to use as the search term.",
            "in": "path"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Get an organization's store-specific attribute by organization ID, store ID and attribute name.",
        "produces": [
          "application/json"
        ],
        "summary": "Get an organization's store-specific attribute by organization ID, store ID and attribute name.",
        "operationId": "Organizations-findStoreMemberAttributeByOrganizationId"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID of the store where the attribute applies.",
            "in": "path",
            "name": "storeId"
          },
          {
            "required": true,
            "type": "string",
            "description": "The name of this attribute.",
            "in": "path",
            "name": "name"
          },
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that applies to a specific store.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "storeId": {
                  "description": "The unique numeric ID of the store where the attribute applies. This parameter can only be set at attribute creation time.",
                  "type": "integer",
                  "format": "int32"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Update an organization's store-specific attributes. Attribute values are merged at the attribute level, rather than the attribute value level. For example, if an attribute has the following values '[a, b]', after performing an update using values '[c, d, e]', the attribute values would be '[c, d, e]'.",
        "produces": [
          "application/json"
        ],
        "summary": "Update an organization's store-specific attributes.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Organizations-updateOrganizationStoreMemberAttribute"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the organization.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "name": "storeId",
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID of the store where the attribute applies.",
            "in": "path"
          },
          {
            "required": true,
            "name": "name",
            "type": "string",
            "description": "The name of the attribute to be deleted.",
            "in": "path"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "description": "Delete a store-specific attribute of an organization.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete a store-specific attribute of an organization.",
        "operationId": "Organizations-deleteOrganizationStoreMemberAttribute"
      }
    },
    "/rest/admin/v2/users/manageable": {
      "get": {
        "responses": {
          "200": {
            "description": "The request completed successfully.",
            "schema": {
              "description": "The model for list of users.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0
                },
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the user.",
                        "readOnly": true
                      },
                      "address": {
                        "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique numeric ID for identifying the address."
                          },
                          "address1": {
                            "type": "string",
                            "description": "The first address line of the street address."
                          },
                          "address2": {
                            "type": "string",
                            "description": "The second address line of the street address."
                          },
                          "address3": {
                            "type": "string",
                            "description": "The third address line of the street address."
                          },
                          "addressType": {
                            "type": "string",
                            "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                          },
                          "bestCallingTime": {
                            "type": "string",
                            "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                          },
                          "billingCode": {
                            "type": "string",
                            "description": "A code to identify the shipping or billing information."
                          },
                          "billingCodeType": {
                            "type": "string",
                            "description": "The code for identifying the system or method of code structure that is used for billing."
                          },
                          "businessTitle": {
                            "type": "string",
                            "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city where the user or organization resides."
                          },
                          "country": {
                            "type": "string",
                            "description": "The name of the country or region where the user or organization resides."
                          },
                          "createdDateTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time that the address was created."
                          },
                          "email1": {
                            "type": "string",
                            "description": "The primary e-mail."
                          },
                          "email2": {
                            "type": "string",
                            "description": "The secondary e-mail."
                          },
                          "fax1": {
                            "type": "string",
                            "description": "The primary facsimile number."
                          },
                          "fax2": {
                            "type": "string",
                            "description": "The secondary facsimile number."
                          },
                          "field1": {
                            "type": "string",
                            "description": "A customizable field."
                          },
                          "field2": {
                            "type": "string",
                            "description": "A customizable field."
                          },
                          "field3": {
                            "type": "string",
                            "description": "A customizable field."
                          },
                          "firstName": {
                            "type": "string",
                            "description": "The first name of the user."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "The last name of the user."
                          },
                          "memberId": {
                            "type": "string",
                            "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                          },
                          "middleName": {
                            "type": "string",
                            "description": "The middle name or initial of the user."
                          },
                          "mobilePhone1": {
                            "type": "string",
                            "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                          },
                          "mobilePhone1Country": {
                            "type": "string",
                            "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                          },
                          "nickName": {
                            "type": "string",
                            "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                          },
                          "officeAddress": {
                            "type": "string",
                            "description": "The internal office address line, such as the internal designation for an employee's desk location."
                          },
                          "organizationName": {
                            "type": "string",
                            "description": "The name of the organization to which the address information applies, if this is a business address."
                          },
                          "organizationUnitName": {
                            "type": "string",
                            "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                          },
                          "packageSuppression": {
                            "type": "integer",
                            "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "personTitle": {
                            "type": "string",
                            "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                          },
                          "phone1": {
                            "type": "string",
                            "description": "The primary phone number."
                          },
                          "phone1Type": {
                            "type": "string",
                            "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                          },
                          "phone2": {
                            "type": "string",
                            "description": "The secondary phone number."
                          },
                          "phone2Type": {
                            "type": "string",
                            "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                          },
                          "primary": {
                            "type": "integer",
                            "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                            "default": 0,
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "publishPhone1": {
                            "type": "integer",
                            "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "publishPhone2": {
                            "type": "integer",
                            "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "selfAddress": {
                            "type": "integer",
                            "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                            "enum": [
                              0,
                              1
                            ],
                            "readOnly": true
                          },
                          "shippingGeoCode": {
                            "type": "string",
                            "description": "The geographical code that identifies a region for the shipping purposes."
                          },
                          "state": {
                            "type": "string",
                            "description": "The name of the state, province, or equivalent where the user or organization resides."
                          },
                          "status": {
                            "type": "string",
                            "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                            "readOnly": true
                          },
                          "taxGeoCode": {
                            "type": "string",
                            "description": "The geographical tax code that identifies a region for the tax purposes."
                          },
                          "zipCode": {
                            "type": "string",
                            "description": "The ZIP or postal code of the user's address."
                          }
                        }
                      },
                      "age": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The registrant's age."
                      },
                      "approvalState": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The organizational entity's approval status. Available values: <br>* 0 - pending approval.<br>* 1 - approved.<br>* 2 - rejected.<br>* null - approval not applicable, so considered approved.",
                        "readOnly": true
                      },
                      "createdDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time that the registrant was registered.",
                        "readOnly": true
                      },
                      "dateOfBirth": {
                        "type": "string",
                        "format": "date",
                        "description": "The registrant's date of birth."
                      },
                      "departmentNumber": {
                        "type": "string",
                        "description": "The department identifier for the registrant."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the registrant."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Name that is used when the name of the registrant displays in a summary list."
                      },
                      "distinguishedName": {
                        "type": "string",
                        "description": "Distinguished name (DN) of the registrant, for LDAP use.",
                        "readOnly": true
                      },
                      "employeeId": {
                        "type": "string",
                        "description": "The registrant's ID with their employer."
                      },
                      "employeeType": {
                        "type": "string",
                        "description": "The registrant's status as an employee (for example, regular, permanent, contractor, or part time)."
                      },
                      "gender": {
                        "type": "string",
                        "description": "The registrant's gender."
                      },
                      "updatedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time representing the most recent update to the registrant's information.",
                        "readOnly": true
                      },
                      "lastSession": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time representing the most recent login time of the user.",
                        "readOnly": true
                      },
                      "logonId": {
                        "type": "string",
                        "description": "The registrant's logon ID. Leading and trailing spaces are trimmed. When the system is configured with LDAP, the following restrictions apply, since the logonId is part of the distinguished name: <br>* Must not begin with a '#'.<br>* Must not contain equals sign, comma, plus sign, quotation mark, backslash, angle brackets or semicolon."
                      },
                      "manager": {
                        "type": "string",
                        "description": "The name of the registrant's manager."
                      },
                      "parentOrganizationId": {
                        "type": "string",
                        "description": "The identifier of the registrant's company. Can be set when the user is created, but is otherwise read-only."
                      },
                      "parentOrganizationName": {
                        "type": "string",
                        "description": "The name of the organization that the registrant represents.",
                        "readOnly": true
                      },
                      "password": {
                        "type": "string",
                        "description": "The registrant's password. In database mode, the password is encrypted before it is saved in the database. In LDAP mode, the password is only stored on the LDAP server. This parameter is only specified during user creation/update and will never be returned in the response."
                      },
                      "passwordVerify": {
                        "type": "string",
                        "description": "The registrant's password, entered a second time. This parameter is only specified during user creation/update and will never be returned in the response."
                      },
                      "personTitle": {
                        "type": "string",
                        "description": "The title of the user whose address is being entered (for example, Dr., Rev., Mr., or Ms.)."
                      },
                      "preferredCurrency": {
                        "type": "string",
                        "description": "The registrant's preferred currency for transactions."
                      },
                      "preferredLanguageId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique numeric ID for identifying registrant's preferred language."
                      },
                      "profileType": {
                        "default": "B",
                        "description": "The registrant's user profile type. This parameter can only be set during user registration. Available values: <br> * B - A business user profile.<br> * C - A customer user profile.",
                        "enum": [
                          "B",
                          "C"
                        ],
                        "type": "string"
                      },
                      "receiveSmsNotification": {
                        "type": "boolean",
                        "description": "Indicates whether the user wants to receive order notification SMS text messages."
                      },
                      "registrationType": {
                        "type": "string",
                        "description": "The registrant's registration type. Available values: <br>* A - Sell-side Administrator.<br> * G - Guest Customer.<br> * R - Registered Customer.<br> * S - Site Administrator.<br>",
                        "readOnly": true
                      },
                      "secretary": {
                        "type": "string",
                        "description": "The name of the registrant's secretary."
                      },
                      "status": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Whether or not the user's account is enabled. Available values: <br> * 0 - Disabled.<br> * 1 - Enabled."
                      },
                      "userAccountPolicyId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique numeric ID for identifying a user account policy."
                      }
                    }
                  },
                  "description": "The items."
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. Some of the inputs provided to the request are not valid."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "Limits search results to only include users whose last name matches the value of this parameter.",
            "in": "query",
            "name": "lastName",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include users whose first name matches the value of this parameter.",
            "in": "query",
            "name": "firstName",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include users whose logon ID matches the value of this parameter.",
            "in": "query",
            "name": "logonId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name,-id will order the items first based on the name value in ascending order, and then by their ID value in descending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include users whose first name, last name or logon ID matches the value of this parameter.",
            "in": "query",
            "name": "searchString",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include users whose role ID matches the value of this parameter.",
            "in": "query",
            "name": "roleId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include users whose parent organization ID matches the value of this parameter.",
            "in": "query",
            "name": "parentOrganizationId",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Get a collection of users the currently logged in administrator user can manage.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of users the currently logged in administrator user can manage.",
        "operationId": "Users-getManageableUsers"
      }
    },
    "/rest/admin/v2/users/{id}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the user.",
                  "readOnly": true
                },
                "address": {
                  "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The unique numeric ID for identifying the address."
                    },
                    "address1": {
                      "type": "string",
                      "description": "The first address line of the street address."
                    },
                    "address2": {
                      "type": "string",
                      "description": "The second address line of the street address."
                    },
                    "address3": {
                      "type": "string",
                      "description": "The third address line of the street address."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                    },
                    "bestCallingTime": {
                      "type": "string",
                      "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                    },
                    "billingCode": {
                      "type": "string",
                      "description": "A code to identify the shipping or billing information."
                    },
                    "billingCodeType": {
                      "type": "string",
                      "description": "The code for identifying the system or method of code structure that is used for billing."
                    },
                    "businessTitle": {
                      "type": "string",
                      "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                    },
                    "city": {
                      "type": "string",
                      "description": "The name of the city where the user or organization resides."
                    },
                    "country": {
                      "type": "string",
                      "description": "The name of the country or region where the user or organization resides."
                    },
                    "createdDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time that the address was created."
                    },
                    "email1": {
                      "type": "string",
                      "description": "The primary e-mail."
                    },
                    "email2": {
                      "type": "string",
                      "description": "The secondary e-mail."
                    },
                    "fax1": {
                      "type": "string",
                      "description": "The primary facsimile number."
                    },
                    "fax2": {
                      "type": "string",
                      "description": "The secondary facsimile number."
                    },
                    "field1": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field2": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field3": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user."
                    },
                    "memberId": {
                      "type": "string",
                      "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "middleName": {
                      "type": "string",
                      "description": "The middle name or initial of the user."
                    },
                    "mobilePhone1": {
                      "type": "string",
                      "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                    },
                    "mobilePhone1Country": {
                      "type": "string",
                      "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                    },
                    "nickName": {
                      "type": "string",
                      "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "officeAddress": {
                      "type": "string",
                      "description": "The internal office address line, such as the internal designation for an employee's desk location."
                    },
                    "organizationName": {
                      "type": "string",
                      "description": "The name of the organization to which the address information applies, if this is a business address."
                    },
                    "organizationUnitName": {
                      "type": "string",
                      "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                    },
                    "packageSuppression": {
                      "type": "integer",
                      "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "personTitle": {
                      "type": "string",
                      "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                    },
                    "phone1": {
                      "type": "string",
                      "description": "The primary phone number."
                    },
                    "phone1Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "phone2": {
                      "type": "string",
                      "description": "The secondary phone number."
                    },
                    "phone2Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "primary": {
                      "type": "integer",
                      "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                      "default": 0,
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone1": {
                      "type": "integer",
                      "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone2": {
                      "type": "integer",
                      "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "selfAddress": {
                      "type": "integer",
                      "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ],
                      "readOnly": true
                    },
                    "shippingGeoCode": {
                      "type": "string",
                      "description": "The geographical code that identifies a region for the shipping purposes."
                    },
                    "state": {
                      "type": "string",
                      "description": "The name of the state, province, or equivalent where the user or organization resides."
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                      "readOnly": true
                    },
                    "taxGeoCode": {
                      "type": "string",
                      "description": "The geographical tax code that identifies a region for the tax purposes."
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The ZIP or postal code of the user's address."
                    }
                  }
                },
                "age": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The registrant's age."
                },
                "approvalState": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The organizational entity's approval status. Available values: <br>* 0 - pending approval.<br>* 1 - approved.<br>* 2 - rejected.<br>* null - approval not applicable, so considered approved.",
                  "readOnly": true
                },
                "createdDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time that the registrant was registered.",
                  "readOnly": true
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date",
                  "description": "The registrant's date of birth."
                },
                "departmentNumber": {
                  "type": "string",
                  "description": "The department identifier for the registrant."
                },
                "description": {
                  "type": "string",
                  "description": "A description of the registrant."
                },
                "displayName": {
                  "type": "string",
                  "description": "Name that is used when the name of the registrant displays in a summary list."
                },
                "distinguishedName": {
                  "type": "string",
                  "description": "Distinguished name (DN) of the registrant, for LDAP use.",
                  "readOnly": true
                },
                "employeeId": {
                  "type": "string",
                  "description": "The registrant's ID with their employer."
                },
                "employeeType": {
                  "type": "string",
                  "description": "The registrant's status as an employee (for example, regular, permanent, contractor, or part time)."
                },
                "gender": {
                  "type": "string",
                  "description": "The registrant's gender."
                },
                "updatedDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time representing the most recent update to the registrant's information.",
                  "readOnly": true
                },
                "lastSession": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time representing the most recent login time of the user.",
                  "readOnly": true
                },
                "logonId": {
                  "type": "string",
                  "description": "The registrant's logon ID. Leading and trailing spaces are trimmed. When the system is configured with LDAP, the following restrictions apply, since the logonId is part of the distinguished name: <br>* Must not begin with a '#'.<br>* Must not contain equals sign, comma, plus sign, quotation mark, backslash, angle brackets or semicolon."
                },
                "manager": {
                  "type": "string",
                  "description": "The name of the registrant's manager."
                },
                "parentOrganizationId": {
                  "type": "string",
                  "description": "The identifier of the registrant's company. Can be set when the user is created, but is otherwise read-only."
                },
                "parentOrganizationName": {
                  "type": "string",
                  "description": "The name of the organization that the registrant represents.",
                  "readOnly": true
                },
                "password": {
                  "type": "string",
                  "description": "The registrant's password. In database mode, the password is encrypted before it is saved in the database. In LDAP mode, the password is only stored on the LDAP server. This parameter is only specified during user creation/update and will never be returned in the response."
                },
                "passwordVerify": {
                  "type": "string",
                  "description": "The registrant's password, entered a second time. This parameter is only specified during user creation/update and will never be returned in the response."
                },
                "personTitle": {
                  "type": "string",
                  "description": "The title of the user whose address is being entered (for example, Dr., Rev., Mr., or Ms.)."
                },
                "preferredCurrency": {
                  "type": "string",
                  "description": "The registrant's preferred currency for transactions."
                },
                "preferredLanguageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying registrant's preferred language."
                },
                "profileType": {
                  "default": "B",
                  "description": "The registrant's user profile type. This parameter can only be set during user registration. Available values: <br> * B - A business user profile.<br> * C - A customer user profile.",
                  "enum": [
                    "B",
                    "C"
                  ],
                  "type": "string"
                },
                "receiveSmsNotification": {
                  "type": "boolean",
                  "description": "Indicates whether the user wants to receive order notification SMS text messages."
                },
                "registrationType": {
                  "type": "string",
                  "description": "The registrant's registration type. Available values: <br>* A - Sell-side Administrator.<br> * G - Guest Customer.<br> * R - Registered Customer.<br> * S - Site Administrator.<br>",
                  "readOnly": true
                },
                "secretary": {
                  "type": "string",
                  "description": "The name of the registrant's secretary."
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Whether or not the user's account is enabled. Available values: <br> * 0 - Disabled.<br> * 1 - Enabled."
                },
                "userAccountPolicyId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying a user account policy."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Get a user by ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a user by ID.",
        "operationId": "Users-findByUserId"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "required": false,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the user.",
                  "readOnly": true
                },
                "address": {
                  "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The unique numeric ID for identifying the address."
                    },
                    "address1": {
                      "type": "string",
                      "description": "The first address line of the street address."
                    },
                    "address2": {
                      "type": "string",
                      "description": "The second address line of the street address."
                    },
                    "address3": {
                      "type": "string",
                      "description": "The third address line of the street address."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                    },
                    "bestCallingTime": {
                      "type": "string",
                      "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                    },
                    "billingCode": {
                      "type": "string",
                      "description": "A code to identify the shipping or billing information."
                    },
                    "billingCodeType": {
                      "type": "string",
                      "description": "The code for identifying the system or method of code structure that is used for billing."
                    },
                    "businessTitle": {
                      "type": "string",
                      "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                    },
                    "city": {
                      "type": "string",
                      "description": "The name of the city where the user or organization resides."
                    },
                    "country": {
                      "type": "string",
                      "description": "The name of the country or region where the user or organization resides."
                    },
                    "createdDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time that the address was created."
                    },
                    "email1": {
                      "type": "string",
                      "description": "The primary e-mail."
                    },
                    "email2": {
                      "type": "string",
                      "description": "The secondary e-mail."
                    },
                    "fax1": {
                      "type": "string",
                      "description": "The primary facsimile number."
                    },
                    "fax2": {
                      "type": "string",
                      "description": "The secondary facsimile number."
                    },
                    "field1": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field2": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field3": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user."
                    },
                    "memberId": {
                      "type": "string",
                      "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "middleName": {
                      "type": "string",
                      "description": "The middle name or initial of the user."
                    },
                    "mobilePhone1": {
                      "type": "string",
                      "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                    },
                    "mobilePhone1Country": {
                      "type": "string",
                      "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                    },
                    "nickName": {
                      "type": "string",
                      "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "officeAddress": {
                      "type": "string",
                      "description": "The internal office address line, such as the internal designation for an employee's desk location."
                    },
                    "organizationName": {
                      "type": "string",
                      "description": "The name of the organization to which the address information applies, if this is a business address."
                    },
                    "organizationUnitName": {
                      "type": "string",
                      "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                    },
                    "packageSuppression": {
                      "type": "integer",
                      "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "personTitle": {
                      "type": "string",
                      "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                    },
                    "phone1": {
                      "type": "string",
                      "description": "The primary phone number."
                    },
                    "phone1Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "phone2": {
                      "type": "string",
                      "description": "The secondary phone number."
                    },
                    "phone2Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "primary": {
                      "type": "integer",
                      "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                      "default": 0,
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone1": {
                      "type": "integer",
                      "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone2": {
                      "type": "integer",
                      "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "selfAddress": {
                      "type": "integer",
                      "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ],
                      "readOnly": true
                    },
                    "shippingGeoCode": {
                      "type": "string",
                      "description": "The geographical code that identifies a region for the shipping purposes."
                    },
                    "state": {
                      "type": "string",
                      "description": "The name of the state, province, or equivalent where the user or organization resides."
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                      "readOnly": true
                    },
                    "taxGeoCode": {
                      "type": "string",
                      "description": "The geographical tax code that identifies a region for the tax purposes."
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The ZIP or postal code of the user's address."
                    }
                  }
                },
                "age": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The registrant's age."
                },
                "approvalState": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The organizational entity's approval status. Available values: <br>* 0 - pending approval.<br>* 1 - approved.<br>* 2 - rejected.<br>* null - approval not applicable, so considered approved.",
                  "readOnly": true
                },
                "createdDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time that the registrant was registered.",
                  "readOnly": true
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date",
                  "description": "The registrant's date of birth."
                },
                "departmentNumber": {
                  "type": "string",
                  "description": "The department identifier for the registrant."
                },
                "description": {
                  "type": "string",
                  "description": "A description of the registrant."
                },
                "displayName": {
                  "type": "string",
                  "description": "Name that is used when the name of the registrant displays in a summary list."
                },
                "distinguishedName": {
                  "type": "string",
                  "description": "Distinguished name (DN) of the registrant, for LDAP use.",
                  "readOnly": true
                },
                "employeeId": {
                  "type": "string",
                  "description": "The registrant's ID with their employer."
                },
                "employeeType": {
                  "type": "string",
                  "description": "The registrant's status as an employee (for example, regular, permanent, contractor, or part time)."
                },
                "gender": {
                  "type": "string",
                  "description": "The registrant's gender."
                },
                "updatedDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time representing the most recent update to the registrant's information.",
                  "readOnly": true
                },
                "lastSession": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time representing the most recent login time of the user.",
                  "readOnly": true
                },
                "logonId": {
                  "type": "string",
                  "description": "The registrant's logon ID. Leading and trailing spaces are trimmed. When the system is configured with LDAP, the following restrictions apply, since the logonId is part of the distinguished name: <br>* Must not begin with a '#'.<br>* Must not contain equals sign, comma, plus sign, quotation mark, backslash, angle brackets or semicolon."
                },
                "manager": {
                  "type": "string",
                  "description": "The name of the registrant's manager."
                },
                "parentOrganizationId": {
                  "type": "string",
                  "description": "The identifier of the registrant's company. Can be set when the user is created, but is otherwise read-only."
                },
                "parentOrganizationName": {
                  "type": "string",
                  "description": "The name of the organization that the registrant represents.",
                  "readOnly": true
                },
                "password": {
                  "type": "string",
                  "description": "The registrant's password. In database mode, the password is encrypted before it is saved in the database. In LDAP mode, the password is only stored on the LDAP server. This parameter is only specified during user creation/update and will never be returned in the response."
                },
                "passwordVerify": {
                  "type": "string",
                  "description": "The registrant's password, entered a second time. This parameter is only specified during user creation/update and will never be returned in the response."
                },
                "personTitle": {
                  "type": "string",
                  "description": "The title of the user whose address is being entered (for example, Dr., Rev., Mr., or Ms.)."
                },
                "preferredCurrency": {
                  "type": "string",
                  "description": "The registrant's preferred currency for transactions."
                },
                "preferredLanguageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying registrant's preferred language."
                },
                "profileType": {
                  "default": "B",
                  "description": "The registrant's user profile type. This parameter can only be set during user registration. Available values: <br> * B - A business user profile.<br> * C - A customer user profile.",
                  "enum": [
                    "B",
                    "C"
                  ],
                  "type": "string"
                },
                "receiveSmsNotification": {
                  "type": "boolean",
                  "description": "Indicates whether the user wants to receive order notification SMS text messages."
                },
                "registrationType": {
                  "type": "string",
                  "description": "The registrant's registration type. Available values: <br>* A - Sell-side Administrator.<br> * G - Guest Customer.<br> * R - Registered Customer.<br> * S - Site Administrator.<br>",
                  "readOnly": true
                },
                "secretary": {
                  "type": "string",
                  "description": "The name of the registrant's secretary."
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Whether or not the user's account is enabled. Available values: <br> * 0 - Disabled.<br> * 1 - Enabled."
                },
                "userAccountPolicyId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying a user account policy."
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Update a user.",
        "produces": [
          "application/json"
        ],
        "summary": "Update a user.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Users-updateUser"
      }
    },
    "/rest/admin/v2/users/{id}/roles": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "description": "The model for list user roles.",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "roleId": {
                        "description": "The unique numeric ID for identifying the role.",
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                      }
                    }
                  },
                  "description": "The items."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Get user roles by ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Get user roles by ID.",
        "operationId": "Users-getUserRoles"
      }
    },
    "/rest/admin/v2/users": {
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the user.",
                  "readOnly": true
                },
                "address": {
                  "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The unique numeric ID for identifying the address."
                    },
                    "address1": {
                      "type": "string",
                      "description": "The first address line of the street address."
                    },
                    "address2": {
                      "type": "string",
                      "description": "The second address line of the street address."
                    },
                    "address3": {
                      "type": "string",
                      "description": "The third address line of the street address."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                    },
                    "bestCallingTime": {
                      "type": "string",
                      "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                    },
                    "billingCode": {
                      "type": "string",
                      "description": "A code to identify the shipping or billing information."
                    },
                    "billingCodeType": {
                      "type": "string",
                      "description": "The code for identifying the system or method of code structure that is used for billing."
                    },
                    "businessTitle": {
                      "type": "string",
                      "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                    },
                    "city": {
                      "type": "string",
                      "description": "The name of the city where the user or organization resides."
                    },
                    "country": {
                      "type": "string",
                      "description": "The name of the country or region where the user or organization resides."
                    },
                    "createdDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time that the address was created."
                    },
                    "email1": {
                      "type": "string",
                      "description": "The primary e-mail."
                    },
                    "email2": {
                      "type": "string",
                      "description": "The secondary e-mail."
                    },
                    "fax1": {
                      "type": "string",
                      "description": "The primary facsimile number."
                    },
                    "fax2": {
                      "type": "string",
                      "description": "The secondary facsimile number."
                    },
                    "field1": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field2": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "field3": {
                      "type": "string",
                      "description": "A customizable field."
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user."
                    },
                    "memberId": {
                      "type": "string",
                      "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "middleName": {
                      "type": "string",
                      "description": "The middle name or initial of the user."
                    },
                    "mobilePhone1": {
                      "type": "string",
                      "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                    },
                    "mobilePhone1Country": {
                      "type": "string",
                      "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                    },
                    "nickName": {
                      "type": "string",
                      "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                    },
                    "officeAddress": {
                      "type": "string",
                      "description": "The internal office address line, such as the internal designation for an employee's desk location."
                    },
                    "organizationName": {
                      "type": "string",
                      "description": "The name of the organization to which the address information applies, if this is a business address."
                    },
                    "organizationUnitName": {
                      "type": "string",
                      "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                    },
                    "packageSuppression": {
                      "type": "integer",
                      "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "personTitle": {
                      "type": "string",
                      "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                    },
                    "phone1": {
                      "type": "string",
                      "description": "The primary phone number."
                    },
                    "phone1Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "phone2": {
                      "type": "string",
                      "description": "The secondary phone number."
                    },
                    "phone2Type": {
                      "type": "string",
                      "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                    },
                    "primary": {
                      "type": "integer",
                      "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                      "default": 0,
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone1": {
                      "type": "integer",
                      "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "publishPhone2": {
                      "type": "integer",
                      "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "selfAddress": {
                      "type": "integer",
                      "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                      "enum": [
                        0,
                        1
                      ],
                      "readOnly": true
                    },
                    "shippingGeoCode": {
                      "type": "string",
                      "description": "The geographical code that identifies a region for the shipping purposes."
                    },
                    "state": {
                      "type": "string",
                      "description": "The name of the state, province, or equivalent where the user or organization resides."
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                      "readOnly": true
                    },
                    "taxGeoCode": {
                      "type": "string",
                      "description": "The geographical tax code that identifies a region for the tax purposes."
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The ZIP or postal code of the user's address."
                    }
                  }
                },
                "age": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The registrant's age."
                },
                "approvalState": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The organizational entity's approval status. Available values: <br>* 0 - pending approval.<br>* 1 - approved.<br>* 2 - rejected.<br>* null - approval not applicable, so considered approved.",
                  "readOnly": true
                },
                "createdDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time that the registrant was registered.",
                  "readOnly": true
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date",
                  "description": "The registrant's date of birth."
                },
                "departmentNumber": {
                  "type": "string",
                  "description": "The department identifier for the registrant."
                },
                "description": {
                  "type": "string",
                  "description": "A description of the registrant."
                },
                "displayName": {
                  "type": "string",
                  "description": "Name that is used when the name of the registrant displays in a summary list."
                },
                "distinguishedName": {
                  "type": "string",
                  "description": "Distinguished name (DN) of the registrant, for LDAP use.",
                  "readOnly": true
                },
                "employeeId": {
                  "type": "string",
                  "description": "The registrant's ID with their employer."
                },
                "employeeType": {
                  "type": "string",
                  "description": "The registrant's status as an employee (for example, regular, permanent, contractor, or part time)."
                },
                "gender": {
                  "type": "string",
                  "description": "The registrant's gender."
                },
                "updatedDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time representing the most recent update to the registrant's information.",
                  "readOnly": true
                },
                "lastSession": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time representing the most recent login time of the user.",
                  "readOnly": true
                },
                "logonId": {
                  "type": "string",
                  "description": "The registrant's logon ID. Leading and trailing spaces are trimmed. When the system is configured with LDAP, the following restrictions apply, since the logonId is part of the distinguished name: <br>* Must not begin with a '#'.<br>* Must not contain equals sign, comma, plus sign, quotation mark, backslash, angle brackets or semicolon."
                },
                "manager": {
                  "type": "string",
                  "description": "The name of the registrant's manager."
                },
                "parentOrganizationId": {
                  "type": "string",
                  "description": "The identifier of the registrant's company. Can be set when the user is created, but is otherwise read-only."
                },
                "parentOrganizationName": {
                  "type": "string",
                  "description": "The name of the organization that the registrant represents.",
                  "readOnly": true
                },
                "password": {
                  "type": "string",
                  "description": "The registrant's password. In database mode, the password is encrypted before it is saved in the database. In LDAP mode, the password is only stored on the LDAP server. This parameter is only specified during user creation/update and will never be returned in the response."
                },
                "passwordVerify": {
                  "type": "string",
                  "description": "The registrant's password, entered a second time. This parameter is only specified during user creation/update and will never be returned in the response."
                },
                "personTitle": {
                  "type": "string",
                  "description": "The title of the user whose address is being entered (for example, Dr., Rev., Mr., or Ms.)."
                },
                "preferredCurrency": {
                  "type": "string",
                  "description": "The registrant's preferred currency for transactions."
                },
                "preferredLanguageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying registrant's preferred language."
                },
                "profileType": {
                  "default": "B",
                  "description": "The registrant's user profile type. This parameter can only be set during user registration. Available values: <br> * B - A business user profile.<br> * C - A customer user profile.",
                  "enum": [
                    "B",
                    "C"
                  ],
                  "type": "string"
                },
                "receiveSmsNotification": {
                  "type": "boolean",
                  "description": "Indicates whether the user wants to receive order notification SMS text messages."
                },
                "registrationType": {
                  "type": "string",
                  "description": "The registrant's registration type. Available values: <br>* A - Sell-side Administrator.<br> * G - Guest Customer.<br> * R - Registered Customer.<br> * S - Site Administrator.<br>",
                  "readOnly": true
                },
                "secretary": {
                  "type": "string",
                  "description": "The name of the registrant's secretary."
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Whether or not the user's account is enabled. Available values: <br> * 0 - Disabled.<br> * 1 - Enabled."
                },
                "userAccountPolicyId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying a user account policy."
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Create a user.",
        "produces": [
          "application/json"
        ],
        "summary": "Create a user.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Users-createUser"
      }
    },
    "/rest/admin/v2/users/{id}/site-attributes": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "description": "A list of custom attributes.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "items": {
                  "type": "array",
                  "items": {
                    "description": "A custom attribute that is associated with a user or organization and that is store-independent.",
                    "properties": {
                      "name": {
                        "description": "The name of the custom attribute.",
                        "type": "string"
                      },
                      "values": {
                        "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "2019-01-11 10:44:30.360000"
                        }
                      }
                    }
                  },
                  "description": "The items."
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "default": 100000,
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Get a user's site-level, store-independent attributes.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a user's site-level, store-independent attributes.",
        "operationId": "Users-findSiteAttributesByUserId"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that is store-independent.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Create a user site-level attribute.",
        "produces": [
          "application/json"
        ],
        "summary": "Create a user site-level attribute.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Users-createUserSiteAttribute"
      }
    },
    "/rest/admin/v2/users/{id}/site-attributes/{name}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that is store-independent.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "name": "name",
            "type": "string",
            "description": "The name of the attribute to use as the search term.",
            "in": "path"
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Get a user's site-level, store-independent attribute by user ID and attribute name.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a user's site-level, store-independent attribute by user ID and attribute name.",
        "operationId": "Users-findSiteAttributeByUserId"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "name": "name",
            "type": "string",
            "description": "The name of the attribute to be updated.",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that is store-independent.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Update a user's site-level attributes. Attribute values are merged at the attribute level, rather than the attribute value level. For example, if an attribute has the following values '[a, b]', after performing an update using values '[c, d, e]', the attribute values would be '[c, d, e]'.",
        "produces": [
          "application/json"
        ],
        "summary": "Update a user's site-level attributes.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Users-updateUserSiteAttribute"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "name": "name",
            "type": "string",
            "description": "The name of the attribute to be deleted.",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "default": 100000,
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Delete a site-level attribute of a user.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete a site-level attribute of a user.",
        "operationId": "Users-deleteUserSiteAttribute"
      }
    },
    "/rest/admin/v2/users/{id}/store-attributes": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "description": "A list of custom attributes.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "items": {
                  "type": "array",
                  "items": {
                    "description": "A custom attribute that is associated with a user or organization and that applies to a specific store.",
                    "properties": {
                      "name": {
                        "description": "The name of the custom attribute.",
                        "type": "string"
                      },
                      "storeId": {
                        "description": "The unique numeric ID of the store where the attribute applies. This parameter can only be set at attribute creation time.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "values": {
                        "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "2019-01-11 10:44:30.360000"
                        }
                      }
                    }
                  },
                  "description": "The items."
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID of the store where the attribute applies.",
            "in": "query",
            "name": "storeId"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "default": 100000,
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Get a user's store-specific attributes.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a user's store-specific attributes.",
        "operationId": "Users-findStoreMemberAttributesByUserId"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that applies to a specific store.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "storeId": {
                  "description": "The unique numeric ID of the store where the attribute applies. This parameter can only be set at attribute creation time.",
                  "type": "integer",
                  "format": "int32"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Create a store-specific user attribute.",
        "produces": [
          "application/json"
        ],
        "summary": "Create a store-specific user attribute.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Users-createUserStoreMemberAttribute"
      }
    },
    "/rest/admin/v2/users/{id}/store-attributes/storeId:{storeId},name:{name}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that applies to a specific store.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "storeId": {
                  "description": "The unique numeric ID of the store where the attribute applies. This parameter can only be set at attribute creation time.",
                  "type": "integer",
                  "format": "int32"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID of the store where the attribute applies.",
            "in": "path",
            "name": "storeId"
          },
          {
            "required": true,
            "name": "name",
            "type": "string",
            "description": "The name of the attribute to use as the search term.",
            "in": "path"
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Get a user's store-specific attribute by user ID, store ID and attribute name.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a user's store-specific attribute by user ID, store ID and attribute name.",
        "operationId": "Users-findStoreMemberAttributeByUserId"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID of the store where the attribute applies.",
            "in": "path",
            "name": "storeId"
          },
          {
            "required": true,
            "type": "string",
            "description": "The name of this attribute.",
            "in": "path",
            "name": "name"
          },
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "description": "A custom attribute that is associated with a user or organization and that applies to a specific store.",
              "properties": {
                "name": {
                  "description": "The name of the custom attribute.",
                  "type": "string"
                },
                "storeId": {
                  "description": "The unique numeric ID of the store where the attribute applies. This parameter can only be set at attribute creation time.",
                  "type": "integer",
                  "format": "int32"
                },
                "values": {
                  "description": "The value or values of the custom attribute. The data type of an attribute value can vary depending on the attribute. Ensure that any value specified is a valid string representation of the attribute's data type. The supported data types are INTEGER, STRING, FLOAT and DATETIME.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-01-11 10:44:30.360000"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Update a user's store-specific attributes. Attribute values are merged at the attribute level, rather than the attribute value level. For example, if an attribute has the following values '[a, b]', after performing an update using values '[c, d, e]', the attribute values would be '[c, d, e]'.",
        "produces": [
          "application/json"
        ],
        "summary": "Update a user's store-specific attributes.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Users-updateUserStoreMemberAttribute"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the user.",
            "in": "path",
            "name": "id"
          },
          {
            "required": true,
            "name": "storeId",
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID of the store where the attribute applies.",
            "in": "path"
          },
          {
            "required": true,
            "name": "name",
            "type": "string",
            "description": "The name of the attribute to be deleted.",
            "in": "path"
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Delete a store-specific attribute of a user.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete a store-specific attribute of a user.",
        "operationId": "Users-deleteUserStoreMemberAttribute"
      }
    },
    "/rest/admin/v2/addresses": {
      "get": {
        "responses": {
          "200": {
            "description": "The request completed successfully.",
            "schema": {
              "description": "The model for list of addresses.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0
                },
                "items": {
                  "type": "array",
                  "items": {
                    "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique numeric ID for identifying the address."
                      },
                      "address1": {
                        "type": "string",
                        "description": "The first address line of the street address."
                      },
                      "address2": {
                        "type": "string",
                        "description": "The second address line of the street address."
                      },
                      "address3": {
                        "type": "string",
                        "description": "The third address line of the street address."
                      },
                      "addressType": {
                        "type": "string",
                        "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                      },
                      "bestCallingTime": {
                        "type": "string",
                        "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                      },
                      "billingCode": {
                        "type": "string",
                        "description": "A code to identify the shipping or billing information."
                      },
                      "billingCodeType": {
                        "type": "string",
                        "description": "The code for identifying the system or method of code structure that is used for billing."
                      },
                      "businessTitle": {
                        "type": "string",
                        "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                      },
                      "city": {
                        "type": "string",
                        "description": "The name of the city where the user or organization resides."
                      },
                      "country": {
                        "type": "string",
                        "description": "The name of the country or region where the user or organization resides."
                      },
                      "createdDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time that the address was created."
                      },
                      "email1": {
                        "type": "string",
                        "description": "The primary e-mail."
                      },
                      "email2": {
                        "type": "string",
                        "description": "The secondary e-mail."
                      },
                      "fax1": {
                        "type": "string",
                        "description": "The primary facsimile number."
                      },
                      "fax2": {
                        "type": "string",
                        "description": "The secondary facsimile number."
                      },
                      "field1": {
                        "type": "string",
                        "description": "A customizable field."
                      },
                      "field2": {
                        "type": "string",
                        "description": "A customizable field."
                      },
                      "field3": {
                        "type": "string",
                        "description": "A customizable field."
                      },
                      "firstName": {
                        "type": "string",
                        "description": "The first name of the user."
                      },
                      "lastName": {
                        "type": "string",
                        "description": "The last name of the user."
                      },
                      "memberId": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                      },
                      "middleName": {
                        "type": "string",
                        "description": "The middle name or initial of the user."
                      },
                      "mobilePhone1": {
                        "type": "string",
                        "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                      },
                      "mobilePhone1Country": {
                        "type": "string",
                        "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                      },
                      "nickName": {
                        "type": "string",
                        "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                      },
                      "officeAddress": {
                        "type": "string",
                        "description": "The internal office address line, such as the internal designation for an employee's desk location."
                      },
                      "organizationName": {
                        "type": "string",
                        "description": "The name of the organization to which the address information applies, if this is a business address."
                      },
                      "organizationUnitName": {
                        "type": "string",
                        "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                      },
                      "packageSuppression": {
                        "type": "integer",
                        "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                        "enum": [
                          0,
                          1
                        ]
                      },
                      "personTitle": {
                        "type": "string",
                        "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                      },
                      "phone1": {
                        "type": "string",
                        "description": "The primary phone number."
                      },
                      "phone1Type": {
                        "type": "string",
                        "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                      },
                      "phone2": {
                        "type": "string",
                        "description": "The secondary phone number."
                      },
                      "phone2Type": {
                        "type": "string",
                        "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                      },
                      "primary": {
                        "type": "integer",
                        "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                        "default": 0,
                        "enum": [
                          0,
                          1
                        ]
                      },
                      "publishPhone1": {
                        "type": "integer",
                        "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                        "enum": [
                          0,
                          1
                        ]
                      },
                      "publishPhone2": {
                        "type": "integer",
                        "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                        "enum": [
                          0,
                          1
                        ]
                      },
                      "selfAddress": {
                        "type": "integer",
                        "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                        "enum": [
                          0,
                          1
                        ],
                        "readOnly": true
                      },
                      "shippingGeoCode": {
                        "type": "string",
                        "description": "The geographical code that identifies a region for the shipping purposes."
                      },
                      "state": {
                        "type": "string",
                        "description": "The name of the state, province, or equivalent where the user or organization resides."
                      },
                      "status": {
                        "type": "string",
                        "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                        "readOnly": true
                      },
                      "taxGeoCode": {
                        "type": "string",
                        "description": "The geographical tax code that identifies a region for the tax purposes."
                      },
                      "zipCode": {
                        "type": "string",
                        "description": "The ZIP or postal code of the user's address."
                      }
                    }
                  },
                  "description": "The items."
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. Some of the inputs provided to the request are not valid."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned."
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "Limits search results to only include users whose last name matches the value of this parameter.",
            "in": "query",
            "name": "lastName",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include users whose first name matches the value of this parameter.",
            "in": "query",
            "name": "firstName",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include users whose member ID matches the value of this parameter.",
            "in": "query",
            "name": "memberId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name,-id will order the items first based on the name value in ascending order, and then by their ID value in descending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addresses"
        ],
        "description": "Get a collection of addresses.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of addresses.",
        "operationId": "Addresses-getAddresses"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "body",
            "description": "Request body. The \"id\" field will be generated and it should not be part of the request body. The \"selfAddress\" and \"status\" fields are managed and it cannot be specified.",
            "name": "body",
            "schema": {
              "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The unique numeric ID for identifying the address."
                },
                "address1": {
                  "type": "string",
                  "description": "The first address line of the street address."
                },
                "address2": {
                  "type": "string",
                  "description": "The second address line of the street address."
                },
                "address3": {
                  "type": "string",
                  "description": "The third address line of the street address."
                },
                "addressType": {
                  "type": "string",
                  "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                },
                "bestCallingTime": {
                  "type": "string",
                  "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                },
                "billingCode": {
                  "type": "string",
                  "description": "A code to identify the shipping or billing information."
                },
                "billingCodeType": {
                  "type": "string",
                  "description": "The code for identifying the system or method of code structure that is used for billing."
                },
                "businessTitle": {
                  "type": "string",
                  "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                },
                "city": {
                  "type": "string",
                  "description": "The name of the city where the user or organization resides."
                },
                "country": {
                  "type": "string",
                  "description": "The name of the country or region where the user or organization resides."
                },
                "createdDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time that the address was created."
                },
                "email1": {
                  "type": "string",
                  "description": "The primary e-mail."
                },
                "email2": {
                  "type": "string",
                  "description": "The secondary e-mail."
                },
                "fax1": {
                  "type": "string",
                  "description": "The primary facsimile number."
                },
                "fax2": {
                  "type": "string",
                  "description": "The secondary facsimile number."
                },
                "field1": {
                  "type": "string",
                  "description": "A customizable field."
                },
                "field2": {
                  "type": "string",
                  "description": "A customizable field."
                },
                "field3": {
                  "type": "string",
                  "description": "A customizable field."
                },
                "firstName": {
                  "type": "string",
                  "description": "The first name of the user."
                },
                "lastName": {
                  "type": "string",
                  "description": "The last name of the user."
                },
                "memberId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                },
                "middleName": {
                  "type": "string",
                  "description": "The middle name or initial of the user."
                },
                "mobilePhone1": {
                  "type": "string",
                  "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                },
                "mobilePhone1Country": {
                  "type": "string",
                  "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                },
                "nickName": {
                  "type": "string",
                  "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                },
                "officeAddress": {
                  "type": "string",
                  "description": "The internal office address line, such as the internal designation for an employee's desk location."
                },
                "organizationName": {
                  "type": "string",
                  "description": "The name of the organization to which the address information applies, if this is a business address."
                },
                "organizationUnitName": {
                  "type": "string",
                  "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                },
                "packageSuppression": {
                  "type": "integer",
                  "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                  "enum": [
                    0,
                    1
                  ]
                },
                "personTitle": {
                  "type": "string",
                  "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                },
                "phone1": {
                  "type": "string",
                  "description": "The primary phone number."
                },
                "phone1Type": {
                  "type": "string",
                  "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                },
                "phone2": {
                  "type": "string",
                  "description": "The secondary phone number."
                },
                "phone2Type": {
                  "type": "string",
                  "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                },
                "primary": {
                  "type": "integer",
                  "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                  "default": 0,
                  "enum": [
                    0,
                    1
                  ]
                },
                "publishPhone1": {
                  "type": "integer",
                  "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                  "enum": [
                    0,
                    1
                  ]
                },
                "publishPhone2": {
                  "type": "integer",
                  "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                  "enum": [
                    0,
                    1
                  ]
                },
                "selfAddress": {
                  "type": "integer",
                  "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                  "enum": [
                    0,
                    1
                  ],
                  "readOnly": true
                },
                "shippingGeoCode": {
                  "type": "string",
                  "description": "The geographical code that identifies a region for the shipping purposes."
                },
                "state": {
                  "type": "string",
                  "description": "The name of the state, province, or equivalent where the user or organization resides."
                },
                "status": {
                  "type": "string",
                  "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                  "readOnly": true
                },
                "taxGeoCode": {
                  "type": "string",
                  "description": "The geographical tax code that identifies a region for the tax purposes."
                },
                "zipCode": {
                  "type": "string",
                  "description": "The ZIP or postal code of the user's address."
                }
              }
            }
          }
        ],
        "tags": [
          "Addresses"
        ],
        "description": "Create an address.",
        "produces": [
          "application/json"
        ],
        "summary": "Create an address.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Addresses-createAddress"
      }
    },
    "/rest/admin/v2/addresses/{id}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The unique numeric ID for identifying the address."
                },
                "address1": {
                  "type": "string",
                  "description": "The first address line of the street address."
                },
                "address2": {
                  "type": "string",
                  "description": "The second address line of the street address."
                },
                "address3": {
                  "type": "string",
                  "description": "The third address line of the street address."
                },
                "addressType": {
                  "type": "string",
                  "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                },
                "bestCallingTime": {
                  "type": "string",
                  "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                },
                "billingCode": {
                  "type": "string",
                  "description": "A code to identify the shipping or billing information."
                },
                "billingCodeType": {
                  "type": "string",
                  "description": "The code for identifying the system or method of code structure that is used for billing."
                },
                "businessTitle": {
                  "type": "string",
                  "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                },
                "city": {
                  "type": "string",
                  "description": "The name of the city where the user or organization resides."
                },
                "country": {
                  "type": "string",
                  "description": "The name of the country or region where the user or organization resides."
                },
                "createdDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time that the address was created."
                },
                "email1": {
                  "type": "string",
                  "description": "The primary e-mail."
                },
                "email2": {
                  "type": "string",
                  "description": "The secondary e-mail."
                },
                "fax1": {
                  "type": "string",
                  "description": "The primary facsimile number."
                },
                "fax2": {
                  "type": "string",
                  "description": "The secondary facsimile number."
                },
                "field1": {
                  "type": "string",
                  "description": "A customizable field."
                },
                "field2": {
                  "type": "string",
                  "description": "A customizable field."
                },
                "field3": {
                  "type": "string",
                  "description": "A customizable field."
                },
                "firstName": {
                  "type": "string",
                  "description": "The first name of the user."
                },
                "lastName": {
                  "type": "string",
                  "description": "The last name of the user."
                },
                "memberId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                },
                "middleName": {
                  "type": "string",
                  "description": "The middle name or initial of the user."
                },
                "mobilePhone1": {
                  "type": "string",
                  "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                },
                "mobilePhone1Country": {
                  "type": "string",
                  "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                },
                "nickName": {
                  "type": "string",
                  "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                },
                "officeAddress": {
                  "type": "string",
                  "description": "The internal office address line, such as the internal designation for an employee's desk location."
                },
                "organizationName": {
                  "type": "string",
                  "description": "The name of the organization to which the address information applies, if this is a business address."
                },
                "organizationUnitName": {
                  "type": "string",
                  "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                },
                "packageSuppression": {
                  "type": "integer",
                  "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                  "enum": [
                    0,
                    1
                  ]
                },
                "personTitle": {
                  "type": "string",
                  "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                },
                "phone1": {
                  "type": "string",
                  "description": "The primary phone number."
                },
                "phone1Type": {
                  "type": "string",
                  "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                },
                "phone2": {
                  "type": "string",
                  "description": "The secondary phone number."
                },
                "phone2Type": {
                  "type": "string",
                  "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                },
                "primary": {
                  "type": "integer",
                  "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                  "default": 0,
                  "enum": [
                    0,
                    1
                  ]
                },
                "publishPhone1": {
                  "type": "integer",
                  "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                  "enum": [
                    0,
                    1
                  ]
                },
                "publishPhone2": {
                  "type": "integer",
                  "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                  "enum": [
                    0,
                    1
                  ]
                },
                "selfAddress": {
                  "type": "integer",
                  "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                  "enum": [
                    0,
                    1
                  ],
                  "readOnly": true
                },
                "shippingGeoCode": {
                  "type": "string",
                  "description": "The geographical code that identifies a region for the shipping purposes."
                },
                "state": {
                  "type": "string",
                  "description": "The name of the state, province, or equivalent where the user or organization resides."
                },
                "status": {
                  "type": "string",
                  "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                  "readOnly": true
                },
                "taxGeoCode": {
                  "type": "string",
                  "description": "The geographical tax code that identifies a region for the tax purposes."
                },
                "zipCode": {
                  "type": "string",
                  "description": "The ZIP or postal code of the user's address."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned."
          },
          {
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID for identifying the address.",
            "in": "path",
            "name": "id"
          }
        ],
        "tags": [
          "Addresses"
        ],
        "description": "Get an address by ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Get an address by ID.",
        "operationId": "Addresses-findByAddressId"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The unique numeric ID for identifying the address.",
            "in": "path",
            "name": "id"
          }
        ],
        "tags": [
          "Addresses"
        ],
        "description": "Delete an address  by ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete an address by ID.",
        "operationId": "Addresses-deleteByAddressId"
      }
    },
    "/rest/admin/v2/addresses/{id}/new-version": {
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "integer",
            "format": "int64",
            "name": "id",
            "description": "The unique numeric ID for identifying the address.",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "Request body. The \"selfAddress\" and \"status\" fields are managed and it cannot be specified.",
            "name": "body",
            "schema": {
              "description": "The addresses of users and organizations. An address can be the a user's own address or alternative address that is used for billing or shipping purposes.",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The unique numeric ID for identifying the address."
                },
                "address1": {
                  "type": "string",
                  "description": "The first address line of the street address."
                },
                "address2": {
                  "type": "string",
                  "description": "The second address line of the street address."
                },
                "address3": {
                  "type": "string",
                  "description": "The third address line of the street address."
                },
                "addressType": {
                  "type": "string",
                  "description": "The usage of the address. Available values:<br> * SB - The address is used both as a shipping and a billing address.<br> * S - The address is used as a shipping address.<br> * B - The address is used as a billing address."
                },
                "bestCallingTime": {
                  "type": "string",
                  "description": "Indicates the preferred time of day when the user is to be contacted. Available values:<br> * D - Daytime.<br> * E - Evening."
                },
                "billingCode": {
                  "type": "string",
                  "description": "A code to identify the shipping or billing information."
                },
                "billingCodeType": {
                  "type": "string",
                  "description": "The code for identifying the system or method of code structure that is used for billing."
                },
                "businessTitle": {
                  "type": "string",
                  "description": "The business title for the user, such as a Manager or Chief Executive Officer."
                },
                "city": {
                  "type": "string",
                  "description": "The name of the city where the user or organization resides."
                },
                "country": {
                  "type": "string",
                  "description": "The name of the country or region where the user or organization resides."
                },
                "createdDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time that the address was created."
                },
                "email1": {
                  "type": "string",
                  "description": "The primary e-mail."
                },
                "email2": {
                  "type": "string",
                  "description": "The secondary e-mail."
                },
                "fax1": {
                  "type": "string",
                  "description": "The primary facsimile number."
                },
                "fax2": {
                  "type": "string",
                  "description": "The secondary facsimile number."
                },
                "field1": {
                  "type": "string",
                  "description": "A customizable field."
                },
                "field2": {
                  "type": "string",
                  "description": "A customizable field."
                },
                "field3": {
                  "type": "string",
                  "description": "A customizable field."
                },
                "firstName": {
                  "type": "string",
                  "description": "The first name of the user."
                },
                "lastName": {
                  "type": "string",
                  "description": "The last name of the user."
                },
                "memberId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the member that this address belongs to. A member can be an organization or a user. If memberId is not specified, then the default is the current user (the user who is logging on). The value cannot be set or updated by users or organizations REST APIs."
                },
                "middleName": {
                  "type": "string",
                  "description": "The middle name or initial of the user."
                },
                "mobilePhone1": {
                  "type": "string",
                  "description": "The primary mobile device number of the user, used for text messaging. The number should be specified without the country code. The country code is specified as the mobilePhone1Country value."
                },
                "mobilePhone1Country": {
                  "type": "string",
                  "description": "The country code of the mobile device phone number. This country is used for country code resolution when sending text messages. This data is required when the mobilePhone1 column is used."
                },
                "nickName": {
                  "type": "string",
                  "description": "The unique name or identifier for the address. A nickname must be unique among the addresses for a specific user or organization. The nickname for a user's address must also be different than the logon ID for a user so that the address does not conflict with the user's self-address. The self-address is created when the account for the user is first created. Multiple users or organizations can each have an address with the same nickname. The value cannot be set or updated by users or organizations REST APIs."
                },
                "officeAddress": {
                  "type": "string",
                  "description": "The internal office address line, such as the internal designation for an employee's desk location."
                },
                "organizationName": {
                  "type": "string",
                  "description": "The name of the organization to which the address information applies, if this is a business address."
                },
                "organizationUnitName": {
                  "type": "string",
                  "description": "The name of the organizational unit to which the address information applies, if this is a business address."
                },
                "packageSuppression": {
                  "type": "integer",
                  "description": "Specifies whether or not to include package inserts. Available values:<br> * 1 - Include.<br> * 0 - Do not include.",
                  "enum": [
                    0,
                    1
                  ]
                },
                "personTitle": {
                  "type": "string",
                  "description": "The personal title of the user that is associated with the address. For example, Dr., Rev., Mr. or Ms."
                },
                "phone1": {
                  "type": "string",
                  "description": "The primary phone number."
                },
                "phone1Type": {
                  "type": "string",
                  "description": "The type of phone that is used for the primary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                },
                "phone2": {
                  "type": "string",
                  "description": "The secondary phone number."
                },
                "phone2Type": {
                  "type": "string",
                  "description": "The type of phone that is used for the secondary phone number. For example, TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile."
                },
                "primary": {
                  "type": "integer",
                  "description": "Indicates that the address is the primary address for the user or organization when the user or organization has multiple addresses associated, such as when a user or organization has multiple shipping addresses. The value cannot be set or updated by users or organizations REST APIs. Available values:<br> * 1 - The address is the primary address.<br> * 0 - (Default value) The address is an alternate address.",
                  "default": 0,
                  "enum": [
                    0,
                    1
                  ]
                },
                "publishPhone1": {
                  "type": "integer",
                  "description": "Whether to list the primary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                  "enum": [
                    0,
                    1
                  ]
                },
                "publishPhone2": {
                  "type": "integer",
                  "description": "Whether to list the secondary phone number. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                  "enum": [
                    0,
                    1
                  ]
                },
                "selfAddress": {
                  "type": "integer",
                  "description": "Indicates whether the address is associated with the registration of the user or organization. This value cannot be edited after address creation. Available values: <br> * 1 - Yes.<br> * 0 - No.",
                  "enum": [
                    0,
                    1
                  ],
                  "readOnly": true
                },
                "shippingGeoCode": {
                  "type": "string",
                  "description": "The geographical code that identifies a region for the shipping purposes."
                },
                "state": {
                  "type": "string",
                  "description": "The name of the state, province, or equivalent where the user or organization resides."
                },
                "status": {
                  "type": "string",
                  "description": "Indicates the status of the address. When an address is created, its status is marked with a \"P\", meaning \"permanent\", and indicates that the address is the current address. When an address is updated, a new record of the address is created with the updates. The new record is marked with a \"P\" and the earlier record is marked with a \"T\", meaning \"temporary\", which indicates that the address is the historical address. This value cannot be edited.",
                  "readOnly": true
                },
                "taxGeoCode": {
                  "type": "string",
                  "description": "The geographical tax code that identifies a region for the tax purposes."
                },
                "zipCode": {
                  "type": "string",
                  "description": "The ZIP or postal code of the user's address."
                }
              }
            }
          }
        ],
        "tags": [
          "Addresses"
        ],
        "description": "Updates an address by creating a new updated version. After the update, the new address will have status \"P\" (permanent) and the old address will have status \"T\" (historical).",
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new version of an address.",
        "operationId": "Addresses-updateByAddressId"
      }
    },
    "/rest/admin/v2/roles": {
      "get": {
        "tags": [
          "roles"
        ],
        "description": "Get a collection of roles.",
        "summary": "Get a collection of roles.",
        "operationId": "getRoles",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The unique numeric ID for identifying the role.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the role.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of the role.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of roles.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique numeric ID for identifying the role."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the role."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the role."
                      },
                      "links": {
                        "type": "object",
                        "description": "Links to related resources.",
                        "properties": {
                          "descriptions": {
                            "type": "object",
                            "description": "The role description relationships of a role.",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "The URL of the link."
                              }
                            }
                          }
                        }
                      }
                    },
                    "description": "The role."
                  }
                }
              },
              "description": "A collection of roles."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "post": {
        "tags": [
          "roles"
        ],
        "description": "Create a role.",
        "summary": "Create a role.",
        "operationId": "createRole",
        "parameters": [
          {
            "in": "body",
            "name": "Role",
            "description": "The role.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the role."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the role."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the role."
                },
                "links": {
                  "type": "object",
                  "description": "Links to related resources.",
                  "properties": {
                    "descriptions": {
                      "type": "object",
                      "description": "The role description relationships of a role.",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "The URL of the link."
                        }
                      }
                    }
                  }
                }
              },
              "description": "The role."
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      }
    },
    "/rest/admin/v2/roles/{id}": {
      "get": {
        "tags": [
          "roles"
        ],
        "description": "Get a role.",
        "summary": "Get a role.",
        "operationId": "getRoleById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The role.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the role."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the role."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the role."
                },
                "links": {
                  "type": "object",
                  "description": "Links to related resources.",
                  "properties": {
                    "descriptions": {
                      "type": "object",
                      "description": "The role description relationships of a role.",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "The URL of the link."
                        }
                      }
                    }
                  }
                }
              },
              "description": "The role."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "roles"
        ],
        "description": "Delete a role.",
        "summary": "Delete a role.",
        "operationId": "deleteRoleById",
        "parameters": [],
        "responses": {
          "204": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "roles"
        ],
        "description": "Update a role.",
        "summary": "Update a role.",
        "operationId": "updateRoleById",
        "parameters": [
          {
            "in": "body",
            "name": "Role",
            "description": "The role.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the role."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the role."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the role."
                },
                "links": {
                  "type": "object",
                  "description": "Links to related resources.",
                  "properties": {
                    "descriptions": {
                      "type": "object",
                      "description": "The role description relationships of a role.",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "The URL of the link."
                        }
                      }
                    }
                  }
                }
              },
              "description": "The role."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The unique numeric ID for identifying the role.",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/rest/admin/v2/roles/{id}/role-descriptions": {
      "get": {
        "tags": [
          "roles"
        ],
        "description": "Get the role descriptions for a role.",
        "summary": "Get the role descriptions for a role.",
        "operationId": "getRoleDescriptionsOfRole",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of role descriptions.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique numeric ID for identifying the role."
                      },
                      "languageId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The language of the description. For a list of integer language identifiers, refer to the Knowledge Center."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The name of the role."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the role."
                      }
                    },
                    "description": "The role description."
                  }
                }
              },
              "description": "A collection of role descriptions."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The unique numeric ID for identifying the role.",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/rest/admin/v2/roles/assignable": {
      "get": {
        "description": "Gets the roles that the current user can assign in the specified organization.",
        "summary": "Gets the roles that the current user can assign in the specified organization.",
        "operationId": "getAssignableRoles",
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "description": "The unique numeric ID for identifying the organization.",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of roles.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique numeric ID for identifying the role."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the role."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the role."
                      },
                      "links": {
                        "type": "object",
                        "description": "Links to related resources.",
                        "properties": {
                          "descriptions": {
                            "type": "object",
                            "description": "The role description relationships of a role.",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "The URL of the link."
                              }
                            }
                          }
                        }
                      }
                    },
                    "description": "The role."
                  }
                }
              },
              "description": "A collection of roles."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        },
        "tags": [
          "roles"
        ]
      }
    },
    "/rest/admin/v2/role-assignments": {
      "get": {
        "tags": [
          "Role Assignments"
        ],
        "description": "Get a collection of role assignments.",
        "operationId": "getRoleAssignments",
        "parameters": [
          {
            "name": "memberId",
            "in": "query",
            "description": "The unique numeric ID for identifying the user or organization of the member that has a role.",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleId",
            "in": "query",
            "description": "The unique numeric ID for identifying the role.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "The unique numeric ID for identifying the organization where the role is being played.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of role assignments.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "description": "A role assigned to a user or to an organization.",
                    "properties": {
                      "memberId": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the user or organization of the member that has a role."
                      },
                      "organizationId": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the organization where the role is being played."
                      },
                      "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique numeric ID for identifying the role."
                      }
                    }
                  }
                }
              },
              "description": "A collection of role assignments."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Get a collection of role assignments."
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "description": "Request body.",
            "schema": {
              "description": "A role assigned to a user or to an organization.",
              "properties": {
                "memberId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the user or organization of the member that has a role."
                },
                "organizationId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the organization where the role is being played."
                },
                "roleId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the role."
                }
              }
            }
          }
        ],
        "tags": [
          "Role Assignments"
        ],
        "description": "Create a role assignment.",
        "produces": [
          "application/json"
        ],
        "summary": "Create a role assignment.",
        "consumes": [
          "application/json"
        ],
        "operationId": "RoleAssignment-createRoleAssignment"
      }
    },
    "/rest/admin/v2/role-assignments/memberId:{memberId},roleId:{roleId},organizationId:{organizationId}": {
      "get": {
        "tags": [
          "Role Assignments"
        ],
        "description": "Get a role assignment.",
        "operationId": "getRoleAssignmentById",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "description": "The unique numeric ID for identifying the user or organization of the member that has a role.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The unique numeric ID for identifying the role.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The unique numeric ID for identifying the organization where the role is being played.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The role assignment.",
            "schema": {
              "description": "A role assigned to a user or to an organization.",
              "properties": {
                "memberId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the user or organization of the member that has a role."
                },
                "organizationId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the organization where the role is being played."
                },
                "roleId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the role."
                }
              }
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Get a role assignment."
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "name": "memberId",
            "type": "string",
            "description": "The unique numeric ID for identifying the user or organization of the member that has a role.",
            "in": "path"
          },
          {
            "required": true,
            "name": "organizationId",
            "type": "string",
            "description": "The unique numeric ID for identifying the organization where the role is being played.",
            "in": "path"
          },
          {
            "required": true,
            "name": "roleId",
            "type": "integer",
            "format": "int32",
            "description": "The unique numeric ID for identifying the role.",
            "in": "path"
          }
        ],
        "tags": [
          "Role Assignments"
        ],
        "description": "Delete a role assignment.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete a role assignment.",
        "operationId": "RoleAssignment-deleteRoleAssignment"
      }
    },
    "/rest/admin/v2/approval-statuses": {
      "get": {
        "operationId": "getApprovalStatuses",
        "tags": [
          "Approval Status"
        ],
        "parameters": [
          {
            "description": "Query by flow type identifier which must be one of the values listed below.\n * 10001 - RFQ response\n * 10002 - Order approval\n * 10003 - Contract approval\n * 10004 - Buyer approval\n * 10005 - Seller org approval\n * 10006 - Seller approval",
            "enum": [
              "10001",
              "10002",
              "10003",
              "10004",
              "10005",
              "10006"
            ],
            "in": "query",
            "name": "flowTypeId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Query by approval request submitter's first name.",
            "in": "query",
            "name": "submitterFirstName",
            "required": false,
            "type": "string"
          },
          {
            "description": "Query by approval request submitter's middle name.",
            "in": "query",
            "name": "submitterMiddleName",
            "required": false,
            "type": "string"
          },
          {
            "description": "Query by approval request submitter's last name.",
            "in": "query",
            "name": "submitterLastName",
            "required": false,
            "type": "string"
          },
          {
            "description": "Query by approval request start time formatted as standard ISO date.",
            "format": "date",
            "in": "query",
            "name": "startSubmitDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Query by approval request end time formatted as standard ISO date.",
            "format": "date",
            "in": "query",
            "name": "endSubmitDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Query by approval request status.",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "Query by approval request entity ID, such as order ID.",
            "in": "query",
            "name": "entityId",
            "required": false,
            "type": "string"
          },
          {
            "description": "Query by approver ID. Only returns approval requests that can be approved by the current user.",
            "in": "query",
            "name": "approverId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name,-id will order the items first based on the name value in ascending order, and then by their ID value in descending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include users whose first name, last name or logon ID matches the value of this parameter.",
            "in": "query",
            "name": "searchString",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of approval status records in total based on the query parameters specified."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique identifier of the approval status record."
                      },
                      "approveDate": {
                        "format": "date",
                        "type": "string",
                        "description": "The time when the approval record was acted on; that is, the time it was approved or rejected."
                      },
                      "approverGroupId": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the member group to which the approver belongs, making the approver an approver for this record."
                      },
                      "approverId": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the user eligible to approve or reject the requested action."
                      },
                      "comment": {
                        "type": "string",
                        "description": "Comments entered by approver during approval or rejection."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "A reference to an approval status object instance within a flow type."
                      },
                      "flowId": {
                        "type": "string",
                        "description": "Reference to the flow for the steps in the approval process."
                      },
                      "flowTypeId": {
                        "type": "string",
                        "description": "Reference to the type of flow that determines the type of business object included in the approval. There are different IDs for each type of approval, including RFQ, order, user registration, contract, organization registration approvals and so on."
                      },
                      "stateId": {
                        "type": "string",
                        "description": "The current state of the approval flow."
                      },
                      "status": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Approval status of this action. Valid values are as follows: \n0=pending\n1=approved\n2=rejected."
                      },
                      "submitDate": {
                        "format": "date",
                        "type": "string",
                        "description": "The time that the action requiring approval was requested."
                      },
                      "submitterId": {
                        "type": "string",
                        "description": "ID of the user requesting the action which needs approval."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of approval status records returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first approval status record."
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Some of the inputs provided to the request aren't valid.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Not authenticated. The user session isn't valid.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "The user isn't authorized to perform the specified request.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error. Additional details will be contained on the server logs.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Find all approval status records available to the current user."
      }
    },
    "/rest/admin/v2/approval-statuses/{id}": {
      "get": {
        "operationId": "findByApprovalStatusId",
        "tags": [
          "Approval Status"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the approval status record.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the approval status record."
                },
                "approveDate": {
                  "format": "date",
                  "type": "string",
                  "description": "The time when the approval record was acted on; that is, the time it was approved or rejected."
                },
                "approverGroupId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the member group to which the approver belongs, making the approver an approver for this record."
                },
                "approverId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the user eligible to approve or reject the requested action."
                },
                "comment": {
                  "type": "string",
                  "description": "Comments entered by approver during approval or rejection."
                },
                "entityId": {
                  "type": "string",
                  "description": "A reference to an approval status object instance within a flow type."
                },
                "flowId": {
                  "type": "string",
                  "description": "Reference to the flow for the steps in the approval process."
                },
                "flowTypeId": {
                  "type": "string",
                  "description": "Reference to the type of flow that determines the type of business object included in the approval. There are different IDs for each type of approval, including RFQ, order, user registration, contract, organization registration approvals and so on."
                },
                "stateId": {
                  "type": "string",
                  "description": "The current state of the approval flow."
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Approval status of this action. Valid values are as follows: \n0=pending\n1=approved\n2=rejected."
                },
                "submitDate": {
                  "format": "date",
                  "type": "string",
                  "description": "The time that the action requiring approval was requested."
                },
                "submitterId": {
                  "type": "string",
                  "description": "ID of the user requesting the action which needs approval."
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Some of the inputs provided to the request aren't valid.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Not authenticated. The user session isn't valid.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "The user isn't authorized to perform the specified request.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "The specified resource couldn't be found.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error. Additional details will be contained on the server logs.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Find an approval status record by its ID."
      },
      "patch": {
        "operationId": "updateApprovalStatus",
        "tags": [
          "Approval Status"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the approval status record.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request body for updating an approval status record.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the approval status record."
                },
                "approveDate": {
                  "format": "date",
                  "type": "string",
                  "description": "The time when the approval record was acted on; that is, the time it was approved or rejected."
                },
                "approverGroupId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the member group to which the approver belongs, making the approver an approver for this record."
                },
                "approverId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the user eligible to approve or reject the requested action."
                },
                "comment": {
                  "type": "string",
                  "description": "Comments entered by approver during approval or rejection."
                },
                "entityId": {
                  "type": "string",
                  "description": "A reference to an approval status object instance within a flow type."
                },
                "flowId": {
                  "type": "string",
                  "description": "Reference to the flow for the steps in the approval process."
                },
                "flowTypeId": {
                  "type": "string",
                  "description": "Reference to the type of flow that determines the type of business object included in the approval. There are different IDs for each type of approval, including RFQ, order, user registration, contract, organization registration approvals and so on."
                },
                "stateId": {
                  "type": "string",
                  "description": "The current state of the approval flow."
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Approval status of this action. Valid values are as follows: \n0=pending\n1=approved\n2=rejected."
                },
                "submitDate": {
                  "format": "date",
                  "type": "string",
                  "description": "The time that the action requiring approval was requested."
                },
                "submitterId": {
                  "type": "string",
                  "description": "ID of the user requesting the action which needs approval."
                }
              }
            }
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. Some of the inputs provided to the request aren't valid.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Not authenticated. The user session isn't valid.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "The user isn't authorized to perform the specified request.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error. Additional details will be contained on the server logs.",
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Update the status to approve (1) or reject (2) and add an optional comment to the approval status record. Note that only an approval record that is pending approval. For example, an approval status record with a status of 0 can be approved or rejected. Only the status and comment property values from the body are used when updating the approval record."
      }
    },
    "/rest/admin/v2/approval-types": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "role": {
                        "description": "A comma separated list of role names that are associated with this approval type.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the approval type",
                        "type": "string"
                      },
                      "description": {
                        "description": "The description of the approval type.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the approval type.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "The request completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name,-description will order the items first based on the name value in ascending order, and then by their description value in descending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include approval types with a description that matches the value of this parameter.",
            "in": "query",
            "name": "searchString",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Approval Types"
        ],
        "description": "Get a collection of approval types.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection approval types.",
        "consumes": [
          "application/json"
        ],
        "operationId": "getApprovalTypes"
      }
    },
    "/rest/admin/v2/approval-types/{id}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "role": {
                  "description": "A comma separated list of role names that are associated with this approval type.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the approval type",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the approval type.",
                  "type": "string"
                },
                "id": {
                  "description": "The unique numeric ID for identifying the approval type.",
                  "type": "string"
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the approval type.",
            "in": "path",
            "name": "id"
          }
        ],
        "tags": [
          "Approval Types"
        ],
        "description": "Get an approval type by ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Get an approval type by ID.",
        "operationId": "getApprovalTypeById"
      }
    },
    "/rest/admin/v2/approval-type-assignments": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "organizationId": {
                        "description": "The unique numeric ID of the organization to which the approval type is assigned.",
                        "type": "string"
                      },
                      "approvalTypeId": {
                        "description": "The unique numeric ID of the approval type that is assigned to the organization.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "type": "string",
            "required": false,
            "description": "Limits results to only include approval type assignments with the specified organization ID",
            "in": "query",
            "name": "organizationId"
          },
          {
            "type": "string",
            "required": false,
            "description": "Limits results to only include approval type assignments with the specified approval type ID.",
            "in": "query",
            "name": "approvalTypeId"
          }
        ],
        "tags": [
          "Approval Types"
        ],
        "description": "Gets a collection of approval type assignments.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of approval type assignments.",
        "operationId": "getApprovalTypeAssignments"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "properties": {
                "organizationId": {
                  "description": "The unique numeric ID of the organization to which the approval type is assigned.",
                  "type": "string"
                },
                "approvalTypeId": {
                  "description": "The unique numeric ID of the approval type that is assigned to the organization.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Approval Types"
        ],
        "description": "Create an approval type assignment.",
        "produces": [
          "application/json"
        ],
        "summary": "Create an approval type assignment.",
        "consumes": [
          "application/json"
        ],
        "operationId": "createApprovalTypeAssignment"
      }
    },
    "/rest/admin/v2/approval-type-assignments/organizationId:{organizationId},approvalTypeId:{approvalTypeId}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "organizationId": {
                  "description": "The unique numeric ID of the organization to which the approval type is assigned.",
                  "type": "string"
                },
                "approvalTypeId": {
                  "description": "The unique numeric ID of the approval type that is assigned to the organization.",
                  "type": "string"
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID of the organization to which the approval type is assigned.",
            "in": "path",
            "name": "organizationId"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID of the approval type that is assigned to the organization.",
            "in": "path",
            "name": "approvalTypeId"
          }
        ],
        "tags": [
          "Approval Types"
        ],
        "description": "Get an approval type assignment by ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Get an approval type assignment by ID.",
        "operationId": "getApprovalTypeAssignmentsById"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID of the organization to which the approval type is assigned.",
            "in": "path",
            "name": "organizationId"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID of the approval type that is assigned to the organization.",
            "in": "path",
            "name": "approvalTypeId"
          }
        ],
        "tags": [
          "Approval Types"
        ],
        "description": "Delete an approval type assignment.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete an approval type assignment.",
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteApprovalTypeAssignment"
      }
    },
    "/rest/admin/v2/user-account-policy-descriptions": {
      "get": {
        "tags": [
          "user-account-policy-descriptions"
        ],
        "description": "Get a collection of user account policy descriptions.",
        "operationId": "getUserAccountPolicyDescriptions",
        "parameters": [
          {
            "name": "userAccountPolicyId",
            "in": "query",
            "description": "The unique numeric ID for identifying the user account policy.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of the user account policy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "The language of the description. For a list of integer language identifiers, please refer to the Knowledge Center.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of user account policy descriptions.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userAccountPolicyId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique numeric ID for identifying the user account policy."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the user account policy."
                      },
                      "languageId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The language of the description. For a list of integer language identifiers, please refer to the Knowledge Center."
                      }
                    },
                    "description": "The description of a user account policy."
                  }
                }
              },
              "description": "A collection of user account policy descriptions."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-account-policy-descriptions"
        ],
        "description": "Create a description for a user account policy.",
        "operationId": "createUserAccountPolicyDescription",
        "parameters": [
          {
            "in": "body",
            "name": "UserAccountPolicyDescription",
            "description": "The description of a user account policy.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userAccountPolicyId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the user account policy."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the user account policy."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language of the description. For a list of integer language identifiers, please refer to the Knowledge Center."
                }
              },
              "description": "The description of a user account policy."
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      }
    },
    "/rest/admin/v2/user-account-policy-descriptions/userAccountPolicyId:{userAccountPolicyId},languageId:{languageId}": {
      "get": {
        "tags": [
          "user-account-policy-descriptions"
        ],
        "description": "Get a description for a user account policy.",
        "operationId": "getUserAccountPolicyDescriptionById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The description of a user account policy.",
            "schema": {
              "type": "object",
              "properties": {
                "userAccountPolicyId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the user account policy."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the user account policy."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language of the description. For a list of integer language identifiers, please refer to the Knowledge Center."
                }
              },
              "description": "The description of a user account policy."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-account-policy-descriptions"
        ],
        "description": "Delete a description for a user account policy.",
        "operationId": "deleteUserAccountPolicyDescriptionById",
        "parameters": [],
        "responses": {
          "204": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user-account-policy-descriptions"
        ],
        "description": "Update a description for a user account policy.",
        "operationId": "updateUserAccountPolicyDescriptionById",
        "parameters": [
          {
            "in": "body",
            "name": "UserAccountPolicyDescription",
            "description": "The description of a user account policy.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userAccountPolicyId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the user account policy."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the user account policy."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language of the description. For a list of integer language identifiers, please refer to the Knowledge Center."
                }
              },
              "description": "The description of a user account policy."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "parameters": [
        {
          "name": "userAccountPolicyId",
          "in": "path",
          "description": "The unique numeric ID for identifying the user account policy.",
          "required": true,
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "languageId",
          "in": "path",
          "description": "The language of the description. For a list of integer language identifiers, please refer to the Knowledge Center.",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/rest/admin/v2/states": {
      "get": {
        "tags": [
          "states"
        ],
        "description": "Get a collection of states and provinces.",
        "operationId": "getStates",
        "parameters": [
          {
            "name": "stateAbbr",
            "in": "query",
            "description": "The unique abbreviation for identifying the state or province.",
            "required": false,
            "type": "string"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "The integer for identifying the language of the description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the state or province.",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryAbbr",
            "in": "query",
            "description": "The country or region abbreviation code for the state or province.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of states and provinces.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "stateAbbr": {
                        "type": "string",
                        "description": "The unique abbreviation for identifying the state or province."
                      },
                      "languageId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The integer for identifying the language of the description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the state or province."
                      },
                      "countryAbbr": {
                        "type": "string",
                        "description": "The country or region abbreviation code for the state or province."
                      }
                    },
                    "description": "The state or province of a user or organization address."
                  }
                }
              },
              "description": "A collection of states and provinces."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      }
    },
    "/rest/admin/v2/states/stateAbbr:{stateAbbr},languageId:{languageId}": {
      "get": {
        "tags": [
          "states"
        ],
        "description": "Get a state or province by ID.",
        "operationId": "getStateById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The state or province of a user or organization address.",
            "schema": {
              "type": "object",
              "properties": {
                "stateAbbr": {
                  "type": "string",
                  "description": "The unique abbreviation for identifying the state or province."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The integer for identifying the language of the description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the state or province."
                },
                "countryAbbr": {
                  "type": "string",
                  "description": "The country or region abbreviation code for the state or province."
                }
              },
              "description": "The state or province of a user or organization address."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "parameters": [
        {
          "name": "stateAbbr",
          "in": "path",
          "description": "The unique abbreviation for identifying the state or province.",
          "required": true,
          "type": "string"
        },
        {
          "name": "languageId",
          "in": "path",
          "description": "The integer for identifying the language of the description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/rest/admin/v2/countries": {
      "get": {
        "tags": [
          "countries"
        ],
        "description": "Get a collection of countries and regions.",
        "operationId": "getCountries",
        "parameters": [
          {
            "name": "countryAbbr",
            "in": "query",
            "description": "The unique abbreviation for identifying the country or region.",
            "required": false,
            "type": "string"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "The integer for identifying the language of the description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the country or region.",
            "required": false,
            "type": "string"
          },
          {
            "name": "callingCode",
            "in": "query",
            "description": "The designated calling code of the country or region for placing international calls.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of countries and regions.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "countryAbbr": {
                        "type": "string",
                        "description": "The unique abbreviation for identifying the country or region."
                      },
                      "languageId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The integer for identifying the language of the description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the country or region."
                      },
                      "callingCode": {
                        "type": "string",
                        "description": "The designated calling code of the country or region for placing international calls."
                      }
                    },
                    "description": "The country or region of a user or organization address."
                  }
                }
              },
              "description": "A collection of countries and regions."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      }
    },
    "/rest/admin/v2/countries/countryAbbr:{countryAbbr},languageId:{languageId}": {
      "get": {
        "tags": [
          "countries"
        ],
        "description": "Get a country or region by ID.",
        "operationId": "getCountryById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The country or region of a user or organization address.",
            "schema": {
              "type": "object",
              "properties": {
                "countryAbbr": {
                  "type": "string",
                  "description": "The unique abbreviation for identifying the country or region."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The integer for identifying the language of the description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the country or region."
                },
                "callingCode": {
                  "type": "string",
                  "description": "The designated calling code of the country or region for placing international calls."
                }
              },
              "description": "The country or region of a user or organization address."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "parameters": [
        {
          "name": "countryAbbr",
          "in": "path",
          "description": "The unique abbreviation for identifying the country or region.",
          "required": true,
          "type": "string"
        },
        {
          "name": "languageId",
          "in": "path",
          "description": "The integer for identifying the language of the description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/rest/admin/v2/member-groups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "collectionFormat": "multi",
            "description": "The member group's usage. Available values:\n* GeneralPurpose - A general grouping of persons and/or organizations.\n* AccessControl - A group of persons specified as part of an access control policy.\n* CustomerTerritory - A group of customers, typically by territory.\n* CustomerServiceRepresentative - A group of customer service representatives, which in turn can have customer territory groups or customer accounts assigned to them.\n* RegisteredCustomer - A group of buyer organizations that have registered to a seller organization.\n* CustomerPrice - A group of customers that are entitled to get a contract's terms and conditions; often used to enforce custom pricing for the group. Customer price groups can comprise any user, who can be included and excluded explicitly.\n* CustomerSegment - A group of persons based on common attributes, for example demographics or purchase history. This group is used in marketing campaigns.\n* RFQResponseApproval - An organization that wants request for quote (RFQ) response approvals owns a member group of this usage. The group contains persons that are able to approve RFQ responses.\n* DisableInheritedRFQResponseApproval - An organization that does not want request for quote (RFQ) response approvals owns a member group of this usage.\n* OrderProcessApproval - An organization that wants order approvals owns a member group of this usage. The group contains persons that are able to approve orders.\n* DisableInheritedOrderProcessApproval - An organization that does not want order approvals owns a member group of this usage.\n* ContractSubmitApproval - An organization that wants contract approvals owns a member group of this usage. The group contains persons that are able to approve contracts.\n* DisableInheritedContractSubmitApproval - An organization that does not want contract approvals owns a member group of this usage.\n* UserRegistrationApproval - An organization that wants user registration approvals owns a member group of this usage. The group contains persons that are able to approve user registration requests.\n* DisableInheritedUserRegistrationApproval - An organization that does not want user registration approvals owns a member group of this usage.\n* ResellerRegistrationApproval - An organization that wants reseller registration approvals owns a member group of this usage. The group contains persons that are able to approve reseller registration requests.\n* DisableInheritedResellerRegistrationApproval - An organization that does not want reseller registration approvals owns a member group of this usage.\n",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "usage",
            "required": true,
            "type": "array"
          },
          {
            "description": "The search string used to search for member groups.",
            "in": "query",
            "name": "searchString",
            "required": false,
            "type": "string"
          },
          {
            "description": "The parent organization id used to filter the member groups.",
            "in": "query",
            "name": "ownerId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name,-type will order the items first based on the name value in ascending order, and then by their type value in descending order. |\nAvailable values:\n* +name\n* -name\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/recordSetStartNumber"
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/maxItems"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of member groups.",
              "properties": {
                "count": {
                  "description": "The number of member groups found.",
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "description": "A member group.",
                    "properties": {
                      "allowExport": {
                        "description": "Allow information about the users in the member group, for example their email addresses and names, to be exported to external applications using the \"Export customer segment\" feature.",
                        "type": "boolean"
                      },
                      "description": {
                        "description": "The member group description.",
                        "type": "string",
                        "x-entity-path": "memberGroupDescription[1]/longDescription"
                      },
                      "exportAll": {
                        "description": "When exporting a member group to external applications, if exportAll is true, then all customers in the member group are exported, including customers that have opted out from marketing communications. If exportAll is false, then only customers that have opted in to receive marketing communications will be exported.",
                        "type": "boolean"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the member group.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "memberGroupIdentifier/uniqueID"
                      },
                      "name": {
                        "description": "The member group name.",
                        "type": "string",
                        "x-entity-path": "memberGroupIdentifier/externalIdentifier/name"
                      },
                      "ownerId": {
                        "description": "Identifier of the organization that owns the member group. Can only be set when the member group is created.",
                        "type": "string",
                        "x-entity-path": "memberGroupIdentifier/externalIdentifier/ownerID"
                      },
                      "storeId": {
                        "description": "The unique numeric ID for identifying the store.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "memberGroupIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                      },
                      "updatedBy": {
                        "description": "Individual who performed the most recent update to the member group.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "lastUpdatedBy"
                      },
                      "updatedDateTime": {
                        "description": "Date and time of the most recent update to the member group.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "lastUpdate"
                      },
                      "usage": {
                        "description": "Member group's usage. Can only be set when member group is created. If multiple usages are specified, only the first one will be applied. Available values:\n* GeneralPurpose - A general grouping of persons and/or organizations.\n* AccessControl - A group of persons specified as part of an access control policy.\n* CustomerTerritory - A group of customers, typically by territory.\n* CustomerServiceRepresentative - A group of customer service representatives, which in turn can have customer territory groups or customer accounts assigned to them.\n* RegisteredCustomer - A group of buyer organizations that have registered to a seller organization.\n* CustomerPrice - A group of customers that are entitled to get a contract's terms and conditions; often used to enforce custom pricing for the group. Customer price groups can comprise any user, who can be included and excluded explicitly.\n* CustomerSegment - A group of persons based on common attributes, for example demographics or purchase history. This group is used in marketing campaigns.\n* RFQResponseApproval - An organization that wants request for quote (RFQ) response approvals owns a member group of this usage. The group contains persons that are able to approve RFQ responses.\n* DisableInheritedRFQResponseApproval - An organization that does not want request for quote (RFQ) response approvals owns a member group of this usage.\n* OrderProcessApproval - An organization that wants order approvals owns a member group of this usage. The group contains persons that are able to approve orders.\n* DisableInheritedOrderProcessApproval - An organization that does not want order approvals owns a member group of this usage.\n* ContractSubmitApproval - An organization that wants contract approvals owns a member group of this usage. The group contains persons that are able to approve contracts.\n* DisableInheritedContractSubmitApproval - An organization that does not want contract approvals owns a member group of this usage.\n* UserRegistrationApproval - An organization that wants user registration approvals owns a member group of this usage. The group contains persons that are able to approve user registration requests.\n* DisableInheritedUserRegistrationApproval - An organization that does not want user registration approvals owns a member group of this usage.\n* ResellerRegistrationApproval - An organization that wants reseller registration approvals owns a member group of this usage. The group contains persons that are able to approve reseller registration requests.\n* DisableInheritedResellerRegistrationApproval - An organization that does not want reseller registration approvals owns a member group of this usage.\n",
                        "enum": [
                          "GeneralPurpose",
                          "AccessControl",
                          "CustomerTerritory",
                          "CustomerServiceRepresentative",
                          "RegisteredCustomer",
                          "CustomerPrice",
                          "CustomerSegment",
                          "RFQResponseApproval",
                          "DisableInheritedRFQResponseApproval",
                          "OrderProcessApproval",
                          "DisableInheritedOrderProcessApproval",
                          "ContractSubmitApproval",
                          "DisableInheritedContractSubmitApproval",
                          "UserRegistrationApproval",
                          "DisableInheritedUserRegistrationApproval",
                          "ResellerRegistrationApproval",
                          "DisableInheritedResellerRegistrationApproval"
                        ],
                        "type": "string",
                        "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupUsageEnumerationType",
                        "x-entity-path": "usage[1]"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/memberGroup"
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "getMemberGroups",
        "summary": "Get member groups by store and usage.",
        "x-expression-builder-class": "com.ibm.commerce.rest.admin.v2.member.MemberGroupExpressionBuilder",
        "x-expression-builder-method": "formatExpression",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "getMemberGroup",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.GetMemberGroupType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A member group.",
              "properties": {
                "allowExport": {
                  "description": "Allow information about the users in the member group, for example their email addresses and names, to be exported to external applications using the \"Export customer segment\" feature.",
                  "type": "boolean"
                },
                "description": {
                  "description": "The member group description.",
                  "type": "string",
                  "x-entity-path": "memberGroupDescription[1]/longDescription"
                },
                "exportAll": {
                  "description": "When exporting a member group to external applications, if exportAll is true, then all customers in the member group are exported, including customers that have opted out from marketing communications. If exportAll is false, then only customers that have opted in to receive marketing communications will be exported.",
                  "type": "boolean"
                },
                "id": {
                  "description": "The unique numeric ID for identifying the member group.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "memberGroupIdentifier/uniqueID"
                },
                "name": {
                  "description": "The member group name.",
                  "type": "string",
                  "x-entity-path": "memberGroupIdentifier/externalIdentifier/name"
                },
                "ownerId": {
                  "description": "Identifier of the organization that owns the member group. Can only be set when the member group is created.",
                  "type": "string",
                  "x-entity-path": "memberGroupIdentifier/externalIdentifier/ownerID"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "memberGroupIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                },
                "updatedBy": {
                  "description": "Individual who performed the most recent update to the member group.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "lastUpdatedBy"
                },
                "updatedDateTime": {
                  "description": "Date and time of the most recent update to the member group.",
                  "format": "date-time",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "lastUpdate"
                },
                "usage": {
                  "description": "Member group's usage. Can only be set when member group is created. If multiple usages are specified, only the first one will be applied. Available values:\n* GeneralPurpose - A general grouping of persons and/or organizations.\n* AccessControl - A group of persons specified as part of an access control policy.\n* CustomerTerritory - A group of customers, typically by territory.\n* CustomerServiceRepresentative - A group of customer service representatives, which in turn can have customer territory groups or customer accounts assigned to them.\n* RegisteredCustomer - A group of buyer organizations that have registered to a seller organization.\n* CustomerPrice - A group of customers that are entitled to get a contract's terms and conditions; often used to enforce custom pricing for the group. Customer price groups can comprise any user, who can be included and excluded explicitly.\n* CustomerSegment - A group of persons based on common attributes, for example demographics or purchase history. This group is used in marketing campaigns.\n* RFQResponseApproval - An organization that wants request for quote (RFQ) response approvals owns a member group of this usage. The group contains persons that are able to approve RFQ responses.\n* DisableInheritedRFQResponseApproval - An organization that does not want request for quote (RFQ) response approvals owns a member group of this usage.\n* OrderProcessApproval - An organization that wants order approvals owns a member group of this usage. The group contains persons that are able to approve orders.\n* DisableInheritedOrderProcessApproval - An organization that does not want order approvals owns a member group of this usage.\n* ContractSubmitApproval - An organization that wants contract approvals owns a member group of this usage. The group contains persons that are able to approve contracts.\n* DisableInheritedContractSubmitApproval - An organization that does not want contract approvals owns a member group of this usage.\n* UserRegistrationApproval - An organization that wants user registration approvals owns a member group of this usage. The group contains persons that are able to approve user registration requests.\n* DisableInheritedUserRegistrationApproval - An organization that does not want user registration approvals owns a member group of this usage.\n* ResellerRegistrationApproval - An organization that wants reseller registration approvals owns a member group of this usage. The group contains persons that are able to approve reseller registration requests.\n* DisableInheritedResellerRegistrationApproval - An organization that does not want reseller registration approvals owns a member group of this usage.\n",
                  "enum": [
                    "GeneralPurpose",
                    "AccessControl",
                    "CustomerTerritory",
                    "CustomerServiceRepresentative",
                    "RegisteredCustomer",
                    "CustomerPrice",
                    "CustomerSegment",
                    "RFQResponseApproval",
                    "DisableInheritedRFQResponseApproval",
                    "OrderProcessApproval",
                    "DisableInheritedOrderProcessApproval",
                    "ContractSubmitApproval",
                    "DisableInheritedContractSubmitApproval",
                    "UserRegistrationApproval",
                    "DisableInheritedUserRegistrationApproval",
                    "ResellerRegistrationApproval",
                    "DisableInheritedResellerRegistrationApproval"
                  ],
                  "type": "string",
                  "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupUsageEnumerationType",
                  "x-entity-path": "usage[1]"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupType"
            },
            "x-entity-path": "dataArea/memberGroup[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of the member group.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "createMemberGroup",
        "summary": "Create a member group.",
        "x-action-code": "Add",
        "x-expression-template": "/MemberGroup[1]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "processMemberGroup",
        "x-flow-class": "com.ibm.commerce.rest.bod.PostBodMappingFlow",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.ProcessMemberGroupType"
      }
    },
    "/rest/admin/v2/member-groups/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "deleteMemberGroup",
        "summary": "Delete a member group by unique identifier.",
        "x-action-code": "Delete",
        "x-expression-template": "/MemberGroup[1]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "processMemberGroup",
        "x-flow-class": "com.ibm.commerce.rest.bod.DeleteBodMappingFlow",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.ProcessMemberGroupType"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A member group.",
              "properties": {
                "allowExport": {
                  "description": "Allow information about the users in the member group, for example their email addresses and names, to be exported to external applications using the \"Export customer segment\" feature.",
                  "type": "boolean"
                },
                "description": {
                  "description": "The member group description.",
                  "type": "string",
                  "x-entity-path": "memberGroupDescription[1]/longDescription"
                },
                "exportAll": {
                  "description": "When exporting a member group to external applications, if exportAll is true, then all customers in the member group are exported, including customers that have opted out from marketing communications. If exportAll is false, then only customers that have opted in to receive marketing communications will be exported.",
                  "type": "boolean"
                },
                "id": {
                  "description": "The unique numeric ID for identifying the member group.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "memberGroupIdentifier/uniqueID"
                },
                "name": {
                  "description": "The member group name.",
                  "type": "string",
                  "x-entity-path": "memberGroupIdentifier/externalIdentifier/name"
                },
                "ownerId": {
                  "description": "Identifier of the organization that owns the member group. Can only be set when the member group is created.",
                  "type": "string",
                  "x-entity-path": "memberGroupIdentifier/externalIdentifier/ownerID"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "memberGroupIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                },
                "updatedBy": {
                  "description": "Individual who performed the most recent update to the member group.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "lastUpdatedBy"
                },
                "updatedDateTime": {
                  "description": "Date and time of the most recent update to the member group.",
                  "format": "date-time",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "lastUpdate"
                },
                "usage": {
                  "description": "Member group's usage. Can only be set when member group is created. If multiple usages are specified, only the first one will be applied. Available values:\n* GeneralPurpose - A general grouping of persons and/or organizations.\n* AccessControl - A group of persons specified as part of an access control policy.\n* CustomerTerritory - A group of customers, typically by territory.\n* CustomerServiceRepresentative - A group of customer service representatives, which in turn can have customer territory groups or customer accounts assigned to them.\n* RegisteredCustomer - A group of buyer organizations that have registered to a seller organization.\n* CustomerPrice - A group of customers that are entitled to get a contract's terms and conditions; often used to enforce custom pricing for the group. Customer price groups can comprise any user, who can be included and excluded explicitly.\n* CustomerSegment - A group of persons based on common attributes, for example demographics or purchase history. This group is used in marketing campaigns.\n* RFQResponseApproval - An organization that wants request for quote (RFQ) response approvals owns a member group of this usage. The group contains persons that are able to approve RFQ responses.\n* DisableInheritedRFQResponseApproval - An organization that does not want request for quote (RFQ) response approvals owns a member group of this usage.\n* OrderProcessApproval - An organization that wants order approvals owns a member group of this usage. The group contains persons that are able to approve orders.\n* DisableInheritedOrderProcessApproval - An organization that does not want order approvals owns a member group of this usage.\n* ContractSubmitApproval - An organization that wants contract approvals owns a member group of this usage. The group contains persons that are able to approve contracts.\n* DisableInheritedContractSubmitApproval - An organization that does not want contract approvals owns a member group of this usage.\n* UserRegistrationApproval - An organization that wants user registration approvals owns a member group of this usage. The group contains persons that are able to approve user registration requests.\n* DisableInheritedUserRegistrationApproval - An organization that does not want user registration approvals owns a member group of this usage.\n* ResellerRegistrationApproval - An organization that wants reseller registration approvals owns a member group of this usage. The group contains persons that are able to approve reseller registration requests.\n* DisableInheritedResellerRegistrationApproval - An organization that does not want reseller registration approvals owns a member group of this usage.\n",
                  "enum": [
                    "GeneralPurpose",
                    "AccessControl",
                    "CustomerTerritory",
                    "CustomerServiceRepresentative",
                    "RegisteredCustomer",
                    "CustomerPrice",
                    "CustomerSegment",
                    "RFQResponseApproval",
                    "DisableInheritedRFQResponseApproval",
                    "OrderProcessApproval",
                    "DisableInheritedOrderProcessApproval",
                    "ContractSubmitApproval",
                    "DisableInheritedContractSubmitApproval",
                    "UserRegistrationApproval",
                    "DisableInheritedUserRegistrationApproval",
                    "ResellerRegistrationApproval",
                    "DisableInheritedResellerRegistrationApproval"
                  ],
                  "type": "string",
                  "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupUsageEnumerationType",
                  "x-entity-path": "usage[1]"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupType"
            },
            "x-entity-path": "dataArea/memberGroup[1]"
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "getMemberGroup",
        "summary": "Get a member group by unique identifier.",
        "x-expression-template": "{_wcf.ap='IBM_Admin_Details'}/MemberGroup[MemberGroupIdentifier[(UniqueID='{id}')]]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "getMemberGroup",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.GetMemberGroupType"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A member group.",
              "properties": {
                "allowExport": {
                  "description": "Allow information about the users in the member group, for example their email addresses and names, to be exported to external applications using the \"Export customer segment\" feature.",
                  "type": "boolean"
                },
                "description": {
                  "description": "The member group description.",
                  "type": "string",
                  "x-entity-path": "memberGroupDescription[1]/longDescription"
                },
                "exportAll": {
                  "description": "When exporting a member group to external applications, if exportAll is true, then all customers in the member group are exported, including customers that have opted out from marketing communications. If exportAll is false, then only customers that have opted in to receive marketing communications will be exported.",
                  "type": "boolean"
                },
                "id": {
                  "description": "The unique numeric ID for identifying the member group.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "memberGroupIdentifier/uniqueID"
                },
                "name": {
                  "description": "The member group name.",
                  "type": "string",
                  "x-entity-path": "memberGroupIdentifier/externalIdentifier/name"
                },
                "ownerId": {
                  "description": "Identifier of the organization that owns the member group. Can only be set when the member group is created.",
                  "type": "string",
                  "x-entity-path": "memberGroupIdentifier/externalIdentifier/ownerID"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "memberGroupIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                },
                "updatedBy": {
                  "description": "Individual who performed the most recent update to the member group.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "lastUpdatedBy"
                },
                "updatedDateTime": {
                  "description": "Date and time of the most recent update to the member group.",
                  "format": "date-time",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "lastUpdate"
                },
                "usage": {
                  "description": "Member group's usage. Can only be set when member group is created. If multiple usages are specified, only the first one will be applied. Available values:\n* GeneralPurpose - A general grouping of persons and/or organizations.\n* AccessControl - A group of persons specified as part of an access control policy.\n* CustomerTerritory - A group of customers, typically by territory.\n* CustomerServiceRepresentative - A group of customer service representatives, which in turn can have customer territory groups or customer accounts assigned to them.\n* RegisteredCustomer - A group of buyer organizations that have registered to a seller organization.\n* CustomerPrice - A group of customers that are entitled to get a contract's terms and conditions; often used to enforce custom pricing for the group. Customer price groups can comprise any user, who can be included and excluded explicitly.\n* CustomerSegment - A group of persons based on common attributes, for example demographics or purchase history. This group is used in marketing campaigns.\n* RFQResponseApproval - An organization that wants request for quote (RFQ) response approvals owns a member group of this usage. The group contains persons that are able to approve RFQ responses.\n* DisableInheritedRFQResponseApproval - An organization that does not want request for quote (RFQ) response approvals owns a member group of this usage.\n* OrderProcessApproval - An organization that wants order approvals owns a member group of this usage. The group contains persons that are able to approve orders.\n* DisableInheritedOrderProcessApproval - An organization that does not want order approvals owns a member group of this usage.\n* ContractSubmitApproval - An organization that wants contract approvals owns a member group of this usage. The group contains persons that are able to approve contracts.\n* DisableInheritedContractSubmitApproval - An organization that does not want contract approvals owns a member group of this usage.\n* UserRegistrationApproval - An organization that wants user registration approvals owns a member group of this usage. The group contains persons that are able to approve user registration requests.\n* DisableInheritedUserRegistrationApproval - An organization that does not want user registration approvals owns a member group of this usage.\n* ResellerRegistrationApproval - An organization that wants reseller registration approvals owns a member group of this usage. The group contains persons that are able to approve reseller registration requests.\n* DisableInheritedResellerRegistrationApproval - An organization that does not want reseller registration approvals owns a member group of this usage.\n",
                  "enum": [
                    "GeneralPurpose",
                    "AccessControl",
                    "CustomerTerritory",
                    "CustomerServiceRepresentative",
                    "RegisteredCustomer",
                    "CustomerPrice",
                    "CustomerSegment",
                    "RFQResponseApproval",
                    "DisableInheritedRFQResponseApproval",
                    "OrderProcessApproval",
                    "DisableInheritedOrderProcessApproval",
                    "ContractSubmitApproval",
                    "DisableInheritedContractSubmitApproval",
                    "UserRegistrationApproval",
                    "DisableInheritedUserRegistrationApproval",
                    "ResellerRegistrationApproval",
                    "DisableInheritedResellerRegistrationApproval"
                  ],
                  "type": "string",
                  "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupUsageEnumerationType",
                  "x-entity-path": "usage[1]"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupType"
            },
            "x-entity-path": "dataArea/memberGroup[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "updateMemberGroup",
        "summary": "Update a member group by unique identifier.",
        "x-action-code": "Change",
        "x-action-expressions": [
          {
            "x-action-code": "Change",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupDescription[1]",
            "x-expression-template": "/MemberGroup[1]/MemberGroupDescription[1]"
          }
        ],
        "x-expression-template": "/MemberGroup[1]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "changeMemberGroup",
        "x-flow-class": "com.ibm.commerce.rest.bod.PatchBodMappingFlow",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.ChangeMemberGroupType"
      }
    },
    "/rest/admin/v2/member-groups/{id}/activate": {
      "post": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "activateMemberGroup",
        "summary": "Activates a member group by assembling the information for the group that is within the member group condition element authoring database tables. The information is transformed and persisted to the runtime database tables for use in evaluating whether a user implicitly belongs to a member group.",
        "x-action-code": "Activate",
        "x-expression-template": "/MemberGroup[1]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "processMemberGroup",
        "x-flow-class": "com.ibm.commerce.rest.bod.PostBodMappingFlow",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.ProcessMemberGroupType"
      }
    },
    "/rest/admin/v2/member-groups/{id}/condition-elements": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-context-data": "uniqueId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of member group condition elements.",
              "properties": {
                "count": {
                  "description": "The number of condition elements found.",
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "description": "A member group condition element.",
                    "properties": {
                      "id": {
                        "description": "The unique numeric ID for identifying the condition element.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "memberGroupConditionElementIdentifier/uniqueID"
                      },
                      "name": {
                        "description": "The name of the condition element. Can only be set when the member group condition element is created.",
                        "type": "string",
                        "x-entity-path": "memberGroupConditionElementIdentifier/name"
                      },
                      "nameValuePairVariable": {
                        "description": "The name-value pair variables associated with a member group condition element. Applicable to condition elements of type simpleCondition only. Name-value pairs can only be set when the member group condition element is created. To change a name-value pair, delete the condition element and create it again with the desired name-value pairs.",
                        "items": {
                          "description": "A mapping of variable names to values as qualifiers within the context of a condition element.",
                          "properties": {
                            "id": {
                              "description": "The unique numeric ID for the condition element variable.",
                              "readOnly": true,
                              "type": "string",
                              "x-entity-path": "uniqueID"
                            },
                            "name": {
                              "description": "The name of the condition element variable.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of the condition element variable.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupConditionNameValuePairVariableType"
                        },
                        "type": "array"
                      },
                      "negate": {
                        "description": "Whether or not to negate the condition element. Available values:\n* true - The condition element result is negated.\n* false - The condition element result is not negated.\n",
                        "type": "boolean"
                      },
                      "parentElementName": {
                        "description": "The name of the condition element's parent element.",
                        "type": "string",
                        "x-entity-path": "parentElementIdentifier/name"
                      },
                      "simpleConditionOperator": {
                        "description": "For simple condition elements, the relational operator between the simpleConditionVariable and simpleConditionValue.",
                        "type": "string"
                      },
                      "simpleConditionValue": {
                        "description": "For simple condition elements, the value that simpleConditionVariable will be compared to for determining membership of a member group.",
                        "type": "string"
                      },
                      "simpleConditionVariable": {
                        "description": "For simple condition elements, the variable to assess to determine membership of a member group.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The usage of the member group condition element. Available values:\n* andListCondition - A boolean expression that consists of a list of boolean expressions joined by the boolean AND operator.\n* orListCondition - A boolean expression that consists of a list of boolean expressions joined by the boolean OR operator.\n* simpleCondition - A simple condition boolean expression.  A simple condition consists of a variable, an operator, and a value with optional qualifiers.\n* trueCondition - A boolean expression that always evaluates as true.\n",
                        "enum": [
                          "andListCondition",
                          "orListCondition",
                          "simpleCondition",
                          "trueCondition"
                        ],
                        "type": "string",
                        "x-entity-path": "conditionUsage"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupConditionElementType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/memberGroup[1]/conditionElement"
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "getMemberGroupConditionElements",
        "summary": "Get the condition elements that are part of a member group.",
        "x-expression-template": "{_wcf.ap='IBM_Admin_Details'}/MemberGroup[MemberGroupIdentifier[(UniqueID='{id}')]]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "getMemberGroup",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.GetMemberGroupType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-context-data": "uniqueId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A member group condition element.",
              "properties": {
                "id": {
                  "description": "The unique numeric ID for identifying the condition element.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "memberGroupConditionElementIdentifier/uniqueID"
                },
                "name": {
                  "description": "The name of the condition element. Can only be set when the member group condition element is created.",
                  "type": "string",
                  "x-entity-path": "memberGroupConditionElementIdentifier/name"
                },
                "nameValuePairVariable": {
                  "description": "The name-value pair variables associated with a member group condition element. Applicable to condition elements of type simpleCondition only. Name-value pairs can only be set when the member group condition element is created. To change a name-value pair, delete the condition element and create it again with the desired name-value pairs.",
                  "items": {
                    "description": "A mapping of variable names to values as qualifiers within the context of a condition element.",
                    "properties": {
                      "id": {
                        "description": "The unique numeric ID for the condition element variable.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "uniqueID"
                      },
                      "name": {
                        "description": "The name of the condition element variable.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value of the condition element variable.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupConditionNameValuePairVariableType"
                  },
                  "type": "array"
                },
                "negate": {
                  "description": "Whether or not to negate the condition element. Available values:\n* true - The condition element result is negated.\n* false - The condition element result is not negated.\n",
                  "type": "boolean"
                },
                "parentElementName": {
                  "description": "The name of the condition element's parent element.",
                  "type": "string",
                  "x-entity-path": "parentElementIdentifier/name"
                },
                "simpleConditionOperator": {
                  "description": "For simple condition elements, the relational operator between the simpleConditionVariable and simpleConditionValue.",
                  "type": "string"
                },
                "simpleConditionValue": {
                  "description": "For simple condition elements, the value that simpleConditionVariable will be compared to for determining membership of a member group.",
                  "type": "string"
                },
                "simpleConditionVariable": {
                  "description": "For simple condition elements, the variable to assess to determine membership of a member group.",
                  "type": "string"
                },
                "type": {
                  "description": "The usage of the member group condition element. Available values:\n* andListCondition - A boolean expression that consists of a list of boolean expressions joined by the boolean AND operator.\n* orListCondition - A boolean expression that consists of a list of boolean expressions joined by the boolean OR operator.\n* simpleCondition - A simple condition boolean expression.  A simple condition consists of a variable, an operator, and a value with optional qualifiers.\n* trueCondition - A boolean expression that always evaluates as true.\n",
                  "enum": [
                    "andListCondition",
                    "orListCondition",
                    "simpleCondition",
                    "trueCondition"
                  ],
                  "type": "string",
                  "x-entity-path": "conditionUsage"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupConditionElementType"
            },
            "x-entity-path": "dataArea/memberGroup[1]/conditionElement[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of the member group condition element.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/memberGroup[1]/conditionElement[1]/memberGroupConditionElementIdentifier/uniqueID"
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "createMemberGroupConditionElement",
        "summary": "Create a condition element within a member group.",
        "x-action-code": "Add",
        "x-expression-template": "/MemberGroup[1]/ConditionElement[1]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "changeMemberGroup",
        "x-flow-class": "com.ibm.commerce.rest.bod.PostBodMappingFlow",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.ChangeMemberGroupType",
        "x-request-verb": "change",
        "x-response-verb": "respond"
      }
    },
    "/rest/admin/v2/member-groups/{id}/condition-elements/{elementId}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-context-data": "uniqueId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The unique numeric ID for identifying the condition element.",
            "format": "int32",
            "in": "path",
            "name": "elementId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/memberGroup[1]/conditionElement[1]/memberGroupConditionElementIdentifier/uniqueID"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "deleteMemberGroupConditionElement",
        "summary": "Delete a condition element within a member group.",
        "x-action-code": "Delete",
        "x-expression-template": "/MemberGroup[1]/ConditionElement[1]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "changeMemberGroup",
        "x-flow-class": "com.ibm.commerce.rest.bod.DeleteBodMappingFlow",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.ChangeMemberGroupType",
        "x-request-verb": "change",
        "x-response-verb": "respond"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-context-data": "uniqueId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The unique numeric ID for identifying the condition element.",
            "format": "int32",
            "in": "path",
            "name": "elementId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/memberGroup[1]/conditionElement[1]/memberGroupConditionElementIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A member group condition element.",
              "properties": {
                "id": {
                  "description": "The unique numeric ID for identifying the condition element.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "memberGroupConditionElementIdentifier/uniqueID"
                },
                "name": {
                  "description": "The name of the condition element. Can only be set when the member group condition element is created.",
                  "type": "string",
                  "x-entity-path": "memberGroupConditionElementIdentifier/name"
                },
                "nameValuePairVariable": {
                  "description": "The name-value pair variables associated with a member group condition element. Applicable to condition elements of type simpleCondition only. Name-value pairs can only be set when the member group condition element is created. To change a name-value pair, delete the condition element and create it again with the desired name-value pairs.",
                  "items": {
                    "description": "A mapping of variable names to values as qualifiers within the context of a condition element.",
                    "properties": {
                      "id": {
                        "description": "The unique numeric ID for the condition element variable.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "uniqueID"
                      },
                      "name": {
                        "description": "The name of the condition element variable.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value of the condition element variable.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupConditionNameValuePairVariableType"
                  },
                  "type": "array"
                },
                "negate": {
                  "description": "Whether or not to negate the condition element. Available values:\n* true - The condition element result is negated.\n* false - The condition element result is not negated.\n",
                  "type": "boolean"
                },
                "parentElementName": {
                  "description": "The name of the condition element's parent element.",
                  "type": "string",
                  "x-entity-path": "parentElementIdentifier/name"
                },
                "simpleConditionOperator": {
                  "description": "For simple condition elements, the relational operator between the simpleConditionVariable and simpleConditionValue.",
                  "type": "string"
                },
                "simpleConditionValue": {
                  "description": "For simple condition elements, the value that simpleConditionVariable will be compared to for determining membership of a member group.",
                  "type": "string"
                },
                "simpleConditionVariable": {
                  "description": "For simple condition elements, the variable to assess to determine membership of a member group.",
                  "type": "string"
                },
                "type": {
                  "description": "The usage of the member group condition element. Available values:\n* andListCondition - A boolean expression that consists of a list of boolean expressions joined by the boolean AND operator.\n* orListCondition - A boolean expression that consists of a list of boolean expressions joined by the boolean OR operator.\n* simpleCondition - A simple condition boolean expression.  A simple condition consists of a variable, an operator, and a value with optional qualifiers.\n* trueCondition - A boolean expression that always evaluates as true.\n",
                  "enum": [
                    "andListCondition",
                    "orListCondition",
                    "simpleCondition",
                    "trueCondition"
                  ],
                  "type": "string",
                  "x-entity-path": "conditionUsage"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupConditionElementType"
            },
            "x-entity-path": "dataArea/memberGroup[1]/conditionElement[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "updateMemberGroupConditionElement",
        "summary": "Update a condition element within a member group.",
        "x-action-code": "Change",
        "x-expression-template": "/MemberGroup[1]/ConditionElement[1]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "changeMemberGroup",
        "x-flow-class": "com.ibm.commerce.rest.bod.PatchBodMappingFlow",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.ChangeMemberGroupType"
      }
    },
    "/rest/admin/v2/member-groups/{id}/descriptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-context-data": "uniqueId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The integer(s) for identifying the language of the member group description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center. Multiple identifiers should be specified as a comma-separated list.",
            "in": "query",
            "name": "dataLanguageIds",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of member group descriptors.",
              "properties": {
                "count": {
                  "description": "The number of descriptions found.",
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "description": "A member group descriptor.",
                    "properties": {
                      "languageId": {
                        "description": "The integer for identifying the language of the member group description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "language"
                      },
                      "longDescription": {
                        "description": "Detailed description of a member group.",
                        "type": "string"
                      },
                      "shortDescription": {
                        "description": "Brief description of a member group.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupDescriptionType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupDescription"
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "getMemberGroupDescriptions",
        "summary": "Get the descriptions that are part of a member group.",
        "x-expression-template": "{_wcf.ap='IBM_Admin_Details';_wcf.dataLanguageIds='{dataLanguageIds}'}/MemberGroup[MemberGroupIdentifier[(UniqueID='{id}')]]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "getMemberGroup",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.GetMemberGroupType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-context-data": "uniqueId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A member group descriptor.",
              "properties": {
                "languageId": {
                  "description": "The integer for identifying the language of the member group description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "language"
                },
                "longDescription": {
                  "description": "Detailed description of a member group.",
                  "type": "string"
                },
                "shortDescription": {
                  "description": "Brief description of a member group.",
                  "type": "string"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupDescriptionType"
            },
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupDescription[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of the member group condition element.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupDescription[1]/language"
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "createMemberGroupDescription",
        "summary": "Create a description within a member group.",
        "x-action-code": "Add",
        "x-expression-template": "/MemberGroup[1]/MemberGroupDescription[1]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "changeMemberGroup",
        "x-flow-class": "com.ibm.commerce.rest.bod.PostBodMappingFlow",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.ChangeMemberGroupType",
        "x-request-verb": "change",
        "x-response-verb": "respond"
      }
    },
    "/rest/admin/v2/member-groups/{id}/descriptions/{languageId}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-context-data": "uniqueId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The integer for identifying the language of the member group description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
            "format": "int32",
            "in": "path",
            "name": "languageId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupDescription[1]/language"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "deleteMemberGroupDescription",
        "summary": "Delete a description within a member group.",
        "x-action-code": "Delete",
        "x-expression-template": "/MemberGroup[1]/MemberGroupDescription[1]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "changeMemberGroup",
        "x-flow-class": "com.ibm.commerce.rest.bod.DeleteBodMappingFlow",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.ChangeMemberGroupType",
        "x-request-verb": "change",
        "x-response-verb": "respond"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-context-data": "uniqueId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The integer for identifying the language of the member group description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
            "format": "int32",
            "in": "path",
            "name": "languageId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A member group descriptor.",
              "properties": {
                "languageId": {
                  "description": "The integer for identifying the language of the member group description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "language"
                },
                "longDescription": {
                  "description": "Detailed description of a member group.",
                  "type": "string"
                },
                "shortDescription": {
                  "description": "Brief description of a member group.",
                  "type": "string"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupDescriptionType"
            },
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupDescription[1]"
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "getMemberGroupDescription",
        "summary": "Get the descriptions that are part of a member group for a specific language.",
        "x-expression-template": "{_wcf.ap='IBM_Admin_Details';_wcf.dataLanguageIds='{languageId}'}/MemberGroup[MemberGroupIdentifier[(UniqueID='{id}')]]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "getMemberGroup",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.GetMemberGroupType"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the member group.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-context-data": "uniqueId",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupIdentifier/uniqueID"
          },
          {
            "description": "The integer for identifying the language of the member group description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
            "format": "int32",
            "in": "path",
            "name": "languageId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupDescription[1]/language"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A member group descriptor.",
              "properties": {
                "languageId": {
                  "description": "The integer for identifying the language of the member group description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "language"
                },
                "longDescription": {
                  "description": "Detailed description of a member group.",
                  "type": "string"
                },
                "shortDescription": {
                  "description": "Brief description of a member group.",
                  "type": "string"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.member.facade.datatypes.MemberGroupDescriptionType"
            },
            "x-entity-path": "dataArea/memberGroup[1]/memberGroupDescription[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Member Groups"
        ],
        "operationId": "updateMemberGroupDescription",
        "summary": "Update a description within a member group.",
        "x-action-code": "Change",
        "x-expression-template": "/MemberGroup[1]/MemberGroupDescription[1]",
        "x-facade-client-class": "com.ibm.commerce.member.facade.client.MemberFacadeClient",
        "x-facade-client-method": "changeMemberGroup",
        "x-flow-class": "com.ibm.commerce.rest.bod.PatchBodMappingFlow",
        "x-request-bod-class": "com.ibm.commerce.member.facade.datatypes.ChangeMemberGroupType"
      }
    },
    "/rest/admin/v2/member-group-memberships": {
      "get": {
        "tags": [
          "member-group-memberships"
        ],
        "description": "Get a collection of member group memberships.",
        "operationId": "getMemberGroupMemberships",
        "parameters": [
          {
            "name": "memberId",
            "in": "query",
            "description": "The user ID or organization ID that is associated to the member group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberGroupId",
            "in": "query",
            "description": "The member group ID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "field1",
            "in": "query",
            "description": "The customizable field.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "The member excluded indicator that specifies if the member (user or organization) is to be explicitly included or excluded from the member group. Valid values are 1 to exclude the member from the member group, and 0 to include the member in the member group. A member can belong to a member group implicitly by the conditions of the member group. When evaluating if a member belongs to a member group, explicit exclusion takes precedence, then explicit inclusion, and then finally implicit inclusion.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of member group memberships.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "memberId": {
                        "type": "string",
                        "description": "The user ID or organization ID that is associated to the member group."
                      },
                      "memberGroupId": {
                        "type": "string",
                        "description": "The member group ID."
                      },
                      "field1": {
                        "type": "string",
                        "description": "The customizable field."
                      },
                      "exclude": {
                        "type": "string",
                        "description": "The member excluded indicator that specifies if the member (user or organization) is to be explicitly included or excluded from the member group. Valid values are 1 to exclude the member from the member group, and 0 to include the member in the member group. A member can belong to a member group implicitly by the conditions of the member group. When evaluating if a member belongs to a member group, explicit exclusion takes precedence, then explicit inclusion, and then finally implicit inclusion."
                      }
                    },
                    "description": "A member group membership, which is an association of a member (user or organization) to a member group."
                  }
                }
              },
              "description": "A collection of member group memberships."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "post": {
        "tags": [
          "member-group-memberships"
        ],
        "description": "Create a member group membership.",
        "operationId": "createMemberGroupMembership",
        "parameters": [
          {
            "in": "body",
            "name": "MemberGroupMembership",
            "description": "A member group membership, which is an association of a member (user or organization) to a member group.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "memberId": {
                  "type": "string",
                  "description": "The user ID or organization ID that is associated to the member group."
                },
                "memberGroupId": {
                  "type": "string",
                  "description": "The member group ID."
                },
                "field1": {
                  "type": "string",
                  "description": "The customizable field."
                },
                "exclude": {
                  "type": "string",
                  "description": "The member excluded indicator that specifies if the member (user or organization) is to be explicitly included or excluded from the member group. Valid values are 1 to exclude the member from the member group, and 0 to include the member in the member group. A member can belong to a member group implicitly by the conditions of the member group. When evaluating if a member belongs to a member group, explicit exclusion takes precedence, then explicit inclusion, and then finally implicit inclusion."
                }
              },
              "description": "A member group membership, which is an association of a member (user or organization) to a member group."
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      }
    },
    "/rest/admin/v2/member-group-memberships/memberId:{memberId},memberGroupId:{memberGroupId}": {
      "get": {
        "tags": [
          "member-group-memberships"
        ],
        "description": "Get a member group membership.",
        "operationId": "getMemberGroupMembershipById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A member group membership, which is an association of a member (user or organization) to a member group.",
            "schema": {
              "type": "object",
              "properties": {
                "memberId": {
                  "type": "string",
                  "description": "The user ID or organization ID that is associated to the member group."
                },
                "memberGroupId": {
                  "type": "string",
                  "description": "The member group ID."
                },
                "field1": {
                  "type": "string",
                  "description": "The customizable field."
                },
                "exclude": {
                  "type": "string",
                  "description": "The member excluded indicator that specifies if the member (user or organization) is to be explicitly included or excluded from the member group. Valid values are 1 to exclude the member from the member group, and 0 to include the member in the member group. A member can belong to a member group implicitly by the conditions of the member group. When evaluating if a member belongs to a member group, explicit exclusion takes precedence, then explicit inclusion, and then finally implicit inclusion."
                }
              },
              "description": "A member group membership, which is an association of a member (user or organization) to a member group."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "member-group-memberships"
        ],
        "description": "Delete a member group membership.",
        "operationId": "deleteMemberGroupMembershipById",
        "parameters": [],
        "responses": {
          "204": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "parameters": [
        {
          "name": "memberId",
          "in": "path",
          "description": "The user ID or organization ID that is associated to the member group.",
          "required": true,
          "type": "string"
        },
        {
          "name": "memberGroupId",
          "in": "path",
          "description": "The member group ID.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/rest/admin/v2/role-descriptions": {
      "get": {
        "tags": [
          "role-descriptions"
        ],
        "description": "Get a collection of role descriptions.",
        "operationId": "getRoleDescriptions",
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "description": "The unique numeric ID for identifying the role.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "The language of the description. For a list of integer language identifiers, refer to the Knowledge Center.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "displayName",
            "in": "query",
            "description": "The name of the role.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of the role.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of role descriptions.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "roleId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique numeric ID for identifying the role."
                      },
                      "languageId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The language of the description. For a list of integer language identifiers, refer to the Knowledge Center."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The name of the role."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the role."
                      }
                    },
                    "description": "The role description."
                  }
                }
              },
              "description": "A collection of role descriptions."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "post": {
        "tags": [
          "role-descriptions"
        ],
        "description": "Create a role description.",
        "operationId": "createRoleDescription",
        "parameters": [
          {
            "in": "body",
            "name": "RoleDescription",
            "description": "The role description.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "roleId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the role."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language of the description. For a list of integer language identifiers, refer to the Knowledge Center."
                },
                "displayName": {
                  "type": "string",
                  "description": "The name of the role."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the role."
                }
              },
              "description": "The role description."
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      }
    },
    "/rest/admin/v2/role-descriptions/roleId:{roleId},languageId:{languageId}": {
      "get": {
        "tags": [
          "role-descriptions"
        ],
        "description": "Get a role description.",
        "operationId": "getRoleDescriptionById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The role description.",
            "schema": {
              "type": "object",
              "properties": {
                "roleId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the role."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language of the description. For a list of integer language identifiers, refer to the Knowledge Center."
                },
                "displayName": {
                  "type": "string",
                  "description": "The name of the role."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the role."
                }
              },
              "description": "The role description."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role-descriptions"
        ],
        "description": "Delete a role description.",
        "operationId": "deleteRoleDescriptionById",
        "parameters": [],
        "responses": {
          "204": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "role-descriptions"
        ],
        "description": "Update a role description.",
        "operationId": "updateRoleDescriptionById",
        "parameters": [
          {
            "in": "body",
            "name": "RoleDescription",
            "description": "The role description.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "roleId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the role."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language of the description. For a list of integer language identifiers, refer to the Knowledge Center."
                },
                "displayName": {
                  "type": "string",
                  "description": "The name of the role."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the role."
                }
              },
              "description": "The role description."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "parameters": [
        {
          "name": "roleId",
          "in": "path",
          "description": "The unique numeric ID for identifying the role.",
          "required": true,
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "languageId",
          "in": "path",
          "description": "The language of the description. For a list of integer language identifiers, refer to the Knowledge Center.",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/rest/admin/v2/online-stores": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/recordSetStartNumber"
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/maxItems"
          },
          {
            "description": "The usage.",
            "in": "query",
            "name": "usage",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of online stores.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer"
                },
                "items": {
                  "description": "The data objects or resources that that match the query parameters.",
                  "items": {
                    "description": "An online store.",
                    "properties": {
                      "catalogOverrideEnabled": {
                        "description": "The catalog override enabled value configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/isCatalogOverrideEnabled"
                      },
                      "externalContentEnablementMode": {
                        "description": "The external content enablement value configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/externalContentEnablementMode"
                      },
                      "externalContentHostName": {
                        "description": "The external content host name configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.hostName"
                      },
                      "externalContentPickerUrl": {
                        "description": "The external content picker URL configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.pickerURL"
                      },
                      "externalContentTenantId": {
                        "description": "The external content tenant ID configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.tenant-id"
                      },
                      "externalContentUiContextRoot": {
                        "description": "The external content UI context root configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.UIContextRoot"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the online store.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "onlineStoreIdentifier/uniqueID"
                      },
                      "identifier": {
                        "description": "The identifier or name for identifying the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "onlineStoreIdentifier/externalIdentifier/nameIdentifier"
                      },
                      "ownerId": {
                        "description": "The unique numeric ID of the organization that owns the online store.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "onlineStoreIdentifier/externalIdentifier/ownerID"
                      },
                      "state": {
                        "description": "The state of the online store. Valid values are 'open' and 'closed'.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "state"
                      },
                      "type": {
                        "description": "The online store type.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "storeType"
                      },
                      "unregisterMarketingEvent": {
                        "description": "The unregister marketing event configuration value for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/unregisterMarketingEvent"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/onlineStore"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStores",
        "summary": "Get a collection of online stores.",
        "x-expression-template": "{_wcf.ap='IBM_Admin_All';_wcf.usage='{usage}'}/OnlineStore",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      }
    },
    "/rest/admin/v2/online-stores/by-identifier": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/recordSetStartNumber"
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/maxItems"
          },
          {
            "description": "The usage.",
            "in": "query",
            "name": "usage",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier or name for identifying the online store.",
            "in": "query",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of online stores.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer"
                },
                "items": {
                  "description": "The data objects or resources that that match the query parameters.",
                  "items": {
                    "description": "An online store.",
                    "properties": {
                      "catalogOverrideEnabled": {
                        "description": "The catalog override enabled value configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/isCatalogOverrideEnabled"
                      },
                      "externalContentEnablementMode": {
                        "description": "The external content enablement value configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/externalContentEnablementMode"
                      },
                      "externalContentHostName": {
                        "description": "The external content host name configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.hostName"
                      },
                      "externalContentPickerUrl": {
                        "description": "The external content picker URL configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.pickerURL"
                      },
                      "externalContentTenantId": {
                        "description": "The external content tenant ID configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.tenant-id"
                      },
                      "externalContentUiContextRoot": {
                        "description": "The external content UI context root configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.UIContextRoot"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the online store.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "onlineStoreIdentifier/uniqueID"
                      },
                      "identifier": {
                        "description": "The identifier or name for identifying the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "onlineStoreIdentifier/externalIdentifier/nameIdentifier"
                      },
                      "ownerId": {
                        "description": "The unique numeric ID of the organization that owns the online store.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "onlineStoreIdentifier/externalIdentifier/ownerID"
                      },
                      "state": {
                        "description": "The state of the online store. Valid values are 'open' and 'closed'.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "state"
                      },
                      "type": {
                        "description": "The online store type.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "storeType"
                      },
                      "unregisterMarketingEvent": {
                        "description": "The unregister marketing event configuration value for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/unregisterMarketingEvent"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/onlineStore"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoresByIdentifier",
        "summary": "Gets online stores by identifier.",
        "x-expression-builder-class": "com.ibm.commerce.foundation.internal.client.taglib.util.SearchExpressionBuilder",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_All",
          "template": "{_wcf.usage='$usage$'}/OnlineStore[search(StoreIdentifier/ExternalIdentifier/NameIdentifier='$identifier$')]"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      }
    },
    "/rest/admin/v2/online-stores/by-related-store-id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/recordSetStartNumber"
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/maxItems"
          },
          {
            "description": "The usage.",
            "in": "query",
            "name": "usage",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique numeric ID of the related online store. The returned online stores are related to this online store.",
            "format": "int32",
            "in": "query",
            "name": "relatedStoreId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of online stores.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer"
                },
                "items": {
                  "description": "The data objects or resources that that match the query parameters.",
                  "items": {
                    "description": "An online store.",
                    "properties": {
                      "catalogOverrideEnabled": {
                        "description": "The catalog override enabled value configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/isCatalogOverrideEnabled"
                      },
                      "externalContentEnablementMode": {
                        "description": "The external content enablement value configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/externalContentEnablementMode"
                      },
                      "externalContentHostName": {
                        "description": "The external content host name configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.hostName"
                      },
                      "externalContentPickerUrl": {
                        "description": "The external content picker URL configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.pickerURL"
                      },
                      "externalContentTenantId": {
                        "description": "The external content tenant ID configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.tenant-id"
                      },
                      "externalContentUiContextRoot": {
                        "description": "The external content UI context root configured for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/wc.externalContent.UIContextRoot"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the online store.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "onlineStoreIdentifier/uniqueID"
                      },
                      "identifier": {
                        "description": "The identifier or name for identifying the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "onlineStoreIdentifier/externalIdentifier/nameIdentifier"
                      },
                      "ownerId": {
                        "description": "The unique numeric ID of the organization that owns the online store.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "onlineStoreIdentifier/externalIdentifier/ownerID"
                      },
                      "state": {
                        "description": "The state of the online store. Valid values are 'open' and 'closed'.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "state"
                      },
                      "type": {
                        "description": "The online store type.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "storeType"
                      },
                      "unregisterMarketingEvent": {
                        "description": "The unregister marketing event configuration value for the online store.",
                        "readOnly": true,
                        "type": "string",
                        "x-entity-path": "userData/userDataField/unregisterMarketingEvent"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/onlineStore"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoresByRelatedStoreId",
        "summary": "Get a collection of online stores by related store ID.",
        "x-expression-template": "{_wcf.ap='{accessProfile}';_wcf.usage='{usage}'}/OnlineStore[OnlineStoreRelatedStores[StoreIdentifier[(UniqueID='{relatedStoreId}')]]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_All"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      }
    },
    "/rest/admin/v2/online-stores/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "An online store.",
              "properties": {
                "catalogOverrideEnabled": {
                  "description": "The catalog override enabled value configured for the online store.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "userData/userDataField/isCatalogOverrideEnabled"
                },
                "externalContentEnablementMode": {
                  "description": "The external content enablement value configured for the online store.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "userData/userDataField/externalContentEnablementMode"
                },
                "externalContentHostName": {
                  "description": "The external content host name configured for the online store.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "userData/userDataField/wc.externalContent.hostName"
                },
                "externalContentPickerUrl": {
                  "description": "The external content picker URL configured for the online store.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "userData/userDataField/wc.externalContent.pickerURL"
                },
                "externalContentTenantId": {
                  "description": "The external content tenant ID configured for the online store.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "userData/userDataField/wc.externalContent.tenant-id"
                },
                "externalContentUiContextRoot": {
                  "description": "The external content UI context root configured for the online store.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "userData/userDataField/wc.externalContent.UIContextRoot"
                },
                "id": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "onlineStoreIdentifier/uniqueID"
                },
                "identifier": {
                  "description": "The identifier or name for identifying the online store.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "onlineStoreIdentifier/externalIdentifier/nameIdentifier"
                },
                "ownerId": {
                  "description": "The unique numeric ID of the organization that owns the online store.",
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "onlineStoreIdentifier/externalIdentifier/ownerID"
                },
                "state": {
                  "description": "The state of the online store. Valid values are 'open' and 'closed'.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "state"
                },
                "type": {
                  "description": "The online store type.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "storeType"
                },
                "unregisterMarketingEvent": {
                  "description": "The unregister marketing event configuration value for the online store.",
                  "readOnly": true,
                  "type": "string",
                  "x-entity-path": "userData/userDataField/unregisterMarketingEvent"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreType"
            },
            "x-entity-path": "dataArea/onlineStore[1]"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStore",
        "summary": "Gets an online store by online store ID.",
        "x-expression-template": "{_wcf.ap='{accessProfile}'}/OnlineStore[StoreIdentifier[(UniqueID='{id}')]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_All"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      }
    },
    "/rest/admin/v2/online-stores/{id}/close": {
      "post": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "closeOnlineStore",
        "summary": "Closes an online store.",
        "x-action-code": "Close",
        "x-expression-template": "/OnlineStore[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "processOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ProcessOnlineStoreType"
      }
    },
    "/rest/admin/v2/online-stores/{id}/open": {
      "post": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "openOnlineStore",
        "summary": "Opens an online store.",
        "x-action-code": "Open",
        "x-expression-template": "/OnlineStore[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "processOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ProcessOnlineStoreType"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/configuration-values": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "An online store's configuration values.",
              "properties": {
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                },
                "values": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The set of configuration values for the online store.",
                  "readOnly": true,
                  "type": "object",
                  "x-entity-path": "userDataField"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.UserDataType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/userData"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoreConfigurationValues",
        "summary": "Gets an online store's configuration values.",
        "x-expression-template": "{_wcf.ap='{accessProfile}'}/OnlineStore[StoreIdentifier[(UniqueID='{onlineStoreId}')]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Details"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/contacts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The data language IDs.",
            "in": "query",
            "name": "dataLanguageIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of online store contacts.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer"
                },
                "items": {
                  "description": "The data objects or resources that that match the query parameters.",
                  "items": {
                    "description": "An online store contact.",
                    "properties": {
                      "addressLine1": {
                        "description": "First address line.",
                        "type": "string",
                        "x-entity-path": "address/addressLine[1]"
                      },
                      "addressLine2": {
                        "description": "Second address line.",
                        "type": "string",
                        "x-entity-path": "address/addressLine[2]"
                      },
                      "addressLine3": {
                        "description": "Third address line.",
                        "type": "string",
                        "x-entity-path": "address/addressLine[3]"
                      },
                      "city": {
                        "description": "City.",
                        "type": "string",
                        "x-entity-path": "address/city"
                      },
                      "country": {
                        "description": "Country.",
                        "type": "string",
                        "x-entity-path": "address/country"
                      },
                      "email1": {
                        "description": "Primary e-mail address.",
                        "type": "string",
                        "x-entity-path": "emailAddress1/value"
                      },
                      "email2": {
                        "description": "Secondary e-mail address.",
                        "type": "string",
                        "x-entity-path": "emailAddress2/value"
                      },
                      "fax1": {
                        "description": "Primary fax number.",
                        "type": "string",
                        "x-entity-path": "fax1/value"
                      },
                      "fax2": {
                        "description": "Secondary fax number.",
                        "type": "string",
                        "x-entity-path": "fax2/value"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the online store contact.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "contactInfoIdentifier/uniqueID"
                      },
                      "languageId": {
                        "description": "The integer for identifying the language of the online store contact. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "language"
                      },
                      "name": {
                        "description": "The name of the online store contact.",
                        "type": "string",
                        "x-entity-path": "contactName/businessTitle"
                      },
                      "onlineStoreId": {
                        "description": "The unique numeric ID for identifying the online store.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                      },
                      "phone1": {
                        "description": "Primary telephone number.",
                        "type": "string",
                        "x-entity-path": "telephone1/value"
                      },
                      "phone2": {
                        "description": "Secondary telephone number.",
                        "type": "string",
                        "x-entity-path": "telephone2/value"
                      },
                      "postalCode": {
                        "description": "Postal code.",
                        "type": "string",
                        "x-entity-path": "address/postalCode"
                      },
                      "stateOrProvince": {
                        "description": "State or province.",
                        "type": "string",
                        "x-entity-path": "address/stateOrProvinceName"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.ContactInfoType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreContactInfo"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoreContacts",
        "summary": "Gets the online store contact information.",
        "x-expression-template": "{_wcf.ap='{accessProfile}';_wcf.dataLanguageIds='{dataLanguageIds}'}/OnlineStore[StoreIdentifier[(UniqueID='{onlineStoreId}')]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_All"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "An online store contact.",
              "properties": {
                "addressLine1": {
                  "description": "First address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[1]"
                },
                "addressLine2": {
                  "description": "Second address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[2]"
                },
                "addressLine3": {
                  "description": "Third address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[3]"
                },
                "city": {
                  "description": "City.",
                  "type": "string",
                  "x-entity-path": "address/city"
                },
                "country": {
                  "description": "Country.",
                  "type": "string",
                  "x-entity-path": "address/country"
                },
                "email1": {
                  "description": "Primary e-mail address.",
                  "type": "string",
                  "x-entity-path": "emailAddress1/value"
                },
                "email2": {
                  "description": "Secondary e-mail address.",
                  "type": "string",
                  "x-entity-path": "emailAddress2/value"
                },
                "fax1": {
                  "description": "Primary fax number.",
                  "type": "string",
                  "x-entity-path": "fax1/value"
                },
                "fax2": {
                  "description": "Secondary fax number.",
                  "type": "string",
                  "x-entity-path": "fax2/value"
                },
                "id": {
                  "description": "The unique numeric ID for identifying the online store contact.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "contactInfoIdentifier/uniqueID"
                },
                "languageId": {
                  "description": "The integer for identifying the language of the online store contact. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "language"
                },
                "name": {
                  "description": "The name of the online store contact.",
                  "type": "string",
                  "x-entity-path": "contactName/businessTitle"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                },
                "phone1": {
                  "description": "Primary telephone number.",
                  "type": "string",
                  "x-entity-path": "telephone1/value"
                },
                "phone2": {
                  "description": "Secondary telephone number.",
                  "type": "string",
                  "x-entity-path": "telephone2/value"
                },
                "postalCode": {
                  "description": "Postal code.",
                  "type": "string",
                  "x-entity-path": "address/postalCode"
                },
                "stateOrProvince": {
                  "description": "State or province.",
                  "type": "string",
                  "x-entity-path": "address/stateOrProvinceName"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.ContactInfoType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreContactInfo[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of the contact.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreContactInfo[1]/contactInfoIdentifier/uniqueID"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "createOnlineStoreContact",
        "summary": "Creates an online store contact.",
        "x-action-code": "Add",
        "x-expression-template": "/OnlineStore[1]/OnlineStoreContactInfo[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/contacts/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying online store contact ID.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreContactInfo[1]/contactInfoIdentifier/uniqueID"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "deleteOnlineStoreContact",
        "summary": "Deletes an online store contact.",
        "x-action-code": "Delete",
        "x-expression-template": "/OnlineStore[1]/OnlineStoreContactInfo[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying online store contact ID.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreContactInfo[1]/contactInfoIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "An online store contact.",
              "properties": {
                "addressLine1": {
                  "description": "First address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[1]"
                },
                "addressLine2": {
                  "description": "Second address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[2]"
                },
                "addressLine3": {
                  "description": "Third address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[3]"
                },
                "city": {
                  "description": "City.",
                  "type": "string",
                  "x-entity-path": "address/city"
                },
                "country": {
                  "description": "Country.",
                  "type": "string",
                  "x-entity-path": "address/country"
                },
                "email1": {
                  "description": "Primary e-mail address.",
                  "type": "string",
                  "x-entity-path": "emailAddress1/value"
                },
                "email2": {
                  "description": "Secondary e-mail address.",
                  "type": "string",
                  "x-entity-path": "emailAddress2/value"
                },
                "fax1": {
                  "description": "Primary fax number.",
                  "type": "string",
                  "x-entity-path": "fax1/value"
                },
                "fax2": {
                  "description": "Secondary fax number.",
                  "type": "string",
                  "x-entity-path": "fax2/value"
                },
                "id": {
                  "description": "The unique numeric ID for identifying the online store contact.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "contactInfoIdentifier/uniqueID"
                },
                "languageId": {
                  "description": "The integer for identifying the language of the online store contact. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "language"
                },
                "name": {
                  "description": "The name of the online store contact.",
                  "type": "string",
                  "x-entity-path": "contactName/businessTitle"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                },
                "phone1": {
                  "description": "Primary telephone number.",
                  "type": "string",
                  "x-entity-path": "telephone1/value"
                },
                "phone2": {
                  "description": "Secondary telephone number.",
                  "type": "string",
                  "x-entity-path": "telephone2/value"
                },
                "postalCode": {
                  "description": "Postal code.",
                  "type": "string",
                  "x-entity-path": "address/postalCode"
                },
                "stateOrProvince": {
                  "description": "State or province.",
                  "type": "string",
                  "x-entity-path": "address/stateOrProvinceName"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.ContactInfoType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreContactInfo[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "updateOnlineStoreContact",
        "summary": "Updates an online store contact.",
        "x-action-code": "Change",
        "x-expression-template": "/OnlineStore[1]/OnlineStoreContactInfo[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/currencies": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "An online store's supported currencies.",
              "properties": {
                "currencies": {
                  "description": "An array containing the currencies that are supported by the online store.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-entity-path": "supportedCurrencies"
                },
                "defaultCurrency": {
                  "description": "The default currency of the online store.",
                  "type": "string",
                  "x-entity-path": "defaultCurrency"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreSupportedCurrenciesType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreSupportedCurrencies[1]"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoreCurrencies",
        "summary": "Get an online store's currencies.",
        "x-expression-template": "{_wcf.ap='{accessProfile}'}/OnlineStore[StoreIdentifier[(UniqueID='{onlineStoreId}')]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_Details"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "An online store's supported currencies.",
              "properties": {
                "currencies": {
                  "description": "An array containing the currencies that are supported by the online store.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-entity-path": "supportedCurrencies"
                },
                "defaultCurrency": {
                  "description": "The default currency of the online store.",
                  "type": "string",
                  "x-entity-path": "defaultCurrency"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreSupportedCurrenciesType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreSupportedCurrencies[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "updateOnlineStoreCurrencies",
        "summary": "Updates an online store's currencies.",
        "x-action-code": "Change",
        "x-expression-template": "/OnlineStore[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/default-catalogs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of online store default catalogs.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer"
                },
                "items": {
                  "description": "The data objects or resources that that match the query parameters.",
                  "items": {
                    "description": "An online store default catalog.",
                    "properties": {
                      "catalogId": {
                        "description": "The unique numeric ID of the catalog associated with the default catalog.",
                        "format": "int64",
                        "type": "integer",
                        "x-entity-path": "catalogIdentifier/uniqueID"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the online store default catalog.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "uniqueID"
                      },
                      "onlineStoreId": {
                        "description": "The unique numeric ID for identifying the online store.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                      },
                      "storeId": {
                        "description": "The unique numeric ID of the store associated with the default catalog.",
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "storeIdentifier/uniqueID"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.DefaultCatalogType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/onlineStore[1]/defaultCatalog"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoreDefaultCatalogs",
        "summary": "Gets an online store's default catalogs.",
        "x-expression-template": "{_wcf.ap='{accessProfile}'}/OnlineStore[StoreIdentifier[(UniqueID='{onlineStoreId}')]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_Details"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "An online store default catalog.",
              "properties": {
                "catalogId": {
                  "description": "The unique numeric ID of the catalog associated with the default catalog.",
                  "format": "int64",
                  "type": "integer",
                  "x-entity-path": "catalogIdentifier/uniqueID"
                },
                "id": {
                  "description": "The unique numeric ID for identifying the online store default catalog.",
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "uniqueID"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                },
                "storeId": {
                  "description": "The unique numeric ID of the store associated with the default catalog.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "storeIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.DefaultCatalogType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/defaultCatalog[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of the default catalog.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/onlineStore[1]/defaultCatalog[1]/uniqueID"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "createOnlineStoreDefaultCatalog",
        "summary": "Create a default catalog for an online store.",
        "x-action-code": "Add",
        "x-expression-template": "/OnlineStore[1]/DefaultCatalog[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/default-catalogs/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the default catalog.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/defaultCatalog[1]/uniqueID"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "deleteOnlineStoreDefaultCatalog",
        "summary": "Delete the default catalog of an online store.",
        "x-action-code": "Delete",
        "x-expression-template": "/OnlineStore[1]/DefaultCatalog[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/descriptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The data language IDs.",
            "in": "query",
            "name": "dataLanguageIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of online store descriptions.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer"
                },
                "items": {
                  "description": "The data objects or resources that that match the query parameters.",
                  "items": {
                    "description": "An online store description.",
                    "properties": {
                      "description": {
                        "description": "The online store description.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The language ID of the online store description.",
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "language"
                      },
                      "name": {
                        "description": "The name of the online store.",
                        "type": "string",
                        "x-entity-path": "displayName"
                      },
                      "onlineStoreId": {
                        "description": "The unique numeric ID for identifying the online store.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreDescriptionType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreDescription"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoreDescriptions",
        "summary": "Gets the online store descriptions.",
        "x-expression-template": "{_wcf.ap='{accessProfile}';_wcf.dataLanguageIds='{dataLanguageIds}'}/OnlineStore[StoreIdentifier[(UniqueID='{onlineStoreId}')]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_All"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "An online store description.",
              "properties": {
                "description": {
                  "description": "The online store description.",
                  "type": "string"
                },
                "id": {
                  "description": "The language ID of the online store description.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "language"
                },
                "name": {
                  "description": "The name of the online store.",
                  "type": "string",
                  "x-entity-path": "displayName"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreDescriptionType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreDescription[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of the online store description.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreDescription[1]/language"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "createOnlineStoreDescription",
        "summary": "Create a description for an online store.",
        "x-action-code": "Add",
        "x-expression-template": "/OnlineStore[1]/OnlineStoreDescription[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/descriptions/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The integer for identifying the language of the description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "An online store description.",
              "properties": {
                "description": {
                  "description": "The online store description.",
                  "type": "string"
                },
                "id": {
                  "description": "The language ID of the online store description.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "language"
                },
                "name": {
                  "description": "The name of the online store.",
                  "type": "string",
                  "x-entity-path": "displayName"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreDescriptionType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreDescription[1]"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoreDescription",
        "summary": "Gets an online store description.",
        "x-expression-template": "{_wcf.ap='{accessProfile}';_wcf.dataLanguageIds='{id}'}/OnlineStore[StoreIdentifier[(UniqueID='{onlineStoreId}')]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_All"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The integer for identifying the language of the description. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreDescription[1]/language"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "An online store description.",
              "properties": {
                "description": {
                  "description": "The online store description.",
                  "type": "string"
                },
                "id": {
                  "description": "The language ID of the online store description.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "language"
                },
                "name": {
                  "description": "The name of the online store.",
                  "type": "string",
                  "x-entity-path": "displayName"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreDescriptionType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreDescription[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "updateOnlineStoreDescription",
        "summary": "Updates an online store description.",
        "x-action-code": "Change",
        "x-expression-template": "/OnlineStore[1]/OnlineStoreDescription[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/languages": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "An online store's supported languages.",
              "properties": {
                "defaultLanguageId": {
                  "description": "The integer for identifying the default language of the online store. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "defaultLanguage"
                },
                "languageIds": {
                  "description": "An array containing the integers for identifying the languages that are supported by the online store. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "items": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "type": "array",
                  "x-entity-path": "supportedLanguages"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreSupportedLanguagesType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreSupportedLanguages[1]"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoreLanguages",
        "summary": "Gets an online store's languages.",
        "x-expression-template": "{_wcf.ap='{accessProfile}'}/OnlineStore[StoreIdentifier[(UniqueID='{onlineStoreId}')]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_All"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "An online store's supported languages.",
              "properties": {
                "defaultLanguageId": {
                  "description": "The integer for identifying the default language of the online store. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "defaultLanguage"
                },
                "languageIds": {
                  "description": "An array containing the integers for identifying the languages that are supported by the online store. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "items": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "type": "array",
                  "x-entity-path": "supportedLanguages"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreSupportedLanguagesType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreSupportedLanguages[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "updateOnlineStoreLanguages",
        "summary": "Updates an online store's languages.",
        "x-action-code": "Change",
        "x-expression-template": "/OnlineStore[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/locations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The data language IDs.",
            "in": "query",
            "name": "dataLanguageIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of online store contacts.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer"
                },
                "items": {
                  "description": "The data objects or resources that that match the query parameters.",
                  "items": {
                    "description": "An online store contact.",
                    "properties": {
                      "addressLine1": {
                        "description": "First address line.",
                        "type": "string",
                        "x-entity-path": "address/addressLine[1]"
                      },
                      "addressLine2": {
                        "description": "Second address line.",
                        "type": "string",
                        "x-entity-path": "address/addressLine[2]"
                      },
                      "addressLine3": {
                        "description": "Third address line.",
                        "type": "string",
                        "x-entity-path": "address/addressLine[3]"
                      },
                      "city": {
                        "description": "City.",
                        "type": "string",
                        "x-entity-path": "address/city"
                      },
                      "country": {
                        "description": "Country.",
                        "type": "string",
                        "x-entity-path": "address/country"
                      },
                      "email1": {
                        "description": "Primary e-mail address.",
                        "type": "string",
                        "x-entity-path": "emailAddress1/value"
                      },
                      "email2": {
                        "description": "Secondary e-mail address.",
                        "type": "string",
                        "x-entity-path": "emailAddress2/value"
                      },
                      "fax1": {
                        "description": "Primary fax number.",
                        "type": "string",
                        "x-entity-path": "fax1/value"
                      },
                      "fax2": {
                        "description": "Secondary fax number.",
                        "type": "string",
                        "x-entity-path": "fax2/value"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the online store contact.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "contactInfoIdentifier/uniqueID"
                      },
                      "languageId": {
                        "description": "The integer for identifying the language of the online store contact. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "language"
                      },
                      "name": {
                        "description": "The name of the online store contact.",
                        "type": "string",
                        "x-entity-path": "contactName/businessTitle"
                      },
                      "onlineStoreId": {
                        "description": "The unique numeric ID for identifying the online store.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                      },
                      "phone1": {
                        "description": "Primary telephone number.",
                        "type": "string",
                        "x-entity-path": "telephone1/value"
                      },
                      "phone2": {
                        "description": "Secondary telephone number.",
                        "type": "string",
                        "x-entity-path": "telephone2/value"
                      },
                      "postalCode": {
                        "description": "Postal code.",
                        "type": "string",
                        "x-entity-path": "address/postalCode"
                      },
                      "stateOrProvince": {
                        "description": "State or province.",
                        "type": "string",
                        "x-entity-path": "address/stateOrProvinceName"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.ContactInfoType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreLocationInfo"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoreLocations",
        "summary": "Gets the online store location information.",
        "x-expression-template": "{_wcf.ap='{accessProfile}';_wcf.dataLanguageIds='{dataLanguageIds}'}/OnlineStore[StoreIdentifier[(UniqueID='{onlineStoreId}')]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_All"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "An online store location.",
              "properties": {
                "addressLine1": {
                  "description": "First address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[1]"
                },
                "addressLine2": {
                  "description": "Second address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[2]"
                },
                "addressLine3": {
                  "description": "Third address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[3]"
                },
                "city": {
                  "description": "City.",
                  "type": "string",
                  "x-entity-path": "address/city"
                },
                "country": {
                  "description": "Country.",
                  "type": "string",
                  "x-entity-path": "address/country"
                },
                "email1": {
                  "description": "Primary e-mail address.",
                  "type": "string",
                  "x-entity-path": "emailAddress1/value"
                },
                "email2": {
                  "description": "Secondary e-mail address.",
                  "type": "string",
                  "x-entity-path": "emailAddress2/value"
                },
                "fax1": {
                  "description": "Primary fax number.",
                  "type": "string",
                  "x-entity-path": "fax1/value"
                },
                "fax2": {
                  "description": "Secondary fax number.",
                  "type": "string",
                  "x-entity-path": "fax2/value"
                },
                "id": {
                  "description": "The unique numeric ID for identifying the online store location.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "contactInfoIdentifier/uniqueID"
                },
                "languageId": {
                  "description": "The integer for identifying the language of the online store location. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "language"
                },
                "name": {
                  "description": "Store location name.",
                  "type": "string",
                  "x-entity-path": "contactName/businessTitle"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                },
                "phone1": {
                  "description": "Primary phone number.",
                  "type": "string",
                  "x-entity-path": "telephone1/value"
                },
                "phone2": {
                  "description": "Secondary phone number.",
                  "type": "string",
                  "x-entity-path": "telephone2/value"
                },
                "postalCode": {
                  "description": "Postal code.",
                  "type": "string",
                  "x-entity-path": "address/postalCode"
                },
                "stateOrProvince": {
                  "description": "State or province.",
                  "type": "string",
                  "x-entity-path": "address/stateOrProvinceName"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.ContactInfoType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreLocationInfo[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of the location.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreLocationInfo[1]/contactInfoIdentifier/uniqueID"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "createOnlineStoreLocation",
        "summary": "Creates an online store location.",
        "x-action-code": "Add",
        "x-expression-template": "/OnlineStore[1]/OnlineStoreLocationInfo[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/locations/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying online store location ID.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreLocationInfo[1]/contactInfoIdentifier/uniqueID"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "deleteOnlineStoreLocation",
        "summary": "Deletes an online store location.",
        "x-action-code": "Delete",
        "x-expression-template": "/OnlineStore[1]/OnlineStoreLocationInfo[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying online store location ID.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreLocationInfo[1]/contactInfoIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "An online store location.",
              "properties": {
                "addressLine1": {
                  "description": "First address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[1]"
                },
                "addressLine2": {
                  "description": "Second address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[2]"
                },
                "addressLine3": {
                  "description": "Third address line.",
                  "type": "string",
                  "x-entity-path": "address/addressLine[3]"
                },
                "city": {
                  "description": "City.",
                  "type": "string",
                  "x-entity-path": "address/city"
                },
                "country": {
                  "description": "Country.",
                  "type": "string",
                  "x-entity-path": "address/country"
                },
                "email1": {
                  "description": "Primary e-mail address.",
                  "type": "string",
                  "x-entity-path": "emailAddress1/value"
                },
                "email2": {
                  "description": "Secondary e-mail address.",
                  "type": "string",
                  "x-entity-path": "emailAddress2/value"
                },
                "fax1": {
                  "description": "Primary fax number.",
                  "type": "string",
                  "x-entity-path": "fax1/value"
                },
                "fax2": {
                  "description": "Secondary fax number.",
                  "type": "string",
                  "x-entity-path": "fax2/value"
                },
                "id": {
                  "description": "The unique numeric ID for identifying the online store location.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "contactInfoIdentifier/uniqueID"
                },
                "languageId": {
                  "description": "The integer for identifying the language of the online store location. For a list of the integers that map to the supported default languages, refer to the Knowledge Center.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "language"
                },
                "name": {
                  "description": "Store location name.",
                  "type": "string",
                  "x-entity-path": "contactName/businessTitle"
                },
                "onlineStoreId": {
                  "description": "The unique numeric ID for identifying the online store.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer",
                  "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                },
                "phone1": {
                  "description": "Primary phone number.",
                  "type": "string",
                  "x-entity-path": "telephone1/value"
                },
                "phone2": {
                  "description": "Secondary phone number.",
                  "type": "string",
                  "x-entity-path": "telephone2/value"
                },
                "postalCode": {
                  "description": "Postal code.",
                  "type": "string",
                  "x-entity-path": "address/postalCode"
                },
                "stateOrProvince": {
                  "description": "State or province.",
                  "type": "string",
                  "x-entity-path": "address/stateOrProvinceName"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.ContactInfoType"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreLocationInfo[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "updateOnlineStoreLocation",
        "summary": "Updates an online store location.",
        "x-action-code": "Change",
        "x-expression-template": "/OnlineStore[1]/OnlineStoreLocationInfo[1]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "changeOnlineStore",
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.ChangeOnlineStoreType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/online-stores/{onlineStoreId}/related-stores": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the online store.",
            "format": "int32",
            "in": "path",
            "name": "onlineStoreId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of online store related stores.",
              "properties": {
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer"
                },
                "items": {
                  "description": "The data objects or resources that that match the query parameters.",
                  "items": {
                    "description": "An online store related stores.",
                    "properties": {
                      "id": {
                        "description": "The unique numeric ID for identifying the online store relationship.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "storeIdentifier/uniqueID"
                      },
                      "onlineStoreId": {
                        "description": "The unique numeric ID for identifying the online store.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "container/onlineStoreIdentifier/uniqueID"
                      },
                      "relationshipTypeId": {
                        "description": "The unique numeric ID for identifying the store relationship type.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "relationshipType"
                      },
                      "sequence": {
                        "description": "The store relationship sequence number.",
                        "format": "double",
                        "readOnly": true,
                        "type": "number",
                        "x-entity-path": "relationshipSequence"
                      },
                      "state": {
                        "description": "The store relationship state. 1 indicates active. 0 indicates inactive.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer",
                        "x-entity-path": "state"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreRelatedStoresType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/onlineStore[1]/onlineStoreRelatedStores"
          }
        },
        "tags": [
          "Online Stores"
        ],
        "operationId": "getOnlineStoreRelatedStores",
        "summary": "Gets an online store's related stores.",
        "x-expression-template": "{_wcf.ap='{accessProfile}'}/OnlineStore[StoreIdentifier[(UniqueID='{onlineStoreId}')]]",
        "x-facade-client-class": "com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient",
        "x-facade-client-method": "getOnlineStore",
        "x-parameters": {
          "accessProfile": "IBM_Admin_All"
        },
        "x-request-bod-class": "com.ibm.commerce.infrastructure.facade.datatypes.GetOnlineStoreType"
      }
    },
    "/rest/admin/v2/currency-descriptions": {
      "get": {
        "tags": [
          "currency-descriptions"
        ],
        "description": "Get a collection of currency descriptions.",
        "operationId": "getCurrencyDescriptions",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "This is a currency code as per ISO 4217 standards. Foreign key that references column SETCCURR in the SETCURR table.",
            "required": false,
            "type": "string"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Language ID of the Language. Foreign key that references the LANGUAGE_ID column in the Language table. For a list of language components, see the LANGUAGE table.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The text description of the currency in the language identified by LANGUAGE_ID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of currency descriptions.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "This is a currency code as per ISO 4217 standards. Foreign key that references column SETCCURR in the SETCURR table."
                      },
                      "languageId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Language ID of the Language. Foreign key that references the LANGUAGE_ID column in the Language table. For a list of language components, see the LANGUAGE table."
                      },
                      "description": {
                        "type": "string",
                        "description": "The text description of the currency in the language identified by LANGUAGE_ID."
                      }
                    },
                    "description": "Text descriptions for each of the currency."
                  }
                }
              },
              "description": "A collection of currency descriptions."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "post": {
        "tags": [
          "currency-descriptions"
        ],
        "description": "Create a currency description.",
        "operationId": "createCurrencyDescription",
        "parameters": [
          {
            "in": "body",
            "name": "CurrencyDescription",
            "description": "Text descriptions for each of the currency.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "This is a currency code as per ISO 4217 standards. Foreign key that references column SETCCURR in the SETCURR table."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Language ID of the Language. Foreign key that references the LANGUAGE_ID column in the Language table. For a list of language components, see the LANGUAGE table."
                },
                "description": {
                  "type": "string",
                  "description": "The text description of the currency in the language identified by LANGUAGE_ID."
                }
              },
              "description": "Text descriptions for each of the currency."
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      }
    },
    "/rest/admin/v2/currency-descriptions/code:{code},languageId:{languageId}": {
      "get": {
        "tags": [
          "currency-descriptions"
        ],
        "description": "Get a currency description.",
        "operationId": "getCurrencyDescriptionById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Text descriptions for each of the currency.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "This is a currency code as per ISO 4217 standards. Foreign key that references column SETCCURR in the SETCURR table."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Language ID of the Language. Foreign key that references the LANGUAGE_ID column in the Language table. For a list of language components, see the LANGUAGE table."
                },
                "description": {
                  "type": "string",
                  "description": "The text description of the currency in the language identified by LANGUAGE_ID."
                }
              },
              "description": "Text descriptions for each of the currency."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "currency-descriptions"
        ],
        "description": "Delete a currency description.",
        "operationId": "deleteCurrencyDescriptionById",
        "parameters": [],
        "responses": {
          "204": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "currency-descriptions"
        ],
        "description": "Update a currency description.",
        "operationId": "updateCurrencyDescriptionById",
        "parameters": [
          {
            "in": "body",
            "name": "CurrencyDescription",
            "description": "Text descriptions for each of the currency.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "This is a currency code as per ISO 4217 standards. Foreign key that references column SETCCURR in the SETCURR table."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Language ID of the Language. Foreign key that references the LANGUAGE_ID column in the Language table. For a list of language components, see the LANGUAGE table."
                },
                "description": {
                  "type": "string",
                  "description": "The text description of the currency in the language identified by LANGUAGE_ID."
                }
              },
              "description": "Text descriptions for each of the currency."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "This is a currency code as per ISO 4217 standards. Foreign key that references column SETCCURR in the SETCURR table.",
          "required": true,
          "type": "string"
        },
        {
          "name": "languageId",
          "in": "path",
          "description": "Language ID of the Language. Foreign key that references the LANGUAGE_ID column in the Language table. For a list of language components, see the LANGUAGE table.",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/rest/admin/v2/language-descriptions": {
      "get": {
        "tags": [
          "language-descriptions"
        ],
        "description": "Get a collection of languages descriptions.",
        "operationId": "getLanguageDescriptions",
        "parameters": [
          {
            "name": "descriptionLanguageId",
            "in": "query",
            "description": "The language ID of the language that is being described.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of the language that is displayed in a graphical user interface, which manages supported languages for a StoreEntity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "The language ID.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of languages descriptions.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "descriptionLanguageId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The language ID of the language that is being described."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the language that is displayed in a graphical user interface, which manages supported languages for a StoreEntity."
                      },
                      "languageId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The language ID."
                      }
                    },
                    "description": "Language Description"
                  }
                }
              },
              "description": "A collection of languages descriptions."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "post": {
        "tags": [
          "language-descriptions"
        ],
        "description": "Create a language descriptions.",
        "operationId": "createLanguageDescription",
        "parameters": [
          {
            "in": "body",
            "name": "LanguageDescription",
            "description": "Language Description",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "descriptionLanguageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language ID of the language that is being described."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the language that is displayed in a graphical user interface, which manages supported languages for a StoreEntity."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language ID."
                }
              },
              "description": "Language Description"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      }
    },
    "/rest/admin/v2/language-descriptions/descriptionLanguageId:{descriptionLanguageId},languageId:{languageId}": {
      "get": {
        "tags": [
          "language-descriptions"
        ],
        "description": "Get a language descriptions.",
        "operationId": "getLanguageDescriptionById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Language Description",
            "schema": {
              "type": "object",
              "properties": {
                "descriptionLanguageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language ID of the language that is being described."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the language that is displayed in a graphical user interface, which manages supported languages for a StoreEntity."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language ID."
                }
              },
              "description": "Language Description"
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "language-descriptions"
        ],
        "description": "Delete a language descriptions.",
        "operationId": "deleteLanguageDescriptionById",
        "parameters": [],
        "responses": {
          "204": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "language-descriptions"
        ],
        "description": "Update a language descriptions.",
        "operationId": "updateLanguageDescriptionById",
        "parameters": [
          {
            "in": "body",
            "name": "LanguageDescription",
            "description": "Language Description",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "descriptionLanguageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language ID of the language that is being described."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the language that is displayed in a graphical user interface, which manages supported languages for a StoreEntity."
                },
                "languageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The language ID."
                }
              },
              "description": "Language Description"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "parameters": [
        {
          "name": "descriptionLanguageId",
          "in": "path",
          "description": "The language ID of the language that is being described.",
          "required": true,
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "languageId",
          "in": "path",
          "description": "The language ID.",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/rest/admin/v2/transports": {
      "get": {
        "tags": [
          "transports"
        ],
        "description": "Get a collection of Store transports.",
        "operationId": "getTransports",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The transport ID.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code of the transport.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the transport.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description.",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "The timeout.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "implemented",
            "in": "query",
            "description": "If it is implemented.",
            "required": false,
            "type": "string"
          },
          {
            "name": "addressable",
            "in": "query",
            "description": "If it is addressable.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of Store transports.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The total number of items."
                },
                "items": {
                  "type": "array",
                  "description": "The items.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The transport ID."
                      },
                      "code": {
                        "type": "string",
                        "description": "The code of the transport."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the transport."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description."
                      },
                      "timeout": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The timeout."
                      },
                      "implemented": {
                        "type": "string",
                        "description": "If it is implemented."
                      },
                      "addressable": {
                        "type": "string",
                        "description": "If it is addressable."
                      }
                    },
                    "description": "An store transport."
                  }
                }
              },
              "description": "A collection of Store transports."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "post": {
        "tags": [
          "transports"
        ],
        "description": "Create an Store transport.",
        "operationId": "createTransport",
        "parameters": [
          {
            "in": "body",
            "name": "Transport",
            "description": "An store transport.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The transport ID."
                },
                "code": {
                  "type": "string",
                  "description": "The code of the transport."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the transport."
                },
                "description": {
                  "type": "string",
                  "description": "The description."
                },
                "timeout": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The timeout."
                },
                "implemented": {
                  "type": "string",
                  "description": "If it is implemented."
                },
                "addressable": {
                  "type": "string",
                  "description": "If it is addressable."
                }
              },
              "description": "An store transport."
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      }
    },
    "/rest/admin/v2/transports/{id}": {
      "get": {
        "tags": [
          "transports"
        ],
        "description": "Get an Store transport.",
        "operationId": "getTransportById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An store transport.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The transport ID."
                },
                "code": {
                  "type": "string",
                  "description": "The code of the transport."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the transport."
                },
                "description": {
                  "type": "string",
                  "description": "The description."
                },
                "timeout": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The timeout."
                },
                "implemented": {
                  "type": "string",
                  "description": "If it is implemented."
                },
                "addressable": {
                  "type": "string",
                  "description": "If it is addressable."
                }
              },
              "description": "An store transport."
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "transports"
        ],
        "description": "Delete an Store transport.",
        "operationId": "deleteTransportById",
        "parameters": [],
        "responses": {
          "204": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "transports"
        ],
        "description": "Update an Store transport.",
        "operationId": "updateTransportById",
        "parameters": [
          {
            "in": "body",
            "name": "Transport",
            "description": "An store transport.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The transport ID."
                },
                "code": {
                  "type": "string",
                  "description": "The code of the transport."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the transport."
                },
                "description": {
                  "type": "string",
                  "description": "The description."
                },
                "timeout": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The timeout."
                },
                "implemented": {
                  "type": "string",
                  "description": "If it is implemented."
                },
                "addressable": {
                  "type": "string",
                  "description": "If it is addressable."
                }
              },
              "description": "An store transport."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "The request identifier."
                },
                "errors": {
                  "type": "array",
                  "description": "The errors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error message code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "messageKey": {
                        "type": "string",
                        "description": "The error message key."
                      },
                      "messageArguments": {
                        "type": "array",
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        }
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "The unique identifier for the request."
                      },
                      "locale": {
                        "type": "string",
                        "description": "The locale of the error message."
                      }
                    },
                    "description": "The error message item model."
                  }
                }
              },
              "description": "The error message model."
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The transport ID.",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/rest/admin/v2/pending-messages": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The total number of records that match the query parameters."
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of records returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first record."
                },
                "items": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The unique numeric ID for identifying the pending message.",
                        "type": "string"
                      },
                      "content": {
                        "description": "The message content.",
                        "type": "string"
                      },
                      "retries": {
                        "description": "The number of retries remaining before the message send is abandoned.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "storeId": {
                        "description": "The unique numeric ID for identifying the store from which the message originated.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "transportId": {
                        "description": "The unique numeric ID for identifying the transport over which the message is being sent.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "status": {
                        "description": "The status of the pending message. Possible values are \n * pending\n * failed",
                        "type": "string"
                      },
                      "connectionSpecifications": {
                        "description": "The connection specifications used in the transacted message send.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "interactionSpecifications": {
                        "description": "The interaction specifications used in the transacted message send.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "tags": [
          "Pending Messages"
        ],
        "description": "Get a collection of pending messages.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of pending messages.",
        "operationId": "getPendingMessages",
        "parameters": [
          {
            "description": "The store ID for the store from which the messages originated.",
            "in": "query",
            "name": "storeId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The unique numeric ID for identifying the transport.",
            "format": "int32",
            "in": "query",
            "name": "transportId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Limits the results to only include messages with the specified status. Possible values are \n * pending\n * failed",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "required": false,
            "type": "string",
            "description": "Limits search results to only include the message with an id that matches the value of this parameter.",
            "name": "searchString",
            "in": "query"
          },
          {
            "description": "The maximum number of results to be returned.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name,-id will order the items first based on the name value in ascending order, and then by their ID value in descending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/rest/admin/v2/pending-messages/{id}/increment-retries": {
      "post": {
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "tags": [
          "Pending Messages"
        ],
        "description": "Increment the retry count of a pending message.",
        "produces": [
          "application/json"
        ],
        "summary": "Increment the retry count of a pending message.",
        "operationId": "incrementRetries",
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the pending message.",
            "in": "path",
            "name": "id"
          }
        ]
      }
    },
    "/rest/admin/v2/pending-messages/{id}/resend": {
      "post": {
        "responses": {
          "200": {
            "description": "The request has been accepted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "tags": [
          "Pending Messages"
        ],
        "description": "Re-send the specified pending message. A copy of the specified pending message will be created with a positive retry count. The new pending message will be attempted to be sent by a \"SendTransactedMsg\" job, if one is running.",
        "produces": [
          "application/json"
        ],
        "summary": "Re-send the specified pending message.",
        "operationId": "resendPendingMessage",
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the pending message.",
            "in": "path",
            "name": "id"
          },
          {
            "required": false,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "connectionSpecifications": {
                  "description": "The connection specifications used in the transacted message send.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "interactionSpecifications": {
                  "description": "The interaction specifications used in the transacted message send.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "connectionSpecifications": {
                  "host": "mail.store.com",
                  "password": "password",
                  "port": "25",
                  "protocol": "smtp",
                  "userName": "mailuser"
                },
                "interactionSpecifications": {
                  "BCC": "admin@store.com",
                  "CC": "csr@store.com",
                  "contentType": "HTML",
                  "recipient": "user@email.com",
                  "replyTo": "no-reply@store.com",
                  "sender": "no-reply@store.com"
                }
              }
            }
          }
        ]
      }
    },
    "/rest/admin/v2/pending-messages/{id}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The unique numeric ID for identifying the pending message.",
                  "type": "string"
                },
                "content": {
                  "description": "The message content.",
                  "type": "string"
                },
                "retries": {
                  "description": "The number of retries remaining before the message send is abandoned.",
                  "format": "int32",
                  "type": "integer"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store from which the message originated.",
                  "format": "int32",
                  "type": "integer"
                },
                "transportId": {
                  "description": "The unique numeric ID for identifying the transport over which the message is being sent.",
                  "format": "int32",
                  "type": "integer"
                },
                "status": {
                  "description": "The status of the pending message. Possible values are \n * pending\n * failed",
                  "type": "string"
                },
                "connectionSpecifications": {
                  "description": "The connection specifications used in the transacted message send.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "interactionSpecifications": {
                  "description": "The interaction specifications used in the transacted message send.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "tags": [
          "Pending Messages"
        ],
        "description": "Get a pending message by ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a pending message by ID.",
        "operationId": "getPendingMessageById",
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the pending message.",
            "in": "path",
            "name": "id"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "tags": [
          "Pending Messages"
        ],
        "description": "Delete a pending message.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete a pending message.",
        "operationId": "deletePendingMessage",
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the pending message.",
            "in": "path",
            "name": "id"
          }
        ]
      }
    },
    "/rest/admin/v2/archived-messages": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The total number of records that match the query parameters."
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of records returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first record."
                },
                "items": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the archived message."
                      },
                      "content": {
                        "type": "string",
                        "description": "The archived message content."
                      },
                      "transportId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique numeric ID for identifying the transport over which the message is being sent."
                      },
                      "storeId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique numeric ID for identifying the store from which the message originated."
                      },
                      "connectionSpecifications": {
                        "description": "The connection specifications used in the transacted message send.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "interactionSpecifications": {
                        "description": "The interaction specifications used in the transacted message send.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "tags": [
          "Archived Messages"
        ],
        "description": "Get a collection of archived messages.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of archived messages.",
        "operationId": "getArchivedMessages",
        "parameters": [
          {
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The store ID for the store from which the archived messages originated.",
            "name": "storeId",
            "in": "query"
          },
          {
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The unique numeric ID for identifying the transport.",
            "name": "transportId",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "description": "Limits search results to only include the message with an id that matches the value of this parameter.",
            "name": "searchString",
            "in": "query"
          },
          {
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of results to be returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "name": "offset",
            "in": "query"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name,-id will order the items first based on the name value in ascending order, and then by their ID value in descending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/rest/admin/v2/archived-messages/{id}/resend": {
      "post": {
        "responses": {
          "200": {
            "description": "The request has been accepted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "tags": [
          "Archived Messages"
        ],
        "description": "Re-send the specified archived message. A copy of the specified archived message will be created as a pending message with a positive retry count. The new pending message will be attempted to be sent by a \"SendTransactedMsg\" job, if one is running.",
        "produces": [
          "application/json"
        ],
        "summary": "Re-send the specified archived message.",
        "operationId": "resendArchivedMessage",
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the archived message.",
            "in": "path",
            "name": "id"
          },
          {
            "required": false,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "connectionSpecifications": {
                  "description": "The connection specifications used in the transacted message send.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "interactionSpecifications": {
                  "description": "The interaction specifications used in the transacted message send.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "connectionSpecifications": {
                  "host": "mail.store.com",
                  "password": "password",
                  "port": "25",
                  "protocol": "smtp",
                  "userName": "mailuser"
                },
                "interactionSpecifications": {
                  "BCC": "admin@store.com",
                  "CC": "csr@store.com",
                  "contentType": "HTML",
                  "recipient": "user@email.com",
                  "replyTo": "no-reply@store.com",
                  "sender": "no-reply@store.com"
                }
              }
            }
          }
        ]
      }
    },
    "/rest/admin/v2/archived-messages/{id}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the archived message."
                },
                "content": {
                  "type": "string",
                  "description": "The archived message content."
                },
                "transportId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the transport over which the message is being sent."
                },
                "storeId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique numeric ID for identifying the store from which the message originated."
                },
                "connectionSpecifications": {
                  "description": "The connection specifications used in the transacted message send.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "interactionSpecifications": {
                  "description": "The interaction specifications used in the transacted message send.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "tags": [
          "Archived Messages"
        ],
        "description": "Get an archived message by ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Get an archived message by ID.",
        "operationId": "getArchivedMessageById",
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the archived message.",
            "in": "path",
            "name": "id"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "tags": [
          "Archived Messages"
        ],
        "description": "Delete an archived message.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete an archived message.",
        "operationId": "deleteArchivedMessage",
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the archived message.",
            "in": "path",
            "name": "id"
          }
        ]
      }
    },
    "/rest/admin/v2/accounts": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account records in total based on the query parameters specified."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID of the account."
                      },
                      "storeId": {
                        "description": "The unique numeric ID of the store that contains the account.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "comment": {
                        "type": "string",
                        "description": "A comment for the business account."
                      },
                      "customerOrganizationId": {
                        "type": "string",
                        "description": "The unique numeric ID of the customer organization."
                      },
                      "customerOrganizationName": {
                        "type": "string",
                        "description": "The name of the customer organization."
                      },
                      "customerUserId": {
                        "type": "string",
                        "description": "The unique numeric ID of the user that is the customer contact."
                      },
                      "customerUserName": {
                        "type": "string",
                        "description": "The name of the user that is the customer contact."
                      },
                      "customerContactInformation": {
                        "type": "string",
                        "description": "The customer's contact information."
                      },
                      "numberOfContracts": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of contracts in this business account."
                      },
                      "allowDefaultContract": {
                        "type": "boolean",
                        "description": "Indicates that purchases using the store's default contract are allowed."
                      },
                      "baseContractAccount": {
                        "type": "boolean",
                        "description": "Indicates that the account is for base contracts."
                      },
                      "mustSpecifyPurchaseOrderNumber": {
                        "type": "boolean",
                        "description": "Indicates that the purchase order number must be specified when an order is placed."
                      },
                      "checkPurchaseOrderNumberUniqueness": {
                        "type": "boolean",
                        "description": "Indicates that the system must check that the purchase order numbers are unique."
                      },
                      "allowPersonalBillingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select billing addresses from their personal address book."
                      },
                      "allowParentOrganizationBillingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select billing addresses from their parent organization's address book."
                      },
                      "allowAccountOrganizationBillingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select billing addresses from the account organization's address book."
                      },
                      "allowPersonalShippingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select shipping addresses from their personal address book."
                      },
                      "allowParentOrganizationShippingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select shipping addresses from their parent organization's address book."
                      },
                      "allowAccountOrganizationShippingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select shipping addresses from the account organization's address book."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account records returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first account record."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "description": "The unique numeric ID for identifying the store.",
            "name": "storeId",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "required": false,
            "type": "string",
            "description": "Limits search results to only include accounts with a name that matches the value of this parameter.",
            "name": "searchString",
            "in": "query"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name will order the items based on the name value in ascending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets a collection of business accounts in a store.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of business accounts in a store.",
        "operationId": "getAccounts"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "body",
            "description": "The request body for account creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID of the account."
                },
                "storeId": {
                  "description": "The unique numeric ID of the store that contains the account.",
                  "type": "integer",
                  "format": "int32"
                },
                "comment": {
                  "type": "string",
                  "description": "A comment for the business account."
                },
                "customerOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the customer organization."
                },
                "customerOrganizationName": {
                  "type": "string",
                  "description": "The name of the customer organization."
                },
                "customerUserId": {
                  "type": "string",
                  "description": "The unique numeric ID of the user that is the customer contact."
                },
                "customerUserName": {
                  "type": "string",
                  "description": "The name of the user that is the customer contact."
                },
                "customerContactInformation": {
                  "type": "string",
                  "description": "The customer's contact information."
                },
                "numberOfContracts": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of contracts in this business account."
                },
                "allowDefaultContract": {
                  "type": "boolean",
                  "description": "Indicates that purchases using the store's default contract are allowed."
                },
                "baseContractAccount": {
                  "type": "boolean",
                  "description": "Indicates that the account is for base contracts."
                },
                "mustSpecifyPurchaseOrderNumber": {
                  "type": "boolean",
                  "description": "Indicates that the purchase order number must be specified when an order is placed."
                },
                "checkPurchaseOrderNumberUniqueness": {
                  "type": "boolean",
                  "description": "Indicates that the system must check that the purchase order numbers are unique."
                },
                "allowPersonalBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their personal address book."
                },
                "allowParentOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their parent organization's address book."
                },
                "allowAccountOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from the account organization's address book."
                },
                "allowPersonalShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their personal address book."
                },
                "allowParentOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their parent organization's address book."
                },
                "allowAccountOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from the account organization's address book."
                }
              }
            }
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new business account.",
        "operationId": "createAccount",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new business account."
      }
    },
    "/rest/admin/v2/accounts/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID of the account."
                },
                "storeId": {
                  "description": "The unique numeric ID of the store that contains the account.",
                  "type": "integer",
                  "format": "int32"
                },
                "comment": {
                  "type": "string",
                  "description": "A comment for the business account."
                },
                "customerOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the customer organization."
                },
                "customerOrganizationName": {
                  "type": "string",
                  "description": "The name of the customer organization."
                },
                "customerUserId": {
                  "type": "string",
                  "description": "The unique numeric ID of the user that is the customer contact."
                },
                "customerUserName": {
                  "type": "string",
                  "description": "The name of the user that is the customer contact."
                },
                "customerContactInformation": {
                  "type": "string",
                  "description": "The customer's contact information."
                },
                "numberOfContracts": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of contracts in this business account."
                },
                "allowDefaultContract": {
                  "type": "boolean",
                  "description": "Indicates that purchases using the store's default contract are allowed."
                },
                "baseContractAccount": {
                  "type": "boolean",
                  "description": "Indicates that the account is for base contracts."
                },
                "mustSpecifyPurchaseOrderNumber": {
                  "type": "boolean",
                  "description": "Indicates that the purchase order number must be specified when an order is placed."
                },
                "checkPurchaseOrderNumberUniqueness": {
                  "type": "boolean",
                  "description": "Indicates that the system must check that the purchase order numbers are unique."
                },
                "allowPersonalBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their personal address book."
                },
                "allowParentOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their parent organization's address book."
                },
                "allowAccountOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from the account organization's address book."
                },
                "allowPersonalShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their personal address book."
                },
                "allowParentOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their parent organization's address book."
                },
                "allowAccountOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from the account organization's address book."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Finds a business account by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a business account by its ID",
        "operationId": "getAccountById"
      },
      "patch": {
        "responses": {
          "204": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "id",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for creating an account.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID of the account."
                },
                "storeId": {
                  "description": "The unique numeric ID of the store that contains the account.",
                  "type": "integer",
                  "format": "int32"
                },
                "comment": {
                  "type": "string",
                  "description": "A comment for the business account."
                },
                "customerOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the customer organization."
                },
                "customerOrganizationName": {
                  "type": "string",
                  "description": "The name of the customer organization."
                },
                "customerUserId": {
                  "type": "string",
                  "description": "The unique numeric ID of the user that is the customer contact."
                },
                "customerUserName": {
                  "type": "string",
                  "description": "The name of the user that is the customer contact."
                },
                "customerContactInformation": {
                  "type": "string",
                  "description": "The customer's contact information."
                },
                "numberOfContracts": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of contracts in this business account."
                },
                "allowDefaultContract": {
                  "type": "boolean",
                  "description": "Indicates that purchases using the store's default contract are allowed."
                },
                "baseContractAccount": {
                  "type": "boolean",
                  "description": "Indicates that the account is for base contracts."
                },
                "mustSpecifyPurchaseOrderNumber": {
                  "type": "boolean",
                  "description": "Indicates that the purchase order number must be specified when an order is placed."
                },
                "checkPurchaseOrderNumberUniqueness": {
                  "type": "boolean",
                  "description": "Indicates that the system must check that the purchase order numbers are unique."
                },
                "allowPersonalBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their personal address book."
                },
                "allowParentOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their parent organization's address book."
                },
                "allowAccountOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from the account organization's address book."
                },
                "allowPersonalShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their personal address book."
                },
                "allowParentOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their parent organization's address book."
                },
                "allowAccountOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from the account organization's address book."
                }
              }
            }
          }
        ],
        "tags": [
          "Accounts"
        ],
        "summary": "Updates an existing business account.",
        "operationId": "updateAccount",
        "description": "Updates an existing business account."
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing business account.",
        "operationId": "deleteAccount",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing business account."
      }
    },
    "/rest/admin/v2/accounts/{accountId}/shipping-addresses": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account shipping addresses in total."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the account shipping address."
                      },
                      "accountId": {
                        "type": "string",
                        "description": "The unique numeric ID of the account that contains this shipping address."
                      },
                      "shippingAddressNickName": {
                        "type": "string",
                        "description": "The unique numeric ID of the shipping charge."
                      },
                      "shippingAddressOrganizationId": {
                        "type": "string",
                        "description": "The unique numeric ID of the organization that owns the shipping address."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account shipping addresses returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first account shipping address."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets a collection of account shipping addresses.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of account shipping addresses.",
        "operationId": "getAccountShippingAddresses"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for account shipping address creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account shipping address."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this shipping address."
                },
                "shippingAddressNickName": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping charge."
                },
                "shippingAddressOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the organization that owns the shipping address."
                }
              }
            }
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new account shipping address.",
        "operationId": "createAccountShippingAddress",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new account shipping address."
      }
    },
    "/rest/admin/v2/accounts/{accountId}/shipping-addresses/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account shipping address."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this shipping address."
                },
                "shippingAddressNickName": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping charge."
                },
                "shippingAddressOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the organization that owns the shipping address."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account shipping address.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets an account shipping address by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets an account shipping address by its ID",
        "operationId": "getAccountShippingAddressById"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account shipping address.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing account shipping address.",
        "operationId": "deleteAccountShippingAddress",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing account shipping address."
      }
    },
    "/rest/admin/v2/accounts/{accountId}/shipping-charges": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account shipping charges in total."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the account shipping charge."
                      },
                      "accountId": {
                        "type": "string",
                        "description": "The unique numeric ID of the account that contains this shipping charge."
                      },
                      "shippingChargeId": {
                        "type": "string",
                        "description": "The unique numeric ID of the shipping charge."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account shipping charges returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first account shipping charge."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets a collection of account shipping charges.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of account shipping charges.",
        "operationId": "getAccountShippingCharges"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for account shipping charge creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account shipping charge."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this shipping charge."
                },
                "shippingChargeId": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping charge."
                }
              }
            }
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new account shipping charge.",
        "operationId": "createAccountShippingCharge",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new account shipping charge."
      }
    },
    "/rest/admin/v2/accounts/{accountId}/shipping-charges/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account shipping charge."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this shipping charge."
                },
                "shippingChargeId": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping charge."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account shipping charge.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets an account shipping charge by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets an account shipping charge by its ID",
        "operationId": "getAccountShippingChargeById"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account shipping charge.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing account shipping charge.",
        "operationId": "deleteAccountShippingCharge",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing account shipping charge."
      }
    },
    "/rest/admin/v2/accounts/{accountId}/shipping-methods": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account shipping methods in total."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the account shipping method."
                      },
                      "accountId": {
                        "type": "string",
                        "description": "The unique numeric ID of the account that contains this shipping method."
                      },
                      "shippingMethodId": {
                        "type": "string",
                        "description": "The unique numeric ID of the shipping method."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account shipping methods returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first account shipping method."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets a collection of account shipping methods.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of account shipping methods.",
        "operationId": "getAccountShippingMethods"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for account shipping method creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account shipping method."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this shipping method."
                },
                "shippingMethodId": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping method."
                }
              }
            }
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new account shipping method.",
        "operationId": "createAccountShippingMethod",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new account shipping method."
      }
    },
    "/rest/admin/v2/accounts/{accountId}/shipping-methods/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account shipping method."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this shipping method."
                },
                "shippingMethodId": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping method."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account shipping method.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets an account shipping method by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets an account shipping method by its ID",
        "operationId": "getAccountShippingMethodById"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account shipping method.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing account shipping method.",
        "operationId": "deleteAccountShippingMethod",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing account shipping method."
      }
    },
    "/rest/admin/v2/accounts/{accountId}/payment-methods": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account payment methods in total."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the account payment method."
                      },
                      "accountId": {
                        "type": "string",
                        "description": "The unique numeric ID of the account that contains this payment method."
                      },
                      "paymentMethodId": {
                        "type": "string",
                        "description": "The unique numeric ID of the payment method."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the account payment method."
                      },
                      "billingAddressNickName": {
                        "type": "string",
                        "description": "The nick name of the billing address."
                      },
                      "billingAddressOrganizationId": {
                        "type": "string",
                        "description": "The unique numeric ID of the organization that owns the billing address."
                      },
                      "creditCardBrand": {
                        "type": "string",
                        "description": "The credit card brand."
                      },
                      "accountNumber": {
                        "type": "string",
                        "description": "The account number of the payment method."
                      },
                      "expiryMonth": {
                        "type": "string",
                        "description": "The two digit number of the expiry month of the credit card."
                      },
                      "expiryYear": {
                        "type": "string",
                        "description": "The four digit number of the expiry year of the credit card."
                      },
                      "checkRoutingNumber": {
                        "type": "string",
                        "description": "The check routing number."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account payment methods returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first account payment method."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets a collection of account payment methods.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of account payment methods.",
        "operationId": "getAccountPaymentMethods"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for account payment method creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account payment method."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this payment method."
                },
                "paymentMethodId": {
                  "type": "string",
                  "description": "The unique numeric ID of the payment method."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the account payment method."
                },
                "billingAddressNickName": {
                  "type": "string",
                  "description": "The nick name of the billing address."
                },
                "billingAddressOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the organization that owns the billing address."
                },
                "creditCardBrand": {
                  "type": "string",
                  "description": "The credit card brand."
                },
                "accountNumber": {
                  "type": "string",
                  "description": "The account number of the payment method."
                },
                "expiryMonth": {
                  "type": "string",
                  "description": "The two digit number of the expiry month of the credit card."
                },
                "expiryYear": {
                  "type": "string",
                  "description": "The four digit number of the expiry year of the credit card."
                },
                "checkRoutingNumber": {
                  "type": "string",
                  "description": "The check routing number."
                }
              }
            }
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new account payment method.",
        "operationId": "createAccountPaymentMethod",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new account payment method."
      }
    },
    "/rest/admin/v2/accounts/{accountId}/payment-methods/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account payment method."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this payment method."
                },
                "paymentMethodId": {
                  "type": "string",
                  "description": "The unique numeric ID of the payment method."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the account payment method."
                },
                "billingAddressNickName": {
                  "type": "string",
                  "description": "The nick name of the billing address."
                },
                "billingAddressOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the organization that owns the billing address."
                },
                "creditCardBrand": {
                  "type": "string",
                  "description": "The credit card brand."
                },
                "accountNumber": {
                  "type": "string",
                  "description": "The account number of the payment method."
                },
                "expiryMonth": {
                  "type": "string",
                  "description": "The two digit number of the expiry month of the credit card."
                },
                "expiryYear": {
                  "type": "string",
                  "description": "The four digit number of the expiry year of the credit card."
                },
                "checkRoutingNumber": {
                  "type": "string",
                  "description": "The check routing number."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account payment method.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets an account payment method by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets an account payment method by its ID",
        "operationId": "getAccountPaymentMethodById"
      },
      "patch": {
        "responses": {
          "204": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account payment method.",
            "name": "id",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for creating an account payment method.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account payment method."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this payment method."
                },
                "paymentMethodId": {
                  "type": "string",
                  "description": "The unique numeric ID of the payment method."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the account payment method."
                },
                "billingAddressNickName": {
                  "type": "string",
                  "description": "The nick name of the billing address."
                },
                "billingAddressOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the organization that owns the billing address."
                },
                "creditCardBrand": {
                  "type": "string",
                  "description": "The credit card brand."
                },
                "accountNumber": {
                  "type": "string",
                  "description": "The account number of the payment method."
                },
                "expiryMonth": {
                  "type": "string",
                  "description": "The two digit number of the expiry month of the credit card."
                },
                "expiryYear": {
                  "type": "string",
                  "description": "The four digit number of the expiry year of the credit card."
                },
                "checkRoutingNumber": {
                  "type": "string",
                  "description": "The check routing number."
                }
              }
            }
          }
        ],
        "tags": [
          "Accounts"
        ],
        "summary": "Updates an existing account payment method.",
        "operationId": "updateAccountPaymentMethod",
        "description": "Updates an existing account payment method."
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account payment method.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing account payment method.",
        "operationId": "deleteAccountPaymentMethod",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing account payment method."
      }
    },
    "/rest/admin/v2/accounts/{accountId}/purchase-orders": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of account purchase orders in total."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the account purchase order."
                      },
                      "accountId": {
                        "type": "string",
                        "description": "The unique numeric ID of the account that contains this purchase order."
                      },
                      "purchaseOrderNumber": {
                        "type": "string",
                        "description": "The purchase order number."
                      },
                      "spendingLimitValue": {
                        "type": "number",
                        "description": "The spending limit value for the purchase order."
                      },
                      "spendingLimitCurrency": {
                        "type": "string",
                        "description": "The spending limit currency for the purchase order."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of purchase orders returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first purchase order."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets a collection of account purchase orders.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of account purchase orders.",
        "operationId": "getAccountPurchaseOrders"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for account purchase order creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account purchase order."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this purchase order."
                },
                "purchaseOrderNumber": {
                  "type": "string",
                  "description": "The purchase order number."
                },
                "spendingLimitValue": {
                  "type": "number",
                  "description": "The spending limit value for the purchase order."
                },
                "spendingLimitCurrency": {
                  "type": "string",
                  "description": "The spending limit currency for the purchase order."
                }
              }
            }
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new account purchase order.",
        "operationId": "createAccountPurchaseOrder",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new account purchase order."
      }
    },
    "/rest/admin/v2/accounts/{accountId}/purchase-orders/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account purchase order."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this purchase order."
                },
                "purchaseOrderNumber": {
                  "type": "string",
                  "description": "The purchase order number."
                },
                "spendingLimitValue": {
                  "type": "number",
                  "description": "The spending limit value for the purchase order."
                },
                "spendingLimitCurrency": {
                  "type": "string",
                  "description": "The spending limit currency for the purchase order."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account purchase orders.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "description": "Gets an account purchase order by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets an account purchase order by its ID",
        "operationId": "getAccountPurchaseOrderById"
      },
      "patch": {
        "responses": {
          "204": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account purchase order.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account purchase order.",
            "name": "id",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for creating an account purchase order.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the account purchase order."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the account that contains this purchase order."
                },
                "purchaseOrderNumber": {
                  "type": "string",
                  "description": "The purchase order number."
                },
                "spendingLimitValue": {
                  "type": "number",
                  "description": "The spending limit value for the purchase order."
                },
                "spendingLimitCurrency": {
                  "type": "string",
                  "description": "The spending limit currency for the purchase order."
                }
              }
            }
          }
        ],
        "tags": [
          "Accounts"
        ],
        "summary": "Updates an existing account purchase order.",
        "operationId": "updateAccountPurchaseOrder",
        "description": "Updates an existing account purchase order."
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account.",
            "name": "accountId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the account purchase order.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Accounts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing account purchase order.",
        "operationId": "deleteAccountPurchaseOrder",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing account purchase order."
      }
    },
    "/rest/admin/v2/contracts": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract records in total based on the query parameters specified."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the contract."
                      },
                      "accountId": {
                        "type": "string",
                        "description": "The unique numeric ID of the type of the account that contains this contract."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the contract."
                      },
                      "description": {
                        "type": "string",
                        "description": "The contract description."
                      },
                      "longDescription": {
                        "type": "string",
                        "description": "The contract long description."
                      },
                      "comment": {
                        "type": "string",
                        "description": "A comment for the contract."
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the contract. Possible values are \n * draft\n * submitted\n * approved\n * active\n * rejected\n * canceled\n * suspended\n * deploying\n * deployFailed"
                      },
                      "baseContractId": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying this contract's base contract."
                      },
                      "baseContractName": {
                        "type": "string",
                        "description": "The name of this contract's base contract."
                      },
                      "createDate": {
                        "type": "string",
                        "description": "The create date of the contract."
                      },
                      "updateDate": {
                        "type": "string",
                        "description": "The last update date of the contract."
                      },
                      "startDate": {
                        "type": "string",
                        "description": "The start date of the contract."
                      },
                      "endDate": {
                        "type": "string",
                        "description": "The end date of the contract."
                      },
                      "majorVersion": {
                        "type": "string",
                        "description": "The major version of the new contract."
                      },
                      "minorVersion": {
                        "type": "string",
                        "description": "The minor version of the new contract."
                      },
                      "allowAccountCreditLine": {
                        "type": "boolean",
                        "description": "Allow customers to make purchase using the account's line of credit."
                      },
                      "allowPersonalBillingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select billing addresses from their personal address book."
                      },
                      "allowParentOrganizationBillingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select billing addresses from their parent organization's address book."
                      },
                      "allowAccountOrganizationBillingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select billing addresses from the account organization's address book."
                      },
                      "allowPersonalShippingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select shipping addresses from their personal address book."
                      },
                      "allowParentOrganizationShippingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select shipping addresses from their parent organization's address book."
                      },
                      "allowAccountOrganizationShippingAddress": {
                        "type": "boolean",
                        "description": "Allow customers to select shipping addresses from the account organization's address book."
                      },
                      "priceRuleId": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the price rule associated with this contract."
                      },
                      "catalogFilterId": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the catalog filter associated with this contract."
                      },
                      "orderApprovalMinimumValue": {
                        "type": "string",
                        "description": "The minimum monetary value for orders that must be approved."
                      },
                      "orderApprovalCurrency": {
                        "type": "string",
                        "description": "The currency for orderApprovalMinimumValue."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract records returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first contract record."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the business account which contains the contract.",
            "name": "accountId",
            "in": "query"
          },
          {
            "description": "Limits search results to only include contracts with a name or description that matches the value of this parameter.",
            "in": "query",
            "name": "searchString",
            "required": false,
            "type": "string"
          },
          {
            "required": false,
            "type": "string",
            "description": "Limits search results to only include contracts with the specified status. Possible values are \n * draft\n * submitted\n * approved\n * active\n * rejected\n * canceled\n * suspended\n * deploying\n * deployFailed",
            "name": "status",
            "in": "query"
          },
          {
            "required": false,
            "type": "boolean",
            "description": "Returns the list of contracts that can be used as base contracts for contracts in the specified account.",
            "name": "baseContracts",
            "in": "query"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name will order the items based on the name value in ascending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of contracts.",
        "operationId": "getContracts",
        "description": "Get a collection of contracts."
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. Some of the inputs provided to the request aren't valid."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. Additional details will be contained on the server logs."
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "body",
            "description": "The request body for creating contract.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the type of the account that contains this contract."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the contract."
                },
                "description": {
                  "type": "string",
                  "description": "The contract description."
                },
                "longDescription": {
                  "type": "string",
                  "description": "The contract long description."
                },
                "comment": {
                  "type": "string",
                  "description": "A comment for the contract."
                },
                "status": {
                  "type": "string",
                  "description": "The status of the contract. Possible values are \n * draft\n * submitted\n * approved\n * active\n * rejected\n * canceled\n * suspended\n * deploying\n * deployFailed"
                },
                "baseContractId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying this contract's base contract."
                },
                "baseContractName": {
                  "type": "string",
                  "description": "The name of this contract's base contract."
                },
                "createDate": {
                  "type": "string",
                  "description": "The create date of the contract."
                },
                "updateDate": {
                  "type": "string",
                  "description": "The last update date of the contract."
                },
                "startDate": {
                  "type": "string",
                  "description": "The start date of the contract."
                },
                "endDate": {
                  "type": "string",
                  "description": "The end date of the contract."
                },
                "majorVersion": {
                  "type": "string",
                  "description": "The major version of the new contract."
                },
                "minorVersion": {
                  "type": "string",
                  "description": "The minor version of the new contract."
                },
                "allowAccountCreditLine": {
                  "type": "boolean",
                  "description": "Allow customers to make purchase using the account's line of credit."
                },
                "allowPersonalBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their personal address book."
                },
                "allowParentOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their parent organization's address book."
                },
                "allowAccountOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from the account organization's address book."
                },
                "allowPersonalShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their personal address book."
                },
                "allowParentOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their parent organization's address book."
                },
                "allowAccountOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from the account organization's address book."
                },
                "priceRuleId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the price rule associated with this contract."
                },
                "catalogFilterId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the catalog filter associated with this contract."
                },
                "orderApprovalMinimumValue": {
                  "type": "string",
                  "description": "The minimum monetary value for orders that must be approved."
                },
                "orderApprovalCurrency": {
                  "type": "string",
                  "description": "The currency for orderApprovalMinimumValue."
                }
              }
            }
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new contract",
        "operationId": "createContract",
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new contract."
      }
    },
    "/rest/admin/v2/contracts/{id}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the type of the account that contains this contract."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the contract."
                },
                "description": {
                  "type": "string",
                  "description": "The contract description."
                },
                "longDescription": {
                  "type": "string",
                  "description": "The contract long description."
                },
                "comment": {
                  "type": "string",
                  "description": "A comment for the contract."
                },
                "status": {
                  "type": "string",
                  "description": "The status of the contract. Possible values are \n * draft\n * submitted\n * approved\n * active\n * rejected\n * canceled\n * suspended\n * deploying\n * deployFailed"
                },
                "baseContractId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying this contract's base contract."
                },
                "baseContractName": {
                  "type": "string",
                  "description": "The name of this contract's base contract."
                },
                "createDate": {
                  "type": "string",
                  "description": "The create date of the contract."
                },
                "updateDate": {
                  "type": "string",
                  "description": "The last update date of the contract."
                },
                "startDate": {
                  "type": "string",
                  "description": "The start date of the contract."
                },
                "endDate": {
                  "type": "string",
                  "description": "The end date of the contract."
                },
                "majorVersion": {
                  "type": "string",
                  "description": "The major version of the new contract."
                },
                "minorVersion": {
                  "type": "string",
                  "description": "The minor version of the new contract."
                },
                "allowAccountCreditLine": {
                  "type": "boolean",
                  "description": "Allow customers to make purchase using the account's line of credit."
                },
                "allowPersonalBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their personal address book."
                },
                "allowParentOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their parent organization's address book."
                },
                "allowAccountOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from the account organization's address book."
                },
                "allowPersonalShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their personal address book."
                },
                "allowParentOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their parent organization's address book."
                },
                "allowAccountOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from the account organization's address book."
                },
                "priceRuleId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the price rule associated with this contract."
                },
                "catalogFilterId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the catalog filter associated with this contract."
                },
                "orderApprovalMinimumValue": {
                  "type": "string",
                  "description": "The minimum monetary value for orders that must be approved."
                },
                "orderApprovalCurrency": {
                  "type": "string",
                  "description": "The currency for orderApprovalMinimumValue."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a contract by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a contract by ID",
        "operationId": "getContractById"
      },
      "patch": {
        "responses": {
          "204": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "id",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for updating a contract.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract."
                },
                "accountId": {
                  "type": "string",
                  "description": "The unique numeric ID of the type of the account that contains this contract."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the contract."
                },
                "description": {
                  "type": "string",
                  "description": "The contract description."
                },
                "longDescription": {
                  "type": "string",
                  "description": "The contract long description."
                },
                "comment": {
                  "type": "string",
                  "description": "A comment for the contract."
                },
                "status": {
                  "type": "string",
                  "description": "The status of the contract. Possible values are \n * draft\n * submitted\n * approved\n * active\n * rejected\n * canceled\n * suspended\n * deploying\n * deployFailed"
                },
                "baseContractId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying this contract's base contract."
                },
                "baseContractName": {
                  "type": "string",
                  "description": "The name of this contract's base contract."
                },
                "createDate": {
                  "type": "string",
                  "description": "The create date of the contract."
                },
                "updateDate": {
                  "type": "string",
                  "description": "The last update date of the contract."
                },
                "startDate": {
                  "type": "string",
                  "description": "The start date of the contract."
                },
                "endDate": {
                  "type": "string",
                  "description": "The end date of the contract."
                },
                "majorVersion": {
                  "type": "string",
                  "description": "The major version of the new contract."
                },
                "minorVersion": {
                  "type": "string",
                  "description": "The minor version of the new contract."
                },
                "allowAccountCreditLine": {
                  "type": "boolean",
                  "description": "Allow customers to make purchase using the account's line of credit."
                },
                "allowPersonalBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their personal address book."
                },
                "allowParentOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from their parent organization's address book."
                },
                "allowAccountOrganizationBillingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select billing addresses from the account organization's address book."
                },
                "allowPersonalShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their personal address book."
                },
                "allowParentOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from their parent organization's address book."
                },
                "allowAccountOrganizationShippingAddress": {
                  "type": "boolean",
                  "description": "Allow customers to select shipping addresses from the account organization's address book."
                },
                "priceRuleId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the price rule associated with this contract."
                },
                "catalogFilterId": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the catalog filter associated with this contract."
                },
                "orderApprovalMinimumValue": {
                  "type": "string",
                  "description": "The minimum monetary value for orders that must be approved."
                },
                "orderApprovalCurrency": {
                  "type": "string",
                  "description": "The currency for orderApprovalMinimumValue."
                }
              }
            }
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Updates an existing contract.",
        "summary": "Updates an existing contract",
        "operationId": "updateContract"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes the specified contracts by setting the contracts to mark for delete",
        "operationId": "deleteContract",
        "description": "Deletes the specified contracts by setting the contracts to mark for delete.<br>It does not remove the contract from the database immediately. A contract has to be in one of the following state to run this command - draft or canceled."
      }
    },
    "/rest/admin/v2/contracts/{id}/export": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "file"
            },
            "description": "The contract was exported successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "in": "path",
            "name": "id"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Export a contract.",
        "produces": [
          "application/xml"
        ],
        "summary": "Exports a contract.",
        "operationId": "exportContract"
      }
    },
    "/rest/admin/v2/contracts/import": {
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "The unique numeric ID of the store that owns the contract.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "required": true,
            "in": "body",
            "description": "Contract XML.",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Import a contract.",
        "summary": "Import a contract.",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "importContract"
      }
    },
    "/rest/admin/v2/contracts/{id}/copy": {
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract to be copied.",
            "name": "id",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for copying a contract.",
            "name": "body",
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new contract."
                }
              }
            }
          }
        ],
        "tags": [
          "Contracts"
        ],
        "summary": "Copies a contract",
        "produces": [
          "application/json"
        ],
        "operationId": "copyContract",
        "consumes": [
          "application/json"
        ],
        "description": "Copies a contract. <br> If the command completes successfully, a new contract will be created. The contract will be in draft state with majorVersion set to 1 and minorVersion set to 0."
      }
    },
    "/rest/admin/v2/contracts/{id}/submit": {
      "post": {
        "responses": {
          "204": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Submits a contract for approval",
        "operationId": "submitContract",
        "description": "Submits a contract for approval. <br> If the designated approver for the contract decides a contract is complete and acceptable, he can move the contract into the approved state. The system will automatically attempt to deploy an approved contract.<br>If the designated approver decides a contract is not complete or is unacceptable, he can move the contract into the rejected state. A contract in the rejected state can be changed and re-submitted for approval, canceled, or marked for deletion."
      }
    },
    "/rest/admin/v2/contracts/{id}/deploy": {
      "post": {
        "responses": {
          "204": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deploys a contract",
        "operationId": "deployContract",
        "description": "Deploys a contract."
      }
    },
    "/rest/admin/v2/contracts/{id}/new-version": {
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract to be copied.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new version of a specified contract",
        "operationId": "createNewContractVersion",
        "description": "Creates a new version of a specified contract. <br>The state of the specified contract has to be in one of the following states: Approved, Active, Suspended, DeploymentInProgress, and DeploymentFailed. <br>The new contract will have the same name as the specified one. <br>If both majorVersion and minorVersion are provided, the command respects the versions. Otherwise, the new contract will have the same major version number with the old contract. The minor version will be one plus the largest minor version with the same contract name,  origin, owner, majorVerion. <br>This new contract will be in draft version."
      }
    },
    "/rest/admin/v2/contracts/{id}/suspend": {
      "post": {
        "responses": {
          "204": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract to be suspended.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "summary": "Suspends an active contract",
        "operationId": "suspendContract",
        "description": "Suspends an active contract."
      }
    },
    "/rest/admin/v2/contracts/{id}/resume": {
      "post": {
        "responses": {
          "204": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract to be resumed.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Resumes a suspended contract",
        "operationId": "resumeContract",
        "description": "Resumes the specified contract to Active state. <br>The specified contract has to be in Suspended state."
      }
    },
    "/rest/admin/v2/contracts/{id}/cancel": {
      "post": {
        "responses": {
          "204": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract to be canceled.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Cancels the specified contract by changing its contract state to Canceled",
        "operationId": "cancelContract",
        "description": "Cancels the specified contract by changing its contract state to Canceled.<br>It does not remove the contract from the database. A contract can be canceled any time except if the contract has a status of draft or deploying."
      }
    },
    "/rest/admin/v2/contracts/{contractId}/buyers": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract buyers in total."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the contract buyer."
                      },
                      "contractId": {
                        "type": "string",
                        "description": "The unique numeric ID of the contract that contains this buyer."
                      },
                      "memberId": {
                        "type": "string",
                        "description": "The unique numeric ID of the buyer member."
                      },
                      "memberType": {
                        "type": "string",
                        "description": "The type of member. Possible values are organization, memberGroup and user."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract buyers returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first contract buyer."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a collection of contract buyers.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of contract buyers.",
        "operationId": "getContractBuyers"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for contract buyer creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract buyer."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this buyer."
                },
                "memberId": {
                  "type": "string",
                  "description": "The unique numeric ID of the buyer member."
                },
                "memberType": {
                  "type": "string",
                  "description": "The type of member. Possible values are organization, memberGroup and user."
                }
              }
            }
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new contract buyer.",
        "operationId": "createContractBuyer",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new contract buyer."
      }
    },
    "/rest/admin/v2/contracts/{contractId}/buyers/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract buyer."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this buyer."
                },
                "memberId": {
                  "type": "string",
                  "description": "The unique numeric ID of the buyer member."
                },
                "memberType": {
                  "type": "string",
                  "description": "The type of member. Possible values are organization, memberGroup and user."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract buyer.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a contract buyer by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a contract buyer by its ID",
        "operationId": "getContractBuyerById"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract buyer.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing contract buyer.",
        "operationId": "deleteContractBuyer",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing contract buyer."
      }
    },
    "/rest/admin/v2/contracts/{contractId}/shipping-addresses": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract shipping addresses in total."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the contract shipping address."
                      },
                      "contractId": {
                        "type": "string",
                        "description": "The unique numeric ID of the contract that contains this shipping address."
                      },
                      "shippingAddressNickName": {
                        "type": "string",
                        "description": "The unique numeric ID of the shipping charge."
                      },
                      "shippingAddressOrganizationId": {
                        "type": "string",
                        "description": "The unique numeric ID of the organization that owns the shipping address."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract shipping addresses returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first contract shipping address."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a collection of contract shipping addresses.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of contract shipping addresses.",
        "operationId": "getContractShippingAddresses"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for contract shipping address creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract shipping address."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this shipping address."
                },
                "shippingAddressNickName": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping charge."
                },
                "shippingAddressOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the organization that owns the shipping address."
                }
              }
            }
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new contract shipping address.",
        "operationId": "createContractShippingAddress",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new contract shipping address."
      }
    },
    "/rest/admin/v2/contracts/{contractId}/shipping-addresses/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract shipping address."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this shipping address."
                },
                "shippingAddressNickName": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping charge."
                },
                "shippingAddressOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the organization that owns the shipping address."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract shipping address.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a contract shipping address by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a contract shipping address by its ID",
        "operationId": "getContractShippingAddressById"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract shipping address.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing contract shipping address.",
        "operationId": "deleteContractShippingAddress",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing contract shipping address."
      }
    },
    "/rest/admin/v2/contracts/{contractId}/shipping-charges": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract shipping charges in total."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the contract shipping charge."
                      },
                      "contractId": {
                        "type": "string",
                        "description": "The unique numeric ID of the contract that contains this shipping charge."
                      },
                      "shippingChargeId": {
                        "type": "string",
                        "description": "The unique numeric ID of the shipping charge."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract shipping charges returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first contract shipping charge."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a collection of contract shipping charges.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of contract shipping charges.",
        "operationId": "getContractShippingCharges"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for contract shipping charge creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract shipping charge."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this shipping charge."
                },
                "shippingChargeId": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping charge."
                }
              }
            }
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new contract shipping charge.",
        "operationId": "createContractShippingCharge",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new contract shipping charge."
      }
    },
    "/rest/admin/v2/contracts/{contractId}/shipping-charges/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract shipping charge."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this shipping charge."
                },
                "shippingChargeId": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping charge."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract shipping charge.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a contract shipping charge by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a contract shipping charge by its ID",
        "operationId": "getContractShippingChargeById"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract shipping charge.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing contract shipping charge.",
        "operationId": "deleteContractShippingCharge",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing contract shipping charge."
      }
    },
    "/rest/admin/v2/contracts/{contractId}/shipping-methods": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract shipping methods in total."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the contract shipping method."
                      },
                      "contractId": {
                        "type": "string",
                        "description": "The unique numeric ID of the contract that contains this shipping method."
                      },
                      "shippingMethodId": {
                        "type": "string",
                        "description": "The unique numeric ID of the shipping method."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract shipping methods returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first contract shipping method."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a collection of contract shipping methods.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of contract shipping methods.",
        "operationId": "getContractShippingMethods"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for contract shipping method creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract shipping method."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this shipping method."
                },
                "shippingMethodId": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping method."
                }
              }
            }
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new contract shipping method.",
        "operationId": "createContractShippingMethod",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new contract shipping method."
      }
    },
    "/rest/admin/v2/contracts/{contractId}/shipping-methods/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract shipping method."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this shipping method."
                },
                "shippingMethodId": {
                  "type": "string",
                  "description": "The unique numeric ID of the shipping method."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract shipping method.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a contract shipping method by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a contract shipping method by its ID",
        "operationId": "getContractShippingMethodById"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract shipping method.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing contract shipping method.",
        "operationId": "deleteContractShippingMethod",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing contract shipping method."
      }
    },
    "/rest/admin/v2/contracts/{contractId}/payment-methods": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract payment methods in total."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique numeric ID for identifying the contract payment method."
                      },
                      "contractId": {
                        "type": "string",
                        "description": "The unique numeric ID of the contract that contains this payment method."
                      },
                      "paymentMethodId": {
                        "type": "string",
                        "description": "The unique numeric ID of the payment method."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the contract payment method."
                      },
                      "billingAddressNickName": {
                        "type": "string",
                        "description": "The nick name of the billing address."
                      },
                      "billingAddressOrganizationId": {
                        "type": "string",
                        "description": "The unique numeric ID of the organization that owns the billing address."
                      },
                      "creditCardBrand": {
                        "type": "string",
                        "description": "The credit card brand."
                      },
                      "accountNumber": {
                        "type": "string",
                        "description": "The account number of the payment method."
                      },
                      "expiryMonth": {
                        "type": "string",
                        "description": "The two digit number of the expiry month of the credit card."
                      },
                      "expiryYear": {
                        "type": "string",
                        "description": "The four digit number of the expiry year of the credit card."
                      },
                      "checkRoutingNumber": {
                        "type": "string",
                        "description": "The check routing number."
                      }
                    }
                  },
                  "type": "array"
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The number of contract payment methods returned."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The starting position of the first contract payment method."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a collection of contract payment methods.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection of contract payment methods.",
        "operationId": "getContractPaymentMethods"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for contract payment method creation.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract payment method."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this payment method."
                },
                "paymentMethodId": {
                  "type": "string",
                  "description": "The unique numeric ID of the payment method."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the contract payment method."
                },
                "billingAddressNickName": {
                  "type": "string",
                  "description": "The nick name of the billing address."
                },
                "billingAddressOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the organization that owns the billing address."
                },
                "creditCardBrand": {
                  "type": "string",
                  "description": "The credit card brand."
                },
                "accountNumber": {
                  "type": "string",
                  "description": "The account number of the payment method."
                },
                "expiryMonth": {
                  "type": "string",
                  "description": "The two digit number of the expiry month of the credit card."
                },
                "expiryYear": {
                  "type": "string",
                  "description": "The four digit number of the expiry year of the credit card."
                },
                "checkRoutingNumber": {
                  "type": "string",
                  "description": "The check routing number."
                }
              }
            }
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new contract payment method.",
        "operationId": "createContractPaymentMethod",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new contract payment method."
      }
    },
    "/rest/admin/v2/contracts/{contractId}/payment-methods/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract payment method."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this payment method."
                },
                "paymentMethodId": {
                  "type": "string",
                  "description": "The unique numeric ID of the payment method."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the contract payment method."
                },
                "billingAddressNickName": {
                  "type": "string",
                  "description": "The nick name of the billing address."
                },
                "billingAddressOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the organization that owns the billing address."
                },
                "creditCardBrand": {
                  "type": "string",
                  "description": "The credit card brand."
                },
                "accountNumber": {
                  "type": "string",
                  "description": "The account number of the payment method."
                },
                "expiryMonth": {
                  "type": "string",
                  "description": "The two digit number of the expiry month of the credit card."
                },
                "expiryYear": {
                  "type": "string",
                  "description": "The four digit number of the expiry year of the credit card."
                },
                "checkRoutingNumber": {
                  "type": "string",
                  "description": "The check routing number."
                }
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract payment method.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "description": "Gets a contract payment method by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a contract payment method by its ID",
        "operationId": "getContractPaymentMethodById"
      },
      "patch": {
        "responses": {
          "204": {
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract payment method.",
            "name": "id",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body for creating a contract payment method.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique numeric ID for identifying the contract payment method."
                },
                "contractId": {
                  "type": "string",
                  "description": "The unique numeric ID of the contract that contains this payment method."
                },
                "paymentMethodId": {
                  "type": "string",
                  "description": "The unique numeric ID of the payment method."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the contract payment method."
                },
                "billingAddressNickName": {
                  "type": "string",
                  "description": "The nick name of the billing address."
                },
                "billingAddressOrganizationId": {
                  "type": "string",
                  "description": "The unique numeric ID of the organization that owns the billing address."
                },
                "creditCardBrand": {
                  "type": "string",
                  "description": "The credit card brand."
                },
                "accountNumber": {
                  "type": "string",
                  "description": "The account number of the payment method."
                },
                "expiryMonth": {
                  "type": "string",
                  "description": "The two digit number of the expiry month of the credit card."
                },
                "expiryYear": {
                  "type": "string",
                  "description": "The four digit number of the expiry year of the credit card."
                },
                "checkRoutingNumber": {
                  "type": "string",
                  "description": "The check routing number."
                }
              }
            }
          }
        ],
        "tags": [
          "Contracts"
        ],
        "summary": "Updates an existing contract payment method.",
        "operationId": "updateContractPaymentMethod",
        "description": "Updates an existing contract payment method."
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The specified resource could not be found."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {},
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract.",
            "name": "contractId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the contract payment method.",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "Contracts"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deletes an existing contract payment method.",
        "operationId": "deleteContractPaymentMethod",
        "consumes": [
          "application/json"
        ],
        "description": "Deletes an existing contract payment method."
      }
    },
    "/rest/admin/v2/extended-sites": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "hubStoreId": {
                        "description": "The unique numeric ID of the hub store that owns the extended site.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "id": {
                        "description": "The unique numeric ID of the extended site.",
                        "type": "string"
                      },
                      "identifier": {
                        "description": "The identifer for the extended site.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the extended site",
                        "type": "string"
                      },
                      "description": {
                        "description": "The description of the extended site.",
                        "type": "string"
                      },
                      "defaultLanguageId": {
                        "description": "The default language ID of the extended site.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "defaultCurrency": {
                        "description": "The default currency of the extended site.",
                        "type": "string"
                      },
                      "email": {
                        "description": "The email for the extende site.",
                        "type": "string"
                      },
                      "organizationId": {
                        "description": "The unique numeric ID of the parent organization of the extended site.",
                        "type": "string"
                      },
                      "sharedOwnerOrganizationId": {
                        "description": "The unique numeric ID of the shared store organization of the extended site.",
                        "type": "string"
                      },
                      "hostOrganizationId": {
                        "description": "The unique numeric ID of the host organization of the extended site.",
                        "type": "string"
                      },
                      "storeId": {
                        "description": "The unique numeric ID of the extended site store.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "catalogAssetStoreId": {
                        "description": "The unique numeric ID of the catalog asset store of the extended site.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "storefrontAssetStoreId": {
                        "description": "The unique numeric ID of the storefront asset store of the extended site.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "createDate": {
                        "description": "The create date of the extended site.",
                        "type": "string"
                      },
                      "status": {
                        "description": "The status of the extended site. Possible values are \n * open\n * closed\n * suspended\n * deploying\n * deployFailed",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "The request completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "The unique numeric ID of the hub store that owns the extended sites.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name will order the items based on the name value in ascending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include extended sites with a name that matches the value of this parameter.",
            "in": "query",
            "name": "searchString",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limits search results to only include extended sites with the specified status. Possible values are \n * open\n * closed\n * suspended\n * deploying\n * deployFailed",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Extended Sites"
        ],
        "description": "Get a collection of extended sites.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection extended sites.",
        "operationId": "getExtendedSites"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "properties": {
                "hubStoreId": {
                  "description": "The unique numeric ID of the hub store that owns the extended site.",
                  "type": "integer",
                  "format": "int32"
                },
                "id": {
                  "description": "The unique numeric ID of the extended site.",
                  "type": "string"
                },
                "identifier": {
                  "description": "The identifer for the extended site.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the extended site",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the extended site.",
                  "type": "string"
                },
                "defaultLanguageId": {
                  "description": "The default language ID of the extended site.",
                  "type": "integer",
                  "format": "int32"
                },
                "defaultCurrency": {
                  "description": "The default currency of the extended site.",
                  "type": "string"
                },
                "email": {
                  "description": "The email for the extende site.",
                  "type": "string"
                },
                "organizationId": {
                  "description": "The unique numeric ID of the parent organization of the extended site.",
                  "type": "string"
                },
                "sharedOwnerOrganizationId": {
                  "description": "The unique numeric ID of the shared store organization of the extended site.",
                  "type": "string"
                },
                "hostOrganizationId": {
                  "description": "The unique numeric ID of the host organization of the extended site.",
                  "type": "string"
                },
                "storeId": {
                  "description": "The unique numeric ID of the extended site store.",
                  "type": "integer",
                  "format": "int32"
                },
                "catalogAssetStoreId": {
                  "description": "The unique numeric ID of the catalog asset store of the extended site.",
                  "type": "integer",
                  "format": "int32"
                },
                "storefrontAssetStoreId": {
                  "description": "The unique numeric ID of the storefront asset store of the extended site.",
                  "type": "integer",
                  "format": "int32"
                },
                "createDate": {
                  "description": "The create date of the extended site.",
                  "type": "string"
                },
                "status": {
                  "description": "The status of the extended site. Possible values are \n * open\n * closed\n * suspended\n * deploying\n * deployFailed",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Extended Sites"
        ],
        "description": "Create an extended site.",
        "produces": [
          "application/json"
        ],
        "summary": "Create an extended site.",
        "consumes": [
          "application/json"
        ],
        "operationId": "createExtendedSite"
      }
    },
    "/rest/admin/v2/extended-sites/{id}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "hubStoreId": {
                  "description": "The unique numeric ID of the hub store that owns the extended site.",
                  "type": "integer",
                  "format": "int32"
                },
                "id": {
                  "description": "The unique numeric ID of the extended site.",
                  "type": "string"
                },
                "identifier": {
                  "description": "The identifer for the extended site.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the extended site",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the extended site.",
                  "type": "string"
                },
                "defaultLanguageId": {
                  "description": "The default language ID of the extended site.",
                  "type": "integer",
                  "format": "int32"
                },
                "defaultCurrency": {
                  "description": "The default currency of the extended site.",
                  "type": "string"
                },
                "email": {
                  "description": "The email for the extende site.",
                  "type": "string"
                },
                "organizationId": {
                  "description": "The unique numeric ID of the parent organization of the extended site.",
                  "type": "string"
                },
                "sharedOwnerOrganizationId": {
                  "description": "The unique numeric ID of the shared store organization of the extended site.",
                  "type": "string"
                },
                "hostOrganizationId": {
                  "description": "The unique numeric ID of the host organization of the extended site.",
                  "type": "string"
                },
                "storeId": {
                  "description": "The unique numeric ID of the extended site store.",
                  "type": "integer",
                  "format": "int32"
                },
                "catalogAssetStoreId": {
                  "description": "The unique numeric ID of the catalog asset store of the extended site.",
                  "type": "integer",
                  "format": "int32"
                },
                "storefrontAssetStoreId": {
                  "description": "The unique numeric ID of the storefront asset store of the extended site.",
                  "type": "integer",
                  "format": "int32"
                },
                "createDate": {
                  "description": "The create date of the extended site.",
                  "type": "string"
                },
                "status": {
                  "description": "The status of the extended site. Possible values are \n * open\n * closed\n * suspended\n * deploying\n * deployFailed",
                  "type": "string"
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the extended site.",
            "in": "path",
            "name": "id"
          }
        ],
        "tags": [
          "Extended Sites"
        ],
        "description": "Get an extended site by its ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Get an extended site by its ID.",
        "operationId": "getExtendedSiteById"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID of the extended site.",
            "in": "path",
            "name": "id"
          }
        ],
        "tags": [
          "Extended Sites"
        ],
        "description": "Delete an extended site.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete an extended site.",
        "operationId": "deleteExtendedSite"
      }
    },
    "/rest/admin/v2/extended-sites/{id}/export": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "type": "file"
            },
            "description": "The extended site was exported successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The unique numeric ID for identifying the extended site.",
            "in": "path",
            "name": "id"
          }
        ],
        "tags": [
          "Extended Sites"
        ],
        "description": "Export an extended site.",
        "produces": [
          "application/xml"
        ],
        "summary": "Exports an extended site.",
        "operationId": "exportExtendedSite"
      }
    },
    "/rest/admin/v2/extended-sites/import": {
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "The unique numeric ID of the hub store that owns the extended sites.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "required": true,
            "in": "body",
            "description": "Extended site XML.",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Extended Sites"
        ],
        "description": "Import an extended site.",
        "summary": "Import an extended site.",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "importExtendedSite"
      }
    },
    "/rest/admin/v2/shipping-charges": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "A description of the shipping charge.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the shipping charge.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the shipping charge.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "The request completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the store.",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "The ID of the language to be used to retrieve the shipping charge data.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "Limits search results to only include shipping charges that match the specified name.",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name will order the items based on the name value in ascending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Shipping Charges"
        ],
        "description": "Gets a collection of shipping charges for the specified store.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection shipping charges.",
        "operationId": "getShippingCharges"
      }
    },
    "/rest/admin/v2/payment-methods": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "A description of the payment method.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the payment method.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the payment method.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "The request completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the store.",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "The ID of the language to be used to retrieve the payment method data.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "Limits search results to only include payment methods that match the specified name.",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name will order the items based on the name value in ascending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payment Methods"
        ],
        "description": "Gets a collection of payment methods for the specified store.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection payment methods.",
        "operationId": "getPaymentMethods"
      }
    },
    "/rest/admin/v2/shipping-methods": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "A description of the shipping method.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the shipping method.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique numeric ID for identifying the shipping method.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "The request completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the store.",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "The ID of the language to be used to retrieve the shipping method data.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "The maximum number of records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "description": "Limits search results to only include shipping methods that match the specified name.",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name will order the items based on the name value in ascending order.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Shipping Methods"
        ],
        "description": "Gets a collection of shipping methods for the specified store.",
        "produces": [
          "application/json"
        ],
        "summary": "Gets a collection shipping methods.",
        "operationId": "getShippingMethods"
      }
    },
    "/rest/admin/v2/jobs": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int64",
                  "type": "integer",
                  "description": "The total number of item records that match the query parameters."
                },
                "items": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "The unique numeric ID for identifying the job.",
                        "type": "string"
                      },
                      "activeState": {
                        "description": "The flag to indicate whether the scheduled job is active or not. Available values:<br>  A - The job is active and is scheduled to run after the configured interval elapses.<br>  D - The job has been disabled or completed.",
                        "type": "string"
                      },
                      "command": {
                        "description": "The path information of the command that is to run for the job.",
                        "type": "string"
                      },
                      "interfaceName": {
                        "description": "The interface name of the check command to be run before the command is run.  See SCHCONFIG table, INTERFACENAME column.",
                        "type": "string"
                      },
                      "host": {
                        "description": "The name of the host that is allowed to run the job. If the value is null, the job can be run by any host. Use this parameter when you run jobs on multiple hosts and need to restrict a job to run a asingle host. The host name must be in the form \"name.domain\".",
                        "type": "string"
                      },
                      "interval": {
                        "description": "The repeating interval (in seconds) between successive runs of this job. If the value is null, the job runs only once.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "jobType": {
                        "description": "The type of the application thread pool where the scheduled job is included. This type is used to constrain resource-intensive jobs to a limited number of threads. The default application type is null.",
                        "type": "string"
                      },
                      "preferredStartDateTime": {
                        "description": "The preferred date and time for when the job should start. The date and time must be entered as a timestamp in the ISO 8601 format \"YYYY-MM-DDThh:mm:ssZ\".",
                        "format": "date-time",
                        "type": "string"
                      },
                      "priority": {
                        "description": "The priority of the scheduled job.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "query": {
                        "description": "The query string containing information used by the scheduled job.",
                        "type": "string"
                      },
                      "fixedTime": {
                        "description": "A flag indicating whether the job contained the fixed time parameter or not.  ie. 1 if fixedTime=1 exists, 0 otherwise.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": {
                        "description": "The description of the CustomJob being added.  This is the SCCDESCRIPTION column in the SCHCONFIG table.",
                        "type": "string"
                      },
                      "retryAttempts": {
                        "description": "The number of times that the job can be retried when the job fails. Both the retryAttempts and the retryDelay parameters need a value for a job to be retried.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "retryDelay": {
                        "description": "The delay (in seconds) between each retry attempt. Both the retryDelay and the retryAttempts parameters need a value for a job to be retried.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "sequence": {
                        "description": "Scheduling policy for the job.<br>  0 - Skip missed repeating job instances.<br>  1 - Run all missed repeating job instances.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "storeId": {
                        "description": "The unique numeric ID for identifying the store where the job runs. This value cannot be edited after job creation.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "userId": {
                        "description": "The unique numeric ID for identifying the user on whose behalf the job is run. By default, the user ID of the current user is used as the value.",
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "type": "array",
                  "description": "The items."
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of records to return."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned."
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "required": false,
            "name": "storeId",
            "type": "integer",
            "format": "int32",
            "description": "The unique numeric ID for identifying the store of the scheduler job. This field can only be assigned during job creation time.",
            "in": "query"
          },
          {
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Jobs"
        ],
        "description": "Get a collection of scheduler jobs.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of scheduler jobs.",
        "operationId": "Job-get"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "body",
            "description": "Request body. The \"id\" field will be generated and it should not be part of the request body. The \"userId\" and \"activeState\" fields are managed and it cannot be specified.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "description": "The unique numeric ID for identifying the job.",
                  "type": "string"
                },
                "activeState": {
                  "description": "The flag to indicate whether the scheduled job is active or not. Available values:<br>  A - The job is active and is scheduled to run after the configured interval elapses.<br>  D - The job has been disabled or completed.",
                  "type": "string"
                },
                "command": {
                  "description": "The path information of the command that is to run for the job.",
                  "type": "string"
                },
                "interfaceName": {
                  "description": "The interface name of the check command to be run before the command is run.  See SCHCONFIG table, INTERFACENAME column.",
                  "type": "string"
                },
                "host": {
                  "description": "The name of the host that is allowed to run the job. If the value is null, the job can be run by any host. Use this parameter when you run jobs on multiple hosts and need to restrict a job to run a asingle host. The host name must be in the form \"name.domain\".",
                  "type": "string"
                },
                "interval": {
                  "description": "The repeating interval (in seconds) between successive runs of this job. If the value is null, the job runs only once.",
                  "type": "integer",
                  "format": "int32"
                },
                "jobType": {
                  "description": "The type of the application thread pool where the scheduled job is included. This type is used to constrain resource-intensive jobs to a limited number of threads. The default application type is null.",
                  "type": "string"
                },
                "preferredStartDateTime": {
                  "description": "The preferred date and time for when the job should start. The date and time must be entered as a timestamp in the ISO 8601 format \"YYYY-MM-DDThh:mm:ssZ\".",
                  "format": "date-time",
                  "type": "string"
                },
                "priority": {
                  "description": "The priority of the scheduled job.",
                  "type": "integer",
                  "format": "int32"
                },
                "query": {
                  "description": "The query string containing information used by the scheduled job.",
                  "type": "string"
                },
                "fixedTime": {
                  "description": "A flag indicating whether the job contained the fixed time parameter or not.  ie. 1 if fixedTime=1 exists, 0 otherwise.",
                  "type": "integer",
                  "format": "int32"
                },
                "description": {
                  "description": "The description of the CustomJob being added.  This is the SCCDESCRIPTION column in the SCHCONFIG table.",
                  "type": "string"
                },
                "retryAttempts": {
                  "description": "The number of times that the job can be retried when the job fails. Both the retryAttempts and the retryDelay parameters need a value for a job to be retried.",
                  "type": "integer",
                  "format": "int32"
                },
                "retryDelay": {
                  "description": "The delay (in seconds) between each retry attempt. Both the retryDelay and the retryAttempts parameters need a value for a job to be retried.",
                  "type": "integer",
                  "format": "int32"
                },
                "sequence": {
                  "description": "Scheduling policy for the job.<br>  0 - Skip missed repeating job instances.<br>  1 - Run all missed repeating job instances.",
                  "type": "integer",
                  "format": "int32"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store where the job runs. This value cannot be edited after job creation.",
                  "type": "integer",
                  "format": "int32"
                },
                "userId": {
                  "description": "The unique numeric ID for identifying the user on whose behalf the job is run. By default, the user ID of the current user is used as the value.",
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "tags": [
          "Jobs"
        ],
        "description": "Create a scheduler job.",
        "produces": [
          "application/json"
        ],
        "summary": "Create a scheduler job.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Job-post"
      }
    },
    "/rest/admin/v2/jobs/{id}/new-version": {
      "post": {
        "responses": {
          "201": {
            "description": "The requested resource has been created.",
            "headers": {
              "Location": {
                "description": "Link to the newly created resource.",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "body",
            "description": "Request body. The \"userId\" and \"activeState\" fields are managed and it cannot be specified.",
            "name": "body",
            "schema": {
              "properties": {
                "id": {
                  "description": "The unique numeric ID for identifying the job.",
                  "type": "string"
                },
                "activeState": {
                  "description": "The flag to indicate whether the scheduled job is active or not. Available values:<br>  A - The job is active and is scheduled to run after the configured interval elapses.<br>  D - The job has been disabled or completed.",
                  "type": "string"
                },
                "command": {
                  "description": "The path information of the command that is to run for the job.",
                  "type": "string"
                },
                "interfaceName": {
                  "description": "The interface name of the check command to be run before the command is run.  See SCHCONFIG table, INTERFACENAME column.",
                  "type": "string"
                },
                "host": {
                  "description": "The name of the host that is allowed to run the job. If the value is null, the job can be run by any host. Use this parameter when you run jobs on multiple hosts and need to restrict a job to run a asingle host. The host name must be in the form \"name.domain\".",
                  "type": "string"
                },
                "interval": {
                  "description": "The repeating interval (in seconds) between successive runs of this job. If the value is null, the job runs only once.",
                  "type": "integer",
                  "format": "int32"
                },
                "jobType": {
                  "description": "The type of the application thread pool where the scheduled job is included. This type is used to constrain resource-intensive jobs to a limited number of threads. The default application type is null.",
                  "type": "string"
                },
                "preferredStartDateTime": {
                  "description": "The preferred date and time for when the job should start. The date and time must be entered as a timestamp in the ISO 8601 format \"YYYY-MM-DDThh:mm:ssZ\".",
                  "format": "date-time",
                  "type": "string"
                },
                "priority": {
                  "description": "The priority of the scheduled job.",
                  "type": "integer",
                  "format": "int32"
                },
                "query": {
                  "description": "The query string containing information used by the scheduled job.",
                  "type": "string"
                },
                "fixedTime": {
                  "description": "A flag indicating whether the job contained the fixed time parameter or not.  ie. 1 if fixedTime=1 exists, 0 otherwise.",
                  "type": "integer",
                  "format": "int32"
                },
                "description": {
                  "description": "The description of the CustomJob being added.  This is the SCCDESCRIPTION column in the SCHCONFIG table.",
                  "type": "string"
                },
                "retryAttempts": {
                  "description": "The number of times that the job can be retried when the job fails. Both the retryAttempts and the retryDelay parameters need a value for a job to be retried.",
                  "type": "integer",
                  "format": "int32"
                },
                "retryDelay": {
                  "description": "The delay (in seconds) between each retry attempt. Both the retryDelay and the retryAttempts parameters need a value for a job to be retried.",
                  "type": "integer",
                  "format": "int32"
                },
                "sequence": {
                  "description": "Scheduling policy for the job.<br>  0 - Skip missed repeating job instances.<br>  1 - Run all missed repeating job instances.",
                  "type": "integer",
                  "format": "int32"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store where the job runs. This value cannot be edited after job creation.",
                  "type": "integer",
                  "format": "int32"
                },
                "userId": {
                  "description": "The unique numeric ID for identifying the user on whose behalf the job is run. By default, the user ID of the current user is used as the value.",
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          {
            "required": true,
            "type": "string",
            "in": "path",
            "description": "The unique numeric ID for identifying the scheduler job.",
            "name": "id"
          }
        ],
        "tags": [
          "Jobs"
        ],
        "description": "Edit a scheduler job.",
        "produces": [
          "application/json"
        ],
        "summary": "Edit a scheduler job.",
        "consumes": [
          "application/json"
        ],
        "operationId": "Job-createNewVersionJob"
      }
    },
    "/rest/admin/v2/jobs/{id}": {
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "in": "path",
            "description": "The unique numeric ID for identifying the scheduler job.",
            "name": "id"
          }
        ],
        "tags": [
          "Jobs"
        ],
        "description": "Delete a scheduler job by ID",
        "produces": [
          "application/json"
        ],
        "summary": "Delete a job by ID.",
        "operationId": "Job-delete"
      },
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "id": {
                  "description": "The unique numeric ID for identifying the job.",
                  "type": "string"
                },
                "activeState": {
                  "description": "The flag to indicate whether the scheduled job is active or not. Available values:<br>  A - The job is active and is scheduled to run after the configured interval elapses.<br>  D - The job has been disabled or completed.",
                  "type": "string"
                },
                "command": {
                  "description": "The path information of the command that is to run for the job.",
                  "type": "string"
                },
                "interfaceName": {
                  "description": "The interface name of the check command to be run before the command is run.  See SCHCONFIG table, INTERFACENAME column.",
                  "type": "string"
                },
                "host": {
                  "description": "The name of the host that is allowed to run the job. If the value is null, the job can be run by any host. Use this parameter when you run jobs on multiple hosts and need to restrict a job to run a asingle host. The host name must be in the form \"name.domain\".",
                  "type": "string"
                },
                "interval": {
                  "description": "The repeating interval (in seconds) between successive runs of this job. If the value is null, the job runs only once.",
                  "type": "integer",
                  "format": "int32"
                },
                "jobType": {
                  "description": "The type of the application thread pool where the scheduled job is included. This type is used to constrain resource-intensive jobs to a limited number of threads. The default application type is null.",
                  "type": "string"
                },
                "preferredStartDateTime": {
                  "description": "The preferred date and time for when the job should start. The date and time must be entered as a timestamp in the ISO 8601 format \"YYYY-MM-DDThh:mm:ssZ\".",
                  "format": "date-time",
                  "type": "string"
                },
                "priority": {
                  "description": "The priority of the scheduled job.",
                  "type": "integer",
                  "format": "int32"
                },
                "query": {
                  "description": "The query string containing information used by the scheduled job.",
                  "type": "string"
                },
                "fixedTime": {
                  "description": "A flag indicating whether the job contained the fixed time parameter or not.  ie. 1 if fixedTime=1 exists, 0 otherwise.",
                  "type": "integer",
                  "format": "int32"
                },
                "description": {
                  "description": "The description of the CustomJob being added.  This is the SCCDESCRIPTION column in the SCHCONFIG table.",
                  "type": "string"
                },
                "retryAttempts": {
                  "description": "The number of times that the job can be retried when the job fails. Both the retryAttempts and the retryDelay parameters need a value for a job to be retried.",
                  "type": "integer",
                  "format": "int32"
                },
                "retryDelay": {
                  "description": "The delay (in seconds) between each retry attempt. Both the retryDelay and the retryAttempts parameters need a value for a job to be retried.",
                  "type": "integer",
                  "format": "int32"
                },
                "sequence": {
                  "description": "Scheduling policy for the job.<br>  0 - Skip missed repeating job instances.<br>  1 - Run all missed repeating job instances.",
                  "type": "integer",
                  "format": "int32"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store where the job runs. This value cannot be edited after job creation.",
                  "type": "integer",
                  "format": "int32"
                },
                "userId": {
                  "description": "The unique numeric ID for identifying the user on whose behalf the job is run. By default, the user ID of the current user is used as the value.",
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "in": "path",
            "description": "The unique numeric ID for identifying the scheduler job.",
            "name": "id"
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned."
          },
          {
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Jobs"
        ],
        "description": "Get a scheduler job by ID.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a scheduler job by ID.",
        "operationId": "Job-getById"
      }
    },
    "/rest/admin/v2/job-types": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "count": {
                  "format": "int64",
                  "type": "integer",
                  "description": "The total number of item records that match the query parameters."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The items."
                  }
                },
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of records to return."
                },
                "offset": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters."
                }
              }
            },
            "description": "The requested completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "This is the content type to be placed in the header",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "tags": [
          "JobTypes"
        ],
        "description": "Get a collection of scheduler job types.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of scheduler job types.",
        "operationId": "Job-getJobTypes"
      }
    },
    "/rest/admin/v2/job-statuses": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "The unique numeric ID of the job status (job instance).",
                        "type": "string"
                      },
                      "jobId": {
                        "description": "The unique numeric ID of the job (job configuration).",
                        "type": "string"
                      },
                      "applicationType": {
                        "description": "The application type of the job.",
                        "type": "string"
                      },
                      "start": {
                        "description": "The start date of the date range to return the job statuses. The date is respective of the server locale and of the format yyyy-MM-dd HH:mm:ss ie. 2020-05-29 16:15:53.092",
                        "type": "string"
                      },
                      "end": {
                        "description": "The end date of the date range to return the job statuses. The date is respective of the server locale and of the format yyyy-MM-dd HH:mm:ss ie. 2020-05-29 16:15:53.092",
                        "type": "string"
                      },
                      "state": {
                        "description": "The state of the job execution.  ie. Has the job run?",
                        "type": "string"
                      },
                      "status": {
                        "description": "The status of the job execution.  ie.  Successful / Failed",
                        "type": "string"
                      },
                      "pathInfo": {
                        "description": "The command / path information of the job.",
                        "type": "string"
                      },
                      "queryString": {
                        "description": "The parameter list of the job.",
                        "type": "string"
                      }
                    }
                  }
                },
                "offset": {
                  "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "limit": {
                  "description": "The maximum number of records to return.",
                  "format": "int32",
                  "maximum": 500,
                  "type": "integer"
                }
              }
            },
            "description": "The request completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "This is the content type to be placed in the header",
            "required": true,
            "type": "string"
          },
          {
            "name": "criteriaStart",
            "in": "query",
            "description": "The start date of the date range for the scheduled job status to return.  The value is the actual start date the job was run on the server's time zone.  The date format is yyyy-MM-dd'T'HH:mm:ss, ie. 2020-04-20T04:00:00.",
            "required": false,
            "type": "string"
          },
          {
            "name": "criteriaEnd",
            "in": "query",
            "description": "The end date of the date range for the scheduled job status to return.  The value is the actual end date the job was run on the server's time zone.  The date format is yyyy-MM-dd'T'HH:mm:ss, ie. 2020-04-20T04:00:00.",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxItems",
            "default": 15000,
            "in": "query",
            "description": "The maxiumum number of items to fetch from the database.  Default is 15000.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "The unique numeric ID of the store that the jobs are running for.  If site, store ID must be 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "default": 0,
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "The maximum number of records to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "The comma-separated set of properties that control the order of the listed items. Properties can be prefixed by either (-) to sort in descending order, or (+) to sort in ascending order. By default, properties are sorted in ascending order. For example, sort=name will order the items based on the name value in ascending order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchString",
            "description": "Limits search results to only include scheduled job status with a command name that matches the value of this parameter. Searches are case-insensitive.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "description": "Limits search results to only include scheduled job status with a state that matches the value of this parameter. Searches are case-sensitive.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "Limits search results to only include scheduled job status with a status that matches the value of this parameter. Searches are case-sensitive.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationType",
            "description": "Limits search results to only include scheduled job status with an application type that matches the value of this parameter. Searches are case-sensitive.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Jobs Statuses"
        ],
        "description": "Get a collection of scheduled job statuses.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of scheduled job statuses.",
        "consumes": [
          "application/json"
        ],
        "operationId": "getScheduledJobStatuses"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "This is the content type to be placed in the header",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "The unique numeric ID of the store that the jobs are running for.  If site, store ID must be 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "The end time of when the jobs were run, to remove status for.  The value is the end date that the job status should be removed for.  The date format is yyyy-MM-dd'T'HH:mm:ss, ie. 2020-04-20T04:00:00.",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Jobs Statuses"
        ],
        "description": "Delete previous scheduler job status that has completed successfully, or failed.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete previous scheduler job status that has completed successfully, or failed.",
        "operationId": "Job-Statuses-delete"
      }
    },
    "/rest/admin/v2/job-statuses/{id}": {
      "delete": {
        "responses": {
          "204": {
            "description": "The requested resource has been deleted."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "This is the content type to be placed in the header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "required": true,
            "type": "string",
            "in": "path",
            "description": "The unique numeric ID for identifying the scheduler job."
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "The unique numeric ID of the store that the jobs are running for.  If site, store ID must be 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "The end time of when the jobs were run, to remove status for.  The value is the end date that the job status should be removed for.  The date format is yyyy-MM-dd'T'HH:mm:ss, ie. 2020-04-20T04:00:00.",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Jobs Statuses"
        ],
        "description": "Delete previous scheduler job status for the Job specified, that has completed successfully, or failed.",
        "produces": [
          "application/json"
        ],
        "summary": "Delete previous scheduler job status for the Job specified, that has completed successfully, or failed.",
        "operationId": "Job-Statuses-by-JobId-delete"
      }
    },
    "/rest/admin/v2/job-store-commands": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "command": {
                        "description": "The command / path information of the job.",
                        "type": "string"
                      },
                      "checkCommands": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "id": {
                              "description": "The internal ID of the check command.",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "The display name of the check command.",
                              "type": "string"
                            },
                            "interfaceName": {
                              "description": "The interface name of the check command.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              }
            },
            "description": "The request completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "This is the content type to be placed in the header",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Job Store Commands"
        ],
        "description": "Get a collection of scheduled Job Store commands.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of scheduled Job Store commands.",
        "consumes": [
          "application/json"
        ],
        "operationId": "getScheduledJobStoreCommands"
      }
    },
    "/rest/admin/v2/job-site-commands": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "command": {
                        "description": "The command / path information of the job.",
                        "type": "string"
                      }
                    }
                  }
                },
                "count": {
                  "description": "The total number of item records that match the query parameters.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              }
            },
            "description": "The request completed successfully."
          },
          "400": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "schema": {
              "description": "The error message model.",
              "properties": {
                "errors": {
                  "items": {
                    "description": "The error message item model.",
                    "properties": {
                      "code": {
                        "description": "The error message code.",
                        "type": "string"
                      },
                      "correlationId": {
                        "description": "The unique identifier for the request.",
                        "type": "string"
                      },
                      "locale": {
                        "description": "The locale of the error message.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "type": "string"
                      },
                      "messageArguments": {
                        "description": "The arguments used to construct the error message.",
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "messageKey": {
                        "description": "The error message key.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requestId": {
                  "description": "The request identifier.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "This is the content type to be placed in the header",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Job Site Commands"
        ],
        "description": "Get a collection of scheduled job site commands.",
        "produces": [
          "application/json"
        ],
        "summary": "Get a collection of scheduled job site commands.",
        "consumes": [
          "application/json"
        ],
        "operationId": "getScheduledJobSiteCommands"
      }
    },
    "/wcs/resources/store/{storeId}/previewToken/isvalid": {
      "post": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "required": [
                "valid"
              ],
              "properties": {
                "valid": {
                  "type": "boolean",
                  "description": "The valid identifier."
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "required": true,
            "in": "body",
            "description": "The request body to validate a preview token password.",
            "name": "body",
            "schema": {
              "description": "Preview token password validation request body",
              "properties": {
                "previewToken": {
                  "type": "string",
                  "description": "The preview token."
                },
                "password": {
                  "type": "string",
                  "description": "The password."
                }
              }
            }
          }
        ],
        "tags": [
          "Preview Token"
        ],
        "description": "Checks if the password is valid.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Check password validity",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "operationId": "checkIsPasswordValid"
      }
    },
    "/wcs/resources/store/{storeId}/usercontext/personalizationId": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "personalizationID"
              ],
              "description": "Personalization identifier.",
              "properties": {
                "personalizationID": {
                  "type": "string",
                  "description": "The personalization identifier."
                }
              }
            },
            "description": "The requested completed successfully.",
            "examples": {
              "application/json": {
                "personalizationID": "1414184550631-55"
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          }
        ],
        "tags": [
          "User Context"
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get personalization ID",
        "operationId": "UserContext-getPersonalizationID",
        "description": "Gets or generates the Personalization ID of the current session."
      }
    },
    "/wcs/resources/store/{storeId}/loginidentity": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "WCToken",
                "WCTrustedToken",
                "personalizationID",
                "userId"
              ],
              "description": "Information about a guest user identity.",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "The user unique identifier."
                },
                "WCToken": {
                  "type": "string",
                  "description": "The token used for authentication."
                },
                "WCTrustedToken": {
                  "type": "string",
                  "description": "The trusted token used for authentication. This token should only be used on encrypted channels."
                },
                "personalizationID": {
                  "type": "string",
                  "description": "The personalization identifier for the current session."
                },
                "privacyNoticeVersion": {
                  "type": "string",
                  "description": "The version of the privacy notice. For example '1.0'."
                },
                "marketingTrackingConsent": {
                  "type": "string",
                  "description": "The marketing tracking consent. 0 means opt-out, 1 means opt-in."
                }
              }
            },
            "description": "No response was specified.",
            "examples": {
              "application/json": {
                "WCTrustedToken": "-1000%2C9%2FR5rBj%2BoMsriTs8Ind%2BOzwwZko%3D",
                "WCToken": "-1000%2CuLnMtv8dikzM6ZKSzeudV2pidm1q9X72Zrn2HYYPsiY0q3iIaGV8hV9iMPUq%2FyJGzlFfXYFTgjxLAQlNprGT3DGAgYUG7NuKqtQeDAc2PqDs7ET5P9saWOhQzwkFarXreWM4iyoU22ePEuo98sO0N1%2FDdwHngNNdDzxPkcpNkgvMM1sGEzB%2BQDQTK2wNd%2BN%2FxEYOS%2Fv0e%2FnyJ4pZwlfZWA%3D%3D",
                "userId": "-1000",
                "personalizationID": "1414623829608-1",
                "privacyNoticeVersion": "1.0",
                "marketingTrackingConsent": "1"
              }
            }
          },
          "201": {
            "description": "The requested resource has been created."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "in": "body",
            "description": "Logon body.",
            "name": "body",
            "schema": {
              "required": [
                "logonId",
                "logonPassword"
              ],
              "description": "Information required to authenticate a user.",
              "properties": {
                "logonPassword": {
                  "type": "string",
                  "description": "The logon password."
                },
                "logonId": {
                  "type": "string",
                  "description": "The logon id."
                }
              },
              "example": {
                "application/json": {
                  "logonId": "wcsadmin",
                  "logonPassword": "wcsadmin"
                }
              }
            }
          }
        ],
        "tags": [
          "Login Identity"
        ],
        "description": "Logs in a registered user using their user name and password.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Log in user",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "operationId": "LoginIdentity-login"
      }
    },
    "/wcs/resources/store/{storeId}/previewToken": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "description": "Preview token.",
              "properties": {
                "previewToken": {
                  "type": "string",
                  "description": "The preview token."
                }
              }
            },
            "description": "No response was specified.",
            "examples": {
              "application/json": {
                "previewToken": "AEAA_QCbAOkADQAnEWiViA"
              }
            }
          },
          "201": {
            "description": "The requested resource has been created."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "in": "body",
            "description": "Request body.",
            "name": "body",
            "schema": {
              "description": "Preview parameters.",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The status. Set to either \"true\" or \"false\"."
                },
                "timeZoneId": {
                  "type": "string",
                  "description": "The time zone identifier for example,  \"America/New_York\""
                },
                "includedMemberGroupIds": {
                  "type": "string",
                  "description": "Comma separated list of member groups to simulate for example,  \"8000000000000000007,8000000000000000006\""
                },
                "start": {
                  "type": "string",
                  "description": "The start date and time for example, \"2013/09/11 13:00:00\""
                },
                "workspaceId": {
                  "type": "string",
                  "description": "The workspace identifier to use for example,  \"10001\""
                },
                "invstatus": {
                  "type": "string",
                  "description": "The inventory status number for example,  \"0\""
                },
                "password": {
                  "type": "string",
                  "description": "The password to access a generated preview URL."
                },
                "tokenLife": {
                  "type": "string",
                  "description": "Lifespan of the preview token in minutes for example,  \"60\"."
                },
                "prodInventoryRuleFilter": {
                  "type": "string",
                  "description": "The inventory visibility filter. Example : \"false\""
                }
              }
            }
          }
        ],
        "tags": [
          "Preview Token"
        ],
        "description": "Requests the preview token.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Requests the preview token.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "operationId": "generatePreviewToken"
      }
    },
    "/wcs/resources/store/{storeId}/usercontext/@self/contextdata": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "basicInfo",
                "catalog",
                "entitlement",
                "globalization",
                "isPartiallyAuthenticated"
              ],
              "description": "User context.",
              "properties": {
                "basicInfo": {
                  "required": [
                    "callerId",
                    "channelId",
                    "runAsId",
                    "storeId"
                  ],
                  "description": "User's basic information.",
                  "properties": {
                    "channelId": {
                      "type": "integer",
                      "description": "The user's channel identifier.",
                      "format": "int64"
                    },
                    "storeId": {
                      "type": "integer",
                      "description": "The user's store identifier.",
                      "format": "int64"
                    },
                    "callerId": {
                      "type": "integer",
                      "description": "The user's caller identifier.",
                      "format": "int64"
                    },
                    "runAsId": {
                      "type": "integer",
                      "description": "The user identifier this session is acting upon.",
                      "format": "int64"
                    }
                  }
                },
                "entitlement": {
                  "required": [
                    "activeOrganizationId"
                  ],
                  "description": "User's entitlement information.",
                  "properties": {
                    "currentTradingAgreementIds": {
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "type": "array",
                      "description": "The user's trading agreement identifiers."
                    },
                    "sessionTradingAgreementIds": {
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "type": "array",
                      "description": "The user's session trading agreement identifiers."
                    },
                    "activeOrganizationId": {
                      "type": "integer",
                      "description": "The user's active organization identifier.",
                      "format": "int64"
                    },
                    "hostingContractId": {
                      "type": "integer",
                      "description": "The user's hosting contract identifier.",
                      "format": "int64"
                    },
                    "eligibleTradingAgreementIds": {
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "type": "array",
                      "description": "The user's eligible trading agreement identifiers."
                    }
                  }
                },
                "isPartiallyAuthenticated": {
                  "type": "boolean",
                  "description": "Is the user partially authenticated."
                },
                "catalog": {
                  "required": [
                    "catalogId",
                    "masterCatalog"
                  ],
                  "description": "User's catalog.",
                  "properties": {
                    "masterCatalog": {
                      "type": "boolean",
                      "description": "The user preferred currency."
                    },
                    "catalogId": {
                      "type": "integer",
                      "description": "The user's catalog identifier.",
                      "format": "int64"
                    }
                  }
                },
                "globalization": {
                  "required": [
                    "currency",
                    "languageId",
                    "preferredCurrency",
                    "preferredLanguageId"
                  ],
                  "description": "User's globalization context.",
                  "properties": {
                    "preferredLanguageId": {
                      "type": "integer",
                      "description": "The user preferred language identifier.",
                      "format": "int64"
                    },
                    "currency": {
                      "type": "string",
                      "description": "The user currency."
                    },
                    "preferredCurrency": {
                      "type": "string",
                      "description": "The user preferred currency."
                    },
                    "languageId": {
                      "type": "integer",
                      "description": "The user language identifier.",
                      "format": "int64"
                    }
                  }
                },
                "workspace": {
                  "description": "User's workspace information.",
                  "properties": {
                    "task": {
                      "type": "string",
                      "description": "The user's active task name."
                    },
                    "taskGroup": {
                      "type": "string",
                      "description": "The user's active task group name."
                    },
                    "workspaceName": {
                      "type": "string",
                      "description": "The user's active workspace name."
                    }
                  }
                },
                "preview": {
                  "description": "User's preview information.",
                  "properties": {
                    "initialtimeDiff": {
                      "type": "integer",
                      "description": "The initial time difference when preview started.",
                      "format": "int64"
                    },
                    "previewProperties": {
                      "description": "User's preview properties information.",
                      "properties": {
                        "previewInventory": {
                          "type": "string",
                          "description": "The inventory preview mode."
                        },
                        "previewHost": {
                          "type": "string",
                          "description": "The preview host name and port."
                        },
                        "previewPath": {
                          "type": "string",
                          "description": "The store preview URI."
                        },
                        "previewRestURI": {
                          "type": "string",
                          "description": "The preview REST URI."
                        }
                      }
                    },
                    "static": {
                      "type": "boolean",
                      "description": "Is the preview session time static."
                    },
                    "timestamp": {
                      "type": "string",
                      "description": "The preview timestamp."
                    }
                  }
                }
              }
            },
            "description": "The requested completed successfully.",
            "examples": {
              "application/json": {
                "catalog": {
                  "masterCatalog": false,
                  "catalogId": 10052
                },
                "basicInfo": {
                  "channelId": -1,
                  "callerId": 2003,
                  "storeId": 10001,
                  "runAsId": 2003
                },
                "globalization": {
                  "currency": "USD",
                  "preferredCurrency": "USD",
                  "languageId": -1,
                  "preferredLanguageId": -1
                },
                "entitlement": {
                  "currentTradingAgreementIds": [
                    10001
                  ],
                  "sessionTradingAgreementIds": null,
                  "activeOrganizationId": -2000,
                  "hostingContractId": -1,
                  "eligibleTradingAgreementIds": [
                    10001
                  ]
                },
                "isPartiallyAuthenticated": false
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          }
        ],
        "tags": [
          "User Context"
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get context data from request",
        "operationId": "UserContext-getContextData",
        "description": "Gets the context data by the cookies and tokens sent with the request."
      }
    },
    "/wcs/resources/store/{storeId}/guestidentity": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "WCToken",
                "WCTrustedToken",
                "personalizationID",
                "userId"
              ],
              "description": "Information about a guest user identity.",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "The user unique identifier."
                },
                "WCToken": {
                  "type": "string",
                  "description": "The token used for authentication."
                },
                "WCTrustedToken": {
                  "type": "string",
                  "description": "The trusted token used for authentication. This token should only be used on encrypted channels."
                },
                "personalizationID": {
                  "type": "string",
                  "description": "The personalization identifier for the current session."
                }
              }
            },
            "description": "No response was specified.",
            "examples": {
              "application/json": {
                "WCTrustedToken": "12048%2C2h4%2FBl4sH%2BodrUr586mFxxhbMWM%3D",
                "WCToken": "12048%2CYDvAUQeRQWwodcMp2Hmqni%2FfGFasFkn3xxpLjiRRk8osjIKSuCIT3PkXttb02k78OTT1Rh8Z1u%2BLceI%2FmAalGEKO9WKucAEkAcleqB4BG%2BeXth%2Fk0dRU3Jj%2FEIRnOCrX2e31rVOS%2F5YbrAsyQQRkijvsBVY4LAwShshUqzeZgwgqtrhH9hfH%2F%2B254%2FV%2FGegQcGepnyZwsGkkb64F2Ed8cw%3D%3D",
                "userId": "12048",
                "personalizationID": "1416846174646-19"
              }
            }
          },
          "201": {
            "description": "The requested resource has been created."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "in": "body",
            "description": "Create guest identity body.",
            "name": "body",
            "schema": {
              "description": "Information needed to creating guest identity.",
              "properties": {
                "privacyNoticeVersion": {
                  "type": "string",
                  "description": "The version of the privacy notice. For example '1.0'."
                },
                "marketingTrackingConsent": {
                  "type": "string",
                  "description": "The marketing tracking consent. 0 means opt-out, 1 means opt-in."
                }
              },
              "example": {
                "application/json": {
                  "privacyNoticeVersion": "1.0",
                  "marketingTrackingConsent": "1"
                }
              }
            }
          }
        ],
        "tags": [
          "Guest Identity"
        ],
        "description": "Creates identity tokens for a guest user.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Create identity token",
        "operationId": "GuestIdentity-login"
      }
    },
    "/wcs/resources/store/{storeId}/guestidentity/@self": {
      "delete": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "description": "Empty model. Used as default value when no model is specified."
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          }
        ],
        "tags": [
          "Guest Identity"
        ],
        "description": "Logs out a guest user.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Log off guest user",
        "operationId": "GuestIdentity-logout"
      }
    },
    "/wcs/resources/store/{storeId}/loginidentity/@self": {
      "delete": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "description": "Empty model. Used as default value when no model is specified."
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          }
        ],
        "tags": [
          "Login Identity"
        ],
        "description": "Logs out the registered user.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Log out user",
        "operationId": "LoginIdentity-logout"
      }
    },
    "/wcs/resources/store/{storeId}/spot/{spotId}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "recordSetCount": {
                  "type": "integer",
                  "format": "int64"
                },
                "recordSetComplete": {
                  "type": "boolean"
                },
                "recordSetStartNumber": {
                  "type": "integer",
                  "format": "int64"
                },
                "MarketingSpot": {
                  "items": {
                    "properties": {
                      "spotName": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "spotId": {
                        "type": "string"
                      },
                      "userDataField": {
                        "items": {
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "value": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "type": {
                        "type": "string"
                      },
                      "uiDisplayable": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "type": "array"
                },
                "recordSetTotal": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "description": "The requested completed successfully.",
            "examples": {
              "application/json": {
                "recordSetStartNumber": 0,
                "recordSetComplete": true,
                "MarketingSpot": [
                  {
                    "spotName": "AboutDressDesignerPageMainAd",
                    "spotId": "10589",
                    "type": "MARKETING",
                    "description": "Display the main ad on About Dress Designer page",
                    "uiDisplayable": 1
                  }
                ],
                "recordSetCount": 1,
                "resourceId": "https://localhost:443/wcs/resources/store/10001/spot/10589",
                "resourceName": "spot",
                "recordSetTotal": 1
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "description": "E-Spot identifier.",
            "format": "int32",
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "spotId"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "description": "Page number. Valid values are positive integers starting at 1. Use pageNumber with pageSize.",
            "format": "int32",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "pageNumber"
          },
          {
            "description": "Page size. Used to limit the amount of data returned by a query. Valid values are integers starting with 1. Use pageSize with pageNumber.",
            "format": "int32",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "pageSize"
          }
        ],
        "tags": [
          "Spot"
        ],
        "description": "Gets an e-Marketing Spot in a store using its unique identifier.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get e-Marketing Spots by unique identifier",
        "operationId": "Spot-findSpotByID"
      }
    },
    "/wcs/resources/store/{storeId}/event/click_info": {
      "post": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {}
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "in": "body",
            "description": "Marketing evaluate trigger body.",
            "name": "body",
            "schema": {
              "required": [
                "activityId",
                "baseMarketingSpotActivityID",
                "baseMarketingSpotDataType",
                "eMarketingSpotId",
                "experimentResultId",
                "experimentResultTestElementId",
                "personalizationID"
              ],
              "description": "Marketing event trigger. Note : all parameters specified beyond the schema are sent to the marketing event.",
              "properties": {
                "eMarketingSpotId": {
                  "type": "string",
                  "description": "Marketing spot identifier."
                },
                "experimentResultTestElementId": {
                  "type": "string",
                  "description": "Experiment result test element identifier."
                },
                "baseMarketingSpotActivityID": {
                  "type": "string",
                  "description": "Base marketing spot activity identifier."
                },
                "baseMarketingSpotDataType": {
                  "type": "string",
                  "description": "Marketing spot data type. Example : \"MarketingContent\"."
                },
                "categoryId": {
                  "type": "string",
                  "description": "Category identifier."
                },
                "activityId": {
                  "type": "string",
                  "description": "Activity identifier."
                },
                "personalizationID": {
                  "type": "string",
                  "description": "Personalization identifier."
                },
                "experimentResultId": {
                  "type": "string",
                  "description": "Experiment result identifier."
                },
                "searchTerm": {
                  "type": "string",
                  "description": "Search term. Stored in a comma-separated list of search strings."
                },
                "DM_ReqCmd": {
                  "type": "string",
                  "description": "Requested command."
                },
                "productId": {
                  "type": "string",
                  "description": "Product identifier."
                }
              }
            }
          }
        ],
        "tags": [
          "Event"
        ],
        "description": "Handles click information.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Handle click information",
        "operationId": "Event-handleClickInfo"
      }
    },
    "/wcs/resources/store/{storeId}/event/update_marketing_tracking_consent": {
      "post": {
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "in": "body",
            "description": "Marketing evaluate trigger body.",
            "name": "body",
            "schema": {
              "required": [
                "marketingTrackingConsent"
              ],
              "description": "Marketing tracking consent parameters.",
              "properties": {
                "marketingTrackingConsent": {
                  "type": "integer",
                  "description": "Marketing tracking consent, value can be 0 or 1."
                }
              }
            }
          }
        ],
        "tags": [
          "Event"
        ],
        "description": "Update the marketing tracking consent for a user for the store.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Update the marketing tracking consent for a user for the store.",
        "operationId": "Event-updateMarketingTrackingConsent"
      }
    },
    "/wcs/resources/store/{storeId}/segment/{segmentId}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "recordSetCount": {
                  "type": "integer",
                  "format": "int64"
                },
                "recordSetComplete": {
                  "type": "boolean"
                },
                "recordSetStartNumber": {
                  "type": "integer",
                  "format": "int64"
                },
                "MemberGroup": {
                  "items": {
                    "properties": {
                      "usage": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "displayName": {
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string"
                          }
                        }
                      },
                      "description": {
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "type": "array"
                },
                "recordSetTotal": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "description": "The requested completed successfully.",
            "examples": {
              "application/json": {
                "recordSetStartNumber": 0,
                "recordSetComplete": true,
                "recordSetCount": 1,
                "resourceId": "https://localhost:443/wcs/resources/store/10001/segment/8000000000000000003",
                "MemberGroup": [
                  {
                    "usage": [
                      "GeneralPurpose"
                    ],
                    "displayName": {
                      "language": "-1",
                      "value": "Guest Shoppers"
                    },
                    "description": {
                      "language": "-1",
                      "value": "Shoppers who have not registered with the store"
                    },
                    "id": "8000000000000000003"
                  }
                ],
                "resourceName": "segment",
                "recordSetTotal": 1
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The segment identifier.",
            "in": "path",
            "name": "segmentId"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          }
        ],
        "tags": [
          "Segment"
        ],
        "description": "Gets customer segment by segmentId.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get segment by the segment ID",
        "operationId": "getCustomerSegmentById"
      }
    },
    "/wcs/resources/store/{storeId}/espot/{name}/type/{type}": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "MarketingSpotData": {
                  "items": {
                    "properties": {
                      "nextTimeLimit": {
                        "type": "string",
                        "format": "int64"
                      },
                      "marketingSpotIdentifier": {
                        "properties": {
                          "marketingSpotExternalIdentifier": {
                            "properties": {
                              "eSpotStoreId": {
                                "properties": {
                                  "uniqueID": {
                                    "type": "string"
                                  },
                                  "externalIdentifier": {
                                    "properties": {
                                      "ownerID": {
                                        "type": "string"
                                      },
                                      "nameIdentifier": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "eSpotName": {
                                "type": "string"
                              }
                            }
                          },
                          "marketingSpotIdentifier": {
                            "type": "string"
                          }
                        }
                      },
                      "baseMarketingSpotActivityData": {
                        "items": {
                          "required": [
                            "baseMarketingSpotActivityID",
                            "baseMarketingSpotActivityName",
                            "baseMarketingSpotDataType",
                            "catalogEntry",
                            "catalogGroup",
                            "marketingContent"
                          ],
                          "properties": {
                            "activityFormat": {
                              "type": "string"
                            },
                            "activityIdentifier": {
                              "properties": {
                                "activityExternalIdentifier": {
                                  "properties": {
                                    "activityIdentifierName": {
                                      "type": "string"
                                    },
                                    "activityIdentifierStoreId": {
                                      "properties": {
                                        "uniqueID": {
                                          "type": "string"
                                        },
                                        "externalIdentifier": {
                                          "properties": {
                                            "ownerID": {
                                              "type": "string"
                                            },
                                            "nameIdentifier": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "activityIdentifierID": {
                                  "type": "string"
                                }
                              }
                            },
                            "baseMarketingSpotActivityID": {
                              "type": "string"
                            },
                            "baseMarketingSpotDataType": {
                              "type": "string"
                            },
                            "experimentResult": {
                              "items": {
                                "properties": {
                                  "controlElement": {
                                    "type": "string"
                                  },
                                  "experiment": {
                                    "required": [
                                      "experimentResultId"
                                    ],
                                    "properties": {
                                      "experimentResultName": {
                                        "type": "string"
                                      },
                                      "experimentResultId": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "testElement": {
                                    "required": [
                                      "experimentResultTestElementId"
                                    ],
                                    "properties": {
                                      "experimentResultTestElementId": {
                                        "type": "string"
                                      },
                                      "experimentResultTestElementName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "type": "array"
                            },
                            "marketingContent": {
                              "properties": {
                                "contentUrl": {
                                  "type": "string"
                                },
                                "marketingContentIdentifier": {
                                  "properties": {
                                    "contentId": {
                                      "type": "string"
                                    },
                                    "marketingContentExternalIdentifier": {
                                      "properties": {
                                        "contentName": {
                                          "type": "string"
                                        },
                                        "contentStoreExternalId": {
                                          "properties": {
                                            "ownerID": {
                                              "type": "string"
                                            },
                                            "nameIdentifier": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "contentStoreId": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "contentFormatName": {
                                  "type": "string"
                                },
                                "marketingContentImageMap": {
                                  "items": {
                                    "properties": {
                                      "source": {
                                        "type": "string"
                                      },
                                      "userDataField": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "area": {
                                        "items": {
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "target": {
                                              "type": "string"
                                            },
                                            "title": {
                                              "type": "string"
                                            },
                                            "url": {
                                              "type": "string"
                                            },
                                            "displaySequence": {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            "coordinates": {
                                              "type": "string"
                                            },
                                            "shape": {
                                              "enum": [
                                                "rect",
                                                "circle",
                                                "poly"
                                              ],
                                              "type": "string"
                                            },
                                            "uniqueID": {
                                              "type": "string"
                                            },
                                            "alternateText": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "MarketingContentDescription": {
                                  "items": {
                                    "properties": {
                                      "userDataField": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "marketingContentDescription": {
                                  "items": {
                                    "properties": {
                                      "marketingText": {
                                        "type": "string"
                                      },
                                      "contentLocation": {
                                        "type": "string"
                                      },
                                      "language": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "contentInputOption": {
                                  "enum": [
                                    "Area",
                                    "Source"
                                  ],
                                  "type": "string"
                                },
                                "contentMimeType": {
                                  "type": "string"
                                },
                                "attachment": {
                                  "properties": {
                                    "attachmentReferenceId": {
                                      "type": "string"
                                    },
                                    "attachmentIdentifier": {
                                      "properties": {
                                        "attachementId": {
                                          "type": "string"
                                        },
                                        "attachmentExternalIdentifier": {
                                          "required": [
                                            "attachementExternalId"
                                          ],
                                          "properties": {
                                            "attachementOwnerId": {
                                              "type": "string"
                                            },
                                            "attachementStoreId": {
                                              "type": "string"
                                            },
                                            "attachementStoreExternalId": {
                                              "properties": {
                                                "ownerID": {
                                                  "type": "string"
                                                },
                                                "nameIdentifier": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "attachementExternalId": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "AttachmentDescription": {
                                      "items": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "attachmentReferenceDescription": {
                                      "items": {
                                        "properties": {
                                          "attachmentName": {
                                            "type": "string"
                                          },
                                          "attachmentLanguage": {
                                            "type": "string"
                                          },
                                          "attachmentLongDescription": {
                                            "type": "string"
                                          },
                                          "attachmentShortDescription": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "AttachmentReferenceDescription": {
                                      "items": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "attachmentAsset": {
                                      "items": {
                                        "required": [
                                          "attachmentAssetPath"
                                        ],
                                        "properties": {
                                          "attachmentAssetLanguage": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "attachmentLocalAsset": {
                                            "type": "string"
                                          },
                                          "attachmentAssetMimeType": {
                                            "type": "string"
                                          },
                                          "attachmentAssetRootDirectory": {
                                            "type": "string"
                                          },
                                          "attachmentAssetDirectoryPath": {
                                            "type": "string"
                                          },
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          },
                                          "attachmentAssetId": {
                                            "type": "string"
                                          },
                                          "attachmentAssetStoreExternalId": {
                                            "properties": {
                                              "ownerID": {
                                                "type": "string"
                                              },
                                              "nameIdentifier": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "attachmentAssetStoreId": {
                                            "type": "string"
                                          },
                                          "attachmentAssetPath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "attachmentDisplaySequence": {
                                      "type": "string"
                                    },
                                    "userDataField": {
                                      "items": {
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "attachmentDescription": {
                                      "items": {
                                        "properties": {
                                          "attachmentName": {
                                            "type": "string"
                                          },
                                          "attachmentLanguage": {
                                            "type": "string"
                                          },
                                          "attachmentLongDescription": {
                                            "type": "string"
                                          },
                                          "attachmentShortDescription": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "attachmentUsage": {
                                      "required": [
                                        "attachmentUsageName"
                                      ],
                                      "properties": {
                                        "attachmentDisplaySequence": {
                                          "type": "string"
                                        },
                                        "attachmentUsageName": {
                                          "type": "string"
                                        },
                                        "attachmentUsageDescription": {
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "shortDescription": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "type": "string"
                                            },
                                            "longDescription": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "attachmentImage": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "contentFormatId": {
                                  "type": "string"
                                },
                                "userDataField": {
                                  "items": {
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "string"
                                      },
                                      "key": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "contentClickAction": {
                                  "enum": [
                                    "None",
                                    "Single",
                                    "Multiple"
                                  ],
                                  "type": "string"
                                }
                              }
                            },
                            "activityPriority": {
                              "type": "string",
                              "format": "int64"
                            },
                            "userDataField": {
                              "items": {
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "string"
                                  },
                                  "key": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": "array"
                            },
                            "baseMarketingSpotActivityName": {
                              "type": "string"
                            },
                            "baseMarketingSpotCampaignName": {
                              "type": "string"
                            },
                            "properties": {
                              "items": {
                                "required": [
                                  "baseMarketingKey"
                                ],
                                "properties": {
                                  "baseMarketingKey": {
                                    "type": "string"
                                  },
                                  "baseMarketingValue": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": "array"
                            },
                            "catalogGroup": {
                              "properties": {
                                "catalogGroupIdentifier": {
                                  "properties": {
                                    "catalogGroupExternalIdentifier": {
                                      "required": [
                                        "categoryGroupId",
                                        "categoryIdentifier"
                                      ],
                                      "properties": {
                                        "ownerID": {
                                          "type": "string"
                                        },
                                        "categoryIdentifier": {
                                          "type": "string"
                                        },
                                        "categoryGroupId": {
                                          "type": "string"
                                        },
                                        "storeIdentifier": {
                                          "properties": {
                                            "uniqueID": {
                                              "type": "string"
                                            },
                                            "externalIdentifier": {
                                              "properties": {
                                                "ownerID": {
                                                  "type": "string"
                                                },
                                                "nameIdentifier": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "categoryId": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "taxonomyAttribute": {
                                  "properties": {
                                    "attribute": {
                                      "items": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          },
                                          "externalIdentifier": {
                                            "required": [
                                              "attributeDictionaryIdentifier",
                                              "identifier"
                                            ],
                                            "properties": {
                                              "attributeDictionaryIdentifier": {
                                                "properties": {
                                                  "uniqueID": {
                                                    "type": "string"
                                                  },
                                                  "externalIdentifier": {
                                                    "required": [
                                                      "identifier"
                                                    ],
                                                    "properties": {
                                                      "storeIdentifier": {
                                                        "properties": {
                                                          "uniqueID": {
                                                            "type": "string"
                                                          },
                                                          "externalIdentifier": {
                                                            "properties": {
                                                              "ownerID": {
                                                                "type": "string"
                                                              },
                                                              "nameIdentifier": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "identifier": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "storeIdentifier": {
                                                "properties": {
                                                  "uniqueID": {
                                                    "type": "string"
                                                  },
                                                  "externalIdentifier": {
                                                    "properties": {
                                                      "ownerID": {
                                                        "type": "string"
                                                      },
                                                      "nameIdentifier": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "identifier": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "type": "array"
                                    }
                                  }
                                },
                                "description": {
                                  "items": {
                                    "properties": {
                                      "categoryName": {
                                        "type": "string"
                                      },
                                      "language": {
                                        "type": "string"
                                      },
                                      "fullImage": {
                                        "type": "string"
                                      },
                                      "longDescription": {
                                        "type": "string"
                                      },
                                      "keyword": {
                                        "type": "string"
                                      },
                                      "attributes": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "shortDescription": {
                                        "type": "string"
                                      },
                                      "thumbnail": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "externalContentReference": {
                                  "items": {
                                    "required": [
                                      "externalContentIdentifier",
                                      "name"
                                    ],
                                    "properties": {
                                      "userData": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "externalContentDescription": {
                                        "type": "string"
                                      },
                                      "language": {
                                        "type": "string"
                                      },
                                      "lastUpdateTime": {
                                        "type": "string"
                                      },
                                      "externalContentAsset": {
                                        "items": {
                                          "required": [
                                            "assetPath",
                                            "externalContentIdentifier",
                                            "name"
                                          ],
                                          "properties": {
                                            "mimeType": {
                                              "type": "string"
                                            },
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "assetPath": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "assetFullPath": {
                                              "type": "string"
                                            },
                                            "externalContentIdentifier": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "uniqueID": {
                                        "type": "string"
                                      },
                                      "externalContentIdentifier": {
                                        "type": "string"
                                      },
                                      "externalContentType": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "owningStoreDirectory": {
                                  "type": "string"
                                },
                                "topCatalogGroup": {
                                  "type": "boolean"
                                },
                                "displaySequence": {
                                  "type": "number",
                                  "format": "double"
                                },
                                "parentCatalogGroupIdentifier": {
                                  "properties": {
                                    "uniqueID": {
                                      "type": "string"
                                    },
                                    "externalIdentifier": {
                                      "required": [
                                        "groupIdentifier"
                                      ],
                                      "properties": {
                                        "ownerID": {
                                          "type": "string"
                                        },
                                        "storeIdentifier": {
                                          "properties": {
                                            "uniqueID": {
                                              "type": "string"
                                            },
                                            "externalIdentifier": {
                                              "properties": {
                                                "ownerID": {
                                                  "type": "string"
                                                },
                                                "nameIdentifier": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "groupIdentifier": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "breadcrumbLocation": {
                                  "items": {
                                    "required": [
                                      "catalogGroupUniqueID"
                                    ],
                                    "properties": {
                                      "catalogGroupUniqueID": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "parentCatalogGroupId": {
                                  "type": "string"
                                },
                                "rule": {
                                  "properties": {
                                    "userData": {
                                      "items": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "nVP": {
                                      "items": {
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "uniqueID": {
                                      "type": "string"
                                    },
                                    "element": {
                                      "items": {
                                        "properties": {
                                          "userData": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "uniqueID": {
                                            "type": "string"
                                          },
                                          "nVP": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    }
                                  }
                                },
                                "facet": {
                                  "items": {
                                    "required": [
                                      "attribute",
                                      "facetIdentifier"
                                    ],
                                    "properties": {
                                      "attribute": {
                                        "required": [
                                          "attributeDescription"
                                        ],
                                        "properties": {
                                          "attributeDescription": {
                                            "items": {
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "userData": {
                                                  "properties": {
                                                    "userDataField": {
                                                      "items": {
                                                        "required": [
                                                          "key"
                                                        ],
                                                        "properties": {
                                                          "value": {
                                                            "type": "string"
                                                          },
                                                          "key": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "type": "array"
                                                    }
                                                  }
                                                },
                                                "description": {
                                                  "type": "string"
                                                },
                                                "language": {
                                                  "type": "string"
                                                },
                                                "extendedData": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "facetIdentifier": {
                                        "properties": {
                                          "identifier": {
                                            "type": "string"
                                          },
                                          "uniqueID": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "sEOProperties": {
                                  "items": {
                                    "properties": {
                                      "resolved": {
                                        "type": "boolean"
                                      },
                                      "userData": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "language": {
                                        "type": "string"
                                      },
                                      "metaKeyword": {
                                        "type": "string"
                                      },
                                      "fullImageAltDescription": {
                                        "type": "string"
                                      },
                                      "parentStoreIdentifier": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          },
                                          "externalIdentifier": {
                                            "properties": {
                                              "ownerID": {
                                                "type": "string"
                                              },
                                              "nameIdentifier": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "pageGroup": {
                                        "type": "string"
                                      },
                                      "objectIdentifier": {
                                        "type": "string"
                                      },
                                      "sEOPageDefID": {
                                        "type": "string"
                                      },
                                      "title": {
                                        "type": "string"
                                      },
                                      "metaDescription": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "attachmentReference": {
                                  "items": {
                                    "properties": {
                                      "userData": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "attachmentIdentifier": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          },
                                          "externalIdentifier": {
                                            "required": [
                                              "identifier"
                                            ],
                                            "properties": {
                                              "ownerID": {
                                                "type": "string"
                                              },
                                              "identifier": {
                                                "type": "string"
                                              },
                                              "storeIdentifier": {
                                                "properties": {
                                                  "uniqueID": {
                                                    "type": "string"
                                                  },
                                                  "externalIdentifier": {
                                                    "properties": {
                                                      "ownerID": {
                                                        "type": "string"
                                                      },
                                                      "nameIdentifier": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "attachmentReferenceIdentifier": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "displaySequence": {
                                        "type": "string"
                                      },
                                      "attachmentReferenceDescription": {
                                        "items": {
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "shortDescription": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "type": "string"
                                            },
                                            "longDescription": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "attachmentAsset": {
                                        "items": {
                                          "required": [
                                            "attachmentAssetPath"
                                          ],
                                          "properties": {
                                            "mimeType": {
                                              "type": "string"
                                            },
                                            "attachmentAssetIdentifier": {
                                              "properties": {
                                                "uniqueID": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "rootDirectory": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array"
                                            },
                                            "directoryPath": {
                                              "type": "string"
                                            },
                                            "storeIdentifier": {
                                              "properties": {
                                                "uniqueID": {
                                                  "type": "string"
                                                },
                                                "externalIdentifier": {
                                                  "properties": {
                                                    "ownerID": {
                                                      "type": "string"
                                                    },
                                                    "nameIdentifier": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "localAsset": {
                                              "type": "boolean"
                                            },
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "attachmentAssetPath": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "attachmentDescription": {
                                        "items": {
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "shortDescription": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "type": "string"
                                            },
                                            "longDescription": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "attachmentUsage": {
                                        "required": [
                                          "usageName"
                                        ],
                                        "properties": {
                                          "displaySequence": {
                                            "type": "string"
                                          },
                                          "attachmentUsageDescription": {
                                            "properties": {
                                              "userData": {
                                                "properties": {
                                                  "userDataField": {
                                                    "items": {
                                                      "required": [
                                                        "key"
                                                      ],
                                                      "properties": {
                                                        "value": {
                                                          "type": "string"
                                                        },
                                                        "key": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "type": "array"
                                                  }
                                                }
                                              },
                                              "shortDescription": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "language": {
                                                "type": "string"
                                              },
                                              "longDescription": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "image": {
                                            "type": "string"
                                          },
                                          "usageName": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "dynamicCatalogGroup": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "navigationRelationship": {
                                  "items": {
                                    "properties": {
                                      "attributes": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "displaySequence": {
                                        "type": "number",
                                        "format": "double"
                                      },
                                      "catalogGroupReference": {
                                        "required": [
                                          "displayName"
                                        ],
                                        "properties": {
                                          "catalogGroupIdentifier": {
                                            "properties": {
                                              "uniqueID": {
                                                "type": "string"
                                              },
                                              "externalIdentifier": {
                                                "required": [
                                                  "groupIdentifier"
                                                ],
                                                "properties": {
                                                  "ownerID": {
                                                    "type": "string"
                                                  },
                                                  "storeIdentifier": {
                                                    "properties": {
                                                      "uniqueID": {
                                                        "type": "string"
                                                      },
                                                      "externalIdentifier": {
                                                        "properties": {
                                                          "ownerID": {
                                                            "type": "string"
                                                          },
                                                          "nameIdentifier": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "groupIdentifier": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "displayName": {
                                            "type": "string"
                                          },
                                          "catalogIdentifier": {
                                            "properties": {
                                              "uniqueID": {
                                                "type": "string"
                                              },
                                              "externalIdentifier": {
                                                "required": [
                                                  "identifier"
                                                ],
                                                "properties": {
                                                  "ownerID": {
                                                    "type": "string"
                                                  },
                                                  "identifier": {
                                                    "type": "string"
                                                  },
                                                  "storeIdentifier": {
                                                    "properties": {
                                                      "uniqueID": {
                                                        "type": "string"
                                                      },
                                                      "externalIdentifier": {
                                                        "properties": {
                                                          "ownerID": {
                                                            "type": "string"
                                                          },
                                                          "nameIdentifier": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "navigationPath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "catalogEntryReference": {
                                        "properties": {
                                          "catalogEntryIdentifier": {
                                            "properties": {
                                              "uniqueID": {
                                                "type": "string"
                                              },
                                              "externalIdentifier": {
                                                "required": [
                                                  "partNumber"
                                                ],
                                                "properties": {
                                                  "ownerID": {
                                                    "type": "string"
                                                  },
                                                  "partNumber": {
                                                    "type": "string"
                                                  },
                                                  "storeIdentifier": {
                                                    "properties": {
                                                      "uniqueID": {
                                                        "type": "string"
                                                      },
                                                      "externalIdentifier": {
                                                        "properties": {
                                                          "ownerID": {
                                                            "type": "string"
                                                          },
                                                          "nameIdentifier": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "displayName": {
                                            "type": "string"
                                          },
                                          "catalogEntryTypeCode": {
                                            "type": "string"
                                          },
                                          "navigationPath": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "attributes": {
                                  "items": {
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "string"
                                      },
                                      "key": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "sEOURL": {
                                  "items": {
                                    "properties": {
                                      "userData": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "parentStoreIdentifier": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          },
                                          "externalIdentifier": {
                                            "properties": {
                                              "ownerID": {
                                                "type": "string"
                                              },
                                              "nameIdentifier": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "tokenValue": {
                                        "type": "string"
                                      },
                                      "uRLKeywordID": {
                                        "type": "string"
                                      },
                                      "uRLKeyword": {
                                        "items": {
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "keyword": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "type": "string"
                                            },
                                            "generatedMobileKeyword": {
                                              "type": "string"
                                            },
                                            "uRLPrefix": {
                                              "type": "string"
                                            },
                                            "mobileURLPrefix": {
                                              "type": "string"
                                            },
                                            "previewURL": {
                                              "type": "string"
                                            },
                                            "mobileKeyword": {
                                              "type": "string"
                                            },
                                            "generatedKeyword": {
                                              "type": "string"
                                            },
                                            "previewMobileURL": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "usage": {
                                        "type": "string"
                                      },
                                      "siteMapInfo": {
                                        "properties": {
                                          "priority": {
                                            "type": "number",
                                            "format": "double"
                                          },
                                          "userData": {
                                            "properties": {
                                              "userDataField": {
                                                "items": {
                                                  "required": [
                                                    "key"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "string"
                                                    },
                                                    "key": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "type": "array"
                                              }
                                            }
                                          },
                                          "mobilePriority": {
                                            "type": "number",
                                            "format": "double"
                                          },
                                          "changeFrequency": {
                                            "type": "string"
                                          },
                                          "mobileChangeFrequency": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "association": {
                                  "items": {
                                    "properties": {
                                      "catalogGroupReference": {
                                        "required": [
                                          "displayName"
                                        ],
                                        "properties": {
                                          "catalogGroupIdentifier": {
                                            "properties": {
                                              "uniqueID": {
                                                "type": "string"
                                              },
                                              "externalIdentifier": {
                                                "required": [
                                                  "groupIdentifier"
                                                ],
                                                "properties": {
                                                  "ownerID": {
                                                    "type": "string"
                                                  },
                                                  "storeIdentifier": {
                                                    "properties": {
                                                      "uniqueID": {
                                                        "type": "string"
                                                      },
                                                      "externalIdentifier": {
                                                        "properties": {
                                                          "ownerID": {
                                                            "type": "string"
                                                          },
                                                          "nameIdentifier": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "groupIdentifier": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "displayName": {
                                            "type": "string"
                                          },
                                          "catalogIdentifier": {
                                            "properties": {
                                              "uniqueID": {
                                                "type": "string"
                                              },
                                              "externalIdentifier": {
                                                "required": [
                                                  "identifier"
                                                ],
                                                "properties": {
                                                  "ownerID": {
                                                    "type": "string"
                                                  },
                                                  "identifier": {
                                                    "type": "string"
                                                  },
                                                  "storeIdentifier": {
                                                    "properties": {
                                                      "uniqueID": {
                                                        "type": "string"
                                                      },
                                                      "externalIdentifier": {
                                                        "properties": {
                                                          "ownerID": {
                                                            "type": "string"
                                                          },
                                                          "nameIdentifier": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "navigationPath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "catalogEntryReference": {
                                        "properties": {
                                          "catalogEntryIdentifier": {
                                            "properties": {
                                              "uniqueID": {
                                                "type": "string"
                                              },
                                              "externalIdentifier": {
                                                "required": [
                                                  "partNumber"
                                                ],
                                                "properties": {
                                                  "ownerID": {
                                                    "type": "string"
                                                  },
                                                  "partNumber": {
                                                    "type": "string"
                                                  },
                                                  "storeIdentifier": {
                                                    "properties": {
                                                      "uniqueID": {
                                                        "type": "string"
                                                      },
                                                      "externalIdentifier": {
                                                        "properties": {
                                                          "ownerID": {
                                                            "type": "string"
                                                          },
                                                          "nameIdentifier": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "displayName": {
                                            "type": "string"
                                          },
                                          "catalogEntryTypeCode": {
                                            "type": "string"
                                          },
                                          "navigationPath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "associationCodeType": {
                                        "type": "string"
                                      },
                                      "displaySequence": {
                                        "type": "number",
                                        "format": "double"
                                      },
                                      "associatedObject": {},
                                      "uniqueID": {
                                        "type": "string"
                                      },
                                      "externalSource": {
                                        "type": "boolean"
                                      },
                                      "attributes": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "semantic": {
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "type": "number",
                                        "format": "double"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "navigationPath": {
                                  "type": "string"
                                }
                              }
                            },
                            "catalogEntry": {
                              "properties": {
                                "catalogEntryIdentifier": {
                                  "properties": {
                                    "catalogEntryExternalIdentifier": {
                                      "required": [
                                        "productPartNumber"
                                      ],
                                      "properties": {
                                        "ownerID": {
                                          "type": "string"
                                        },
                                        "productPartNumber": {
                                          "type": "string"
                                        },
                                        "storeIdentifier": {
                                          "properties": {
                                            "uniqueID": {
                                              "type": "string"
                                            },
                                            "externalIdentifier": {
                                              "properties": {
                                                "ownerID": {
                                                  "type": "string"
                                                },
                                                "nameIdentifier": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "productId": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "standardPrice": {
                                  "properties": {
                                    "standardPriceContractID": {
                                      "properties": {
                                        "uniqueID": {
                                          "type": "string"
                                        },
                                        "externalIdentifier": {
                                          "required": [
                                            "name",
                                            "origin",
                                            "ownerID"
                                          ],
                                          "properties": {
                                            "majorVersionNumber": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "origin": {
                                              "type": "string"
                                            },
                                            "minorVersionNumber": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "ownerID": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "standardPriceStartDate": {
                                      "type": "string"
                                    },
                                    "standardPricePrecedence": {
                                      "type": "string",
                                      "format": "double"
                                    },
                                    "standardPriceQualifier": {
                                      "type": "string"
                                    },
                                    "standardUnitPrice": {
                                      "properties": {
                                        "standardPriceQuantity": {
                                          "properties": {
                                            "value": {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            "uom": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "standardPrice": {
                                          "type": "string",
                                          "format": "double"
                                        },
                                        "standardPriceAltCurrencyPrice": {
                                          "items": {
                                            "properties": {
                                              "currency": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "number",
                                                "format": "double"
                                              }
                                            }
                                          },
                                          "type": "array"
                                        },
                                        "standardPriceCurrency": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "standardPriceMaxQuantity": {
                                      "type": "string",
                                      "format": "double"
                                    },
                                    "standardPriceEndDate": {
                                      "type": "string"
                                    },
                                    "userDataField": {
                                      "items": {
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "standardPriceLastUpdate": {
                                      "type": "string"
                                    },
                                    "standardPriceDescription": {
                                      "properties": {
                                        "value": {
                                          "type": "string"
                                        },
                                        "language": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "standardPriceQuantityUnit": {
                                      "type": "string"
                                    },
                                    "standardPriceMinQuantity": {
                                      "type": "string",
                                      "format": "double"
                                    }
                                  }
                                },
                                "description": {
                                  "items": {
                                    "properties": {
                                      "keyword": {
                                        "type": "string"
                                      },
                                      "language": {
                                        "type": "string"
                                      },
                                      "fullImage": {
                                        "type": "string"
                                      },
                                      "longDescription": {
                                        "type": "string"
                                      },
                                      "attributes": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "productName": {
                                        "type": "string"
                                      },
                                      "shortDescription": {
                                        "type": "string"
                                      },
                                      "thumbnail": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "navigationRelationship": {
                                  "items": {},
                                  "type": "array"
                                },
                                "contractPrice": {
                                  "items": {
                                    "properties": {
                                      "lastUpdate": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "properties": {
                                          "value": {
                                            "type": "string"
                                          },
                                          "language": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "precedence": {
                                        "type": "string",
                                        "format": "double"
                                      },
                                      "quantityUnit": {
                                        "type": "string"
                                      },
                                      "contractIdentifier": {
                                        "properties": {
                                          "contractExternalIdentifier": {
                                            "required": [
                                              "name",
                                              "origin",
                                              "ownerID"
                                            ],
                                            "properties": {
                                              "majorVersionNumber": {
                                                "type": "string",
                                                "format": "int32"
                                              },
                                              "origin": {
                                                "type": "string"
                                              },
                                              "minorVersionNumber": {
                                                "type": "string",
                                                "format": "int32"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "ownerID": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "contractID": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "maximumQuantity": {
                                        "type": "string",
                                        "format": "double"
                                      },
                                      "minimumQuantity": {
                                        "type": "string",
                                        "format": "double"
                                      },
                                      "contractUnitPrice": {
                                        "properties": {
                                          "currency": {
                                            "type": "string"
                                          },
                                          "quantity": {
                                            "properties": {
                                              "value": {
                                                "type": "number",
                                                "format": "double"
                                              },
                                              "uom": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "contractPrice": {
                                            "type": "string",
                                            "format": "double"
                                          },
                                          "alternativeCurrencyPrice": {
                                            "items": {
                                              "properties": {
                                                "currency": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "startDate": {
                                        "type": "string"
                                      },
                                      "userDataField": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "qualifier": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "displaySequence": {
                                  "type": "string",
                                  "format": "double"
                                },
                                "parentCatalogGroupIdentifier": {
                                  "properties": {
                                    "uniqueID": {
                                      "type": "string"
                                    },
                                    "externalIdentifier": {
                                      "required": [
                                        "groupIdentifier"
                                      ],
                                      "properties": {
                                        "ownerID": {
                                          "type": "string"
                                        },
                                        "storeIdentifier": {
                                          "properties": {
                                            "uniqueID": {
                                              "type": "string"
                                            },
                                            "externalIdentifier": {
                                              "properties": {
                                                "ownerID": {
                                                  "type": "string"
                                                },
                                                "nameIdentifier": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "groupIdentifier": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "kitComponent": {
                                  "items": {
                                    "required": [
                                      "catalogEntryReference"
                                    ],
                                    "properties": {
                                      "attributes": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "displaySequence": {
                                        "type": "number",
                                        "format": "double"
                                      },
                                      "quantity": {
                                        "type": "number",
                                        "format": "double"
                                      },
                                      "kitComponentCodeType": {
                                        "type": "string"
                                      },
                                      "catalogEntryReference": {
                                        "properties": {
                                          "catalogEntryIdentifier": {
                                            "properties": {
                                              "uniqueID": {
                                                "type": "string"
                                              },
                                              "externalIdentifier": {
                                                "required": [
                                                  "partNumber"
                                                ],
                                                "properties": {
                                                  "ownerID": {
                                                    "type": "string"
                                                  },
                                                  "partNumber": {
                                                    "type": "string"
                                                  },
                                                  "storeIdentifier": {
                                                    "properties": {
                                                      "uniqueID": {
                                                        "type": "string"
                                                      },
                                                      "externalIdentifier": {
                                                        "properties": {
                                                          "ownerID": {
                                                            "type": "string"
                                                          },
                                                          "nameIdentifier": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "displayName": {
                                            "type": "string"
                                          },
                                          "catalogEntryTypeCode": {
                                            "type": "string"
                                          },
                                          "navigationPath": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "sEOURL": {
                                  "items": {
                                    "properties": {
                                      "userData": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "parentStoreIdentifier": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          },
                                          "externalIdentifier": {
                                            "properties": {
                                              "ownerID": {
                                                "type": "string"
                                              },
                                              "nameIdentifier": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "tokenValue": {
                                        "type": "string"
                                      },
                                      "uRLKeywordID": {
                                        "type": "string"
                                      },
                                      "uRLKeyword": {
                                        "items": {
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "keyword": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "type": "string"
                                            },
                                            "generatedMobileKeyword": {
                                              "type": "string"
                                            },
                                            "uRLPrefix": {
                                              "type": "string"
                                            },
                                            "mobileURLPrefix": {
                                              "type": "string"
                                            },
                                            "previewURL": {
                                              "type": "string"
                                            },
                                            "mobileKeyword": {
                                              "type": "string"
                                            },
                                            "generatedKeyword": {
                                              "type": "string"
                                            },
                                            "previewMobileURL": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "usage": {
                                        "type": "string"
                                      },
                                      "siteMapInfo": {
                                        "properties": {
                                          "priority": {
                                            "type": "number",
                                            "format": "double"
                                          },
                                          "userData": {
                                            "properties": {
                                              "userDataField": {
                                                "items": {
                                                  "required": [
                                                    "key"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "string"
                                                    },
                                                    "key": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "type": "array"
                                              }
                                            }
                                          },
                                          "mobilePriority": {
                                            "type": "number",
                                            "format": "double"
                                          },
                                          "changeFrequency": {
                                            "type": "string"
                                          },
                                          "mobileChangeFrequency": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "listPrice": {
                                  "properties": {
                                    "listPriceAltCurrencyPrice": {
                                      "items": {
                                        "properties": {
                                          "currency": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "number",
                                            "format": "double"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "listPriceCurrency": {
                                      "type": "string"
                                    },
                                    "listPrice": {
                                      "type": "string",
                                      "format": "double"
                                    },
                                    "listPriceQuantity": {
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "format": "double"
                                        },
                                        "uom": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "sEOProperties": {
                                  "items": {
                                    "properties": {
                                      "resolved": {
                                        "type": "boolean"
                                      },
                                      "userData": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "language": {
                                        "type": "string"
                                      },
                                      "metaKeyword": {
                                        "type": "string"
                                      },
                                      "fullImageAltDescription": {
                                        "type": "string"
                                      },
                                      "parentStoreIdentifier": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          },
                                          "externalIdentifier": {
                                            "properties": {
                                              "ownerID": {
                                                "type": "string"
                                              },
                                              "nameIdentifier": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "pageGroup": {
                                        "type": "string"
                                      },
                                      "objectIdentifier": {
                                        "type": "string"
                                      },
                                      "sEOPageDefID": {
                                        "type": "string"
                                      },
                                      "title": {
                                        "type": "string"
                                      },
                                      "metaDescription": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "attachmentReference": {
                                  "items": {
                                    "properties": {
                                      "userData": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "attachmentIdentifier": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          },
                                          "externalIdentifier": {
                                            "required": [
                                              "identifier"
                                            ],
                                            "properties": {
                                              "ownerID": {
                                                "type": "string"
                                              },
                                              "identifier": {
                                                "type": "string"
                                              },
                                              "storeIdentifier": {
                                                "properties": {
                                                  "uniqueID": {
                                                    "type": "string"
                                                  },
                                                  "externalIdentifier": {
                                                    "properties": {
                                                      "ownerID": {
                                                        "type": "string"
                                                      },
                                                      "nameIdentifier": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "attachmentReferenceIdentifier": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "displaySequence": {
                                        "type": "string"
                                      },
                                      "attachmentReferenceDescription": {
                                        "items": {
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "shortDescription": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "type": "string"
                                            },
                                            "longDescription": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "attachmentAsset": {
                                        "items": {
                                          "required": [
                                            "attachmentAssetPath"
                                          ],
                                          "properties": {
                                            "mimeType": {
                                              "type": "string"
                                            },
                                            "attachmentAssetIdentifier": {
                                              "properties": {
                                                "uniqueID": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "rootDirectory": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array"
                                            },
                                            "directoryPath": {
                                              "type": "string"
                                            },
                                            "storeIdentifier": {
                                              "properties": {
                                                "uniqueID": {
                                                  "type": "string"
                                                },
                                                "externalIdentifier": {
                                                  "properties": {
                                                    "ownerID": {
                                                      "type": "string"
                                                    },
                                                    "nameIdentifier": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "localAsset": {
                                              "type": "boolean"
                                            },
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "attachmentAssetPath": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "attachmentDescription": {
                                        "items": {
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "shortDescription": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "type": "string"
                                            },
                                            "longDescription": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "attachmentUsage": {
                                        "required": [
                                          "usageName"
                                        ],
                                        "properties": {
                                          "displaySequence": {
                                            "type": "string"
                                          },
                                          "attachmentUsageDescription": {
                                            "properties": {
                                              "userData": {
                                                "properties": {
                                                  "userDataField": {
                                                    "items": {
                                                      "required": [
                                                        "key"
                                                      ],
                                                      "properties": {
                                                        "value": {
                                                          "type": "string"
                                                        },
                                                        "key": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "type": "array"
                                                  }
                                                }
                                              },
                                              "shortDescription": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "language": {
                                                "type": "string"
                                              },
                                              "longDescription": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "image": {
                                            "type": "string"
                                          },
                                          "usageName": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "floorPrice": {
                                  "properties": {
                                    "lastUpdate": {
                                      "type": "string"
                                    },
                                    "endDate": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "properties": {
                                        "value": {
                                          "type": "string"
                                        },
                                        "language": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "precedence": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "quantityUnit": {
                                      "type": "string"
                                    },
                                    "contractIdentifier": {
                                      "properties": {
                                        "uniqueID": {
                                          "type": "string"
                                        },
                                        "externalIdentifier": {
                                          "required": [
                                            "name",
                                            "origin",
                                            "ownerID"
                                          ],
                                          "properties": {
                                            "majorVersionNumber": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "origin": {
                                              "type": "string"
                                            },
                                            "minorVersionNumber": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "ownerID": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "price": {
                                      "properties": {
                                        "price": {
                                          "properties": {
                                            "currency": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          }
                                        },
                                        "quantity": {
                                          "properties": {
                                            "value": {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            "uom": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "alternativeCurrencyPrice": {
                                          "items": {
                                            "properties": {
                                              "currency": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "number",
                                                "format": "double"
                                              }
                                            }
                                          },
                                          "type": "array"
                                        }
                                      }
                                    },
                                    "maximumQuantity": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "minimumQuantity": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "userData": {
                                      "properties": {
                                        "userDataField": {
                                          "items": {
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "value": {
                                                "type": "string"
                                              },
                                              "key": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "type": "array"
                                        }
                                      }
                                    },
                                    "startDate": {
                                      "type": "string"
                                    },
                                    "qualifier": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "fulfillmentProperties": {
                                  "properties": {
                                    "userData": {
                                      "properties": {
                                        "userDataField": {
                                          "items": {
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "value": {
                                                "type": "string"
                                              },
                                              "key": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "type": "array"
                                        }
                                      }
                                    }
                                  }
                                },
                                "attributes": {
                                  "items": {
                                    "required": [
                                      "stringValue"
                                    ],
                                    "properties": {
                                      "searchable": {
                                        "type": "string"
                                      },
                                      "attributeIdentifier": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          },
                                          "externalIdentifier": {
                                            "required": [
                                              "attributeDictionaryIdentifier",
                                              "identifier"
                                            ],
                                            "properties": {
                                              "attributeDictionaryIdentifier": {
                                                "properties": {
                                                  "uniqueID": {
                                                    "type": "string"
                                                  },
                                                  "externalIdentifier": {
                                                    "required": [
                                                      "identifier"
                                                    ],
                                                    "properties": {
                                                      "storeIdentifier": {
                                                        "properties": {
                                                          "uniqueID": {
                                                            "type": "string"
                                                          },
                                                          "externalIdentifier": {
                                                            "properties": {
                                                              "ownerID": {
                                                                "type": "string"
                                                              },
                                                              "nameIdentifier": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "identifier": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "storeIdentifier": {
                                                "properties": {
                                                  "uniqueID": {
                                                    "type": "string"
                                                  },
                                                  "externalIdentifier": {
                                                    "properties": {
                                                      "ownerID": {
                                                        "type": "string"
                                                      },
                                                      "nameIdentifier": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "identifier": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "attributeType": {
                                        "type": "string"
                                      },
                                      "extendedValue": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "displayable": {
                                        "type": "string"
                                      },
                                      "groupPath": {
                                        "type": "string"
                                      },
                                      "allowedValue": {
                                        "items": {
                                          "required": [
                                            "value"
                                          ],
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "storeID": {
                                              "type": "string"
                                            },
                                            "attributeValue": {},
                                            "language": {
                                              "type": "string"
                                            },
                                            "default": {
                                              "type": "boolean"
                                            },
                                            "displaySequence": {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            "floatValue": {
                                              "required": [
                                                "value"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number",
                                                  "format": "float"
                                                }
                                              }
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "extendedValue": {
                                              "items": {
                                                "required": [
                                                  "key"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "string"
                                                  },
                                                  "key": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "type": "array"
                                            },
                                            "stringValue": {
                                              "required": [
                                                "value"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "identifier": {
                                              "type": "string"
                                            },
                                            "integerValue": {
                                              "required": [
                                                "value"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "usage": {
                                        "type": "string"
                                      },
                                      "userDataField": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "comparable": {
                                        "type": "string"
                                      },
                                      "attributeValue": {},
                                      "floatValue": {
                                        "required": [
                                          "value"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "number",
                                            "format": "float"
                                          }
                                        }
                                      },
                                      "stringValue": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "language": {
                                        "type": "string"
                                      },
                                      "displaySequence": {
                                        "type": "string",
                                        "format": "double"
                                      },
                                      "value": {
                                        "properties": {
                                          "identifier": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          },
                                          "storeID": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "attributeDataType": {
                                        "type": "string"
                                      },
                                      "values": {
                                        "items": {
                                          "required": [
                                            "value"
                                          ],
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "storeID": {
                                              "type": "string"
                                            },
                                            "attributeValue": {},
                                            "language": {
                                              "type": "string"
                                            },
                                            "default": {
                                              "type": "boolean"
                                            },
                                            "displaySequence": {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            "floatValue": {
                                              "required": [
                                                "value"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "number",
                                                  "format": "float"
                                                }
                                              }
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "extendedValue": {
                                              "items": {
                                                "required": [
                                                  "key"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "string"
                                                  },
                                                  "key": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "type": "array"
                                            },
                                            "stringValue": {
                                              "required": [
                                                "value"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "identifier": {
                                              "type": "string"
                                            },
                                            "integerValue": {
                                              "required": [
                                                "value"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "parentAttributeGroup": {
                                        "properties": {
                                          "uniqueID": {
                                            "type": "string"
                                          },
                                          "externalIdentifier": {
                                            "required": [
                                              "identifier"
                                            ],
                                            "properties": {
                                              "attributeDictionaryIdentifier": {
                                                "properties": {
                                                  "uniqueID": {
                                                    "type": "string"
                                                  },
                                                  "externalIdentifier": {
                                                    "required": [
                                                      "identifier"
                                                    ],
                                                    "properties": {
                                                      "storeIdentifier": {
                                                        "properties": {
                                                          "uniqueID": {
                                                            "type": "string"
                                                          },
                                                          "externalIdentifier": {
                                                            "properties": {
                                                              "ownerID": {
                                                                "type": "string"
                                                              },
                                                              "nameIdentifier": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "identifier": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "storeIdentifier": {
                                                "properties": {
                                                  "uniqueID": {
                                                    "type": "string"
                                                  },
                                                  "externalIdentifier": {
                                                    "properties": {
                                                      "ownerID": {
                                                        "type": "string"
                                                      },
                                                      "nameIdentifier": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "identifier": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "extendedData": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "integerValue": {
                                        "required": [
                                          "value"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "format": "int32"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "userDataField": {
                                  "items": {
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "string"
                                      },
                                      "key": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "catalogEntryTypeCode": {
                                  "type": "string"
                                },
                                "association": {
                                  "items": {
                                    "properties": {
                                      "catalogGroupReference": {
                                        "required": [
                                          "displayName"
                                        ],
                                        "properties": {
                                          "catalogGroupIdentifier": {
                                            "properties": {
                                              "uniqueID": {
                                                "type": "string"
                                              },
                                              "externalIdentifier": {
                                                "required": [
                                                  "groupIdentifier"
                                                ],
                                                "properties": {
                                                  "ownerID": {
                                                    "type": "string"
                                                  },
                                                  "storeIdentifier": {
                                                    "properties": {
                                                      "uniqueID": {
                                                        "type": "string"
                                                      },
                                                      "externalIdentifier": {
                                                        "properties": {
                                                          "ownerID": {
                                                            "type": "string"
                                                          },
                                                          "nameIdentifier": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "groupIdentifier": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "displayName": {
                                            "type": "string"
                                          },
                                          "catalogIdentifier": {
                                            "properties": {
                                              "uniqueID": {
                                                "type": "string"
                                              },
                                              "externalIdentifier": {
                                                "required": [
                                                  "identifier"
                                                ],
                                                "properties": {
                                                  "ownerID": {
                                                    "type": "string"
                                                  },
                                                  "identifier": {
                                                    "type": "string"
                                                  },
                                                  "storeIdentifier": {
                                                    "properties": {
                                                      "uniqueID": {
                                                        "type": "string"
                                                      },
                                                      "externalIdentifier": {
                                                        "properties": {
                                                          "ownerID": {
                                                            "type": "string"
                                                          },
                                                          "nameIdentifier": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "navigationPath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "catalogEntryReference": {
                                        "properties": {
                                          "catalogEntryIdentifier": {
                                            "properties": {
                                              "uniqueID": {
                                                "type": "string"
                                              },
                                              "externalIdentifier": {
                                                "required": [
                                                  "partNumber"
                                                ],
                                                "properties": {
                                                  "ownerID": {
                                                    "type": "string"
                                                  },
                                                  "partNumber": {
                                                    "type": "string"
                                                  },
                                                  "storeIdentifier": {
                                                    "properties": {
                                                      "uniqueID": {
                                                        "type": "string"
                                                      },
                                                      "externalIdentifier": {
                                                        "properties": {
                                                          "ownerID": {
                                                            "type": "string"
                                                          },
                                                          "nameIdentifier": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "displayName": {
                                            "type": "string"
                                          },
                                          "catalogEntryTypeCode": {
                                            "type": "string"
                                          },
                                          "navigationPath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "associationCodeType": {
                                        "type": "string"
                                      },
                                      "displaySequence": {
                                        "type": "number",
                                        "format": "double"
                                      },
                                      "associatedObject": {},
                                      "uniqueID": {
                                        "type": "string"
                                      },
                                      "externalSource": {
                                        "type": "boolean"
                                      },
                                      "attributes": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "semantic": {
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "type": "number",
                                        "format": "double"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "navigationPath": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "type": "array"
                      },
                      "filteredResult": {
                        "items": {
                          "properties": {
                            "filteredResultId": {
                              "type": "string"
                            },
                            "filteredResultFormat": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "defaultContentDisplaySequence": {
                        "items": {
                          "properties": {
                            "displaySequence": {
                              "type": "string"
                            },
                            "resultId": {
                              "type": "string"
                            },
                            "resultFormat": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "marketingSpotDataTitle": {
                        "items": {
                          "required": [
                            "marketingContent",
                            "marketingSpotDataTitleDataType",
                            "marketingSpotDataTitleId",
                            "marketingSpotDataTitleName"
                          ],
                          "properties": {
                            "experimentResult": {
                              "items": {
                                "properties": {
                                  "controlElement": {
                                    "type": "string"
                                  },
                                  "experiment": {
                                    "required": [
                                      "experimentResultId"
                                    ],
                                    "properties": {
                                      "experimentResultName": {
                                        "type": "string"
                                      },
                                      "experimentResultId": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "testElement": {
                                    "required": [
                                      "experimentResultTestElementId"
                                    ],
                                    "properties": {
                                      "experimentResultTestElementId": {
                                        "type": "string"
                                      },
                                      "experimentResultTestElementName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "type": "array"
                            },
                            "marketingContent": {
                              "properties": {
                                "contentUrl": {
                                  "type": "string"
                                },
                                "marketingContentIdentifier": {
                                  "properties": {
                                    "contentId": {
                                      "type": "string"
                                    },
                                    "marketingContentExternalIdentifier": {
                                      "properties": {
                                        "contentName": {
                                          "type": "string"
                                        },
                                        "contentStoreExternalId": {
                                          "properties": {
                                            "ownerID": {
                                              "type": "string"
                                            },
                                            "nameIdentifier": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "contentStoreId": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "contentFormatName": {
                                  "type": "string"
                                },
                                "marketingContentImageMap": {
                                  "items": {
                                    "properties": {
                                      "source": {
                                        "type": "string"
                                      },
                                      "userDataField": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "area": {
                                        "items": {
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "target": {
                                              "type": "string"
                                            },
                                            "title": {
                                              "type": "string"
                                            },
                                            "url": {
                                              "type": "string"
                                            },
                                            "displaySequence": {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            "coordinates": {
                                              "type": "string"
                                            },
                                            "shape": {
                                              "enum": [
                                                "rect",
                                                "circle",
                                                "poly"
                                              ],
                                              "type": "string"
                                            },
                                            "uniqueID": {
                                              "type": "string"
                                            },
                                            "alternateText": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "MarketingContentDescription": {
                                  "items": {
                                    "properties": {
                                      "userDataField": {
                                        "items": {
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "key": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "marketingContentDescription": {
                                  "items": {
                                    "properties": {
                                      "marketingText": {
                                        "type": "string"
                                      },
                                      "contentLocation": {
                                        "type": "string"
                                      },
                                      "language": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "contentInputOption": {
                                  "enum": [
                                    "Area",
                                    "Source"
                                  ],
                                  "type": "string"
                                },
                                "contentMimeType": {
                                  "type": "string"
                                },
                                "attachment": {
                                  "properties": {
                                    "attachmentReferenceId": {
                                      "type": "string"
                                    },
                                    "attachmentIdentifier": {
                                      "properties": {
                                        "attachementId": {
                                          "type": "string"
                                        },
                                        "attachmentExternalIdentifier": {
                                          "required": [
                                            "attachementExternalId"
                                          ],
                                          "properties": {
                                            "attachementOwnerId": {
                                              "type": "string"
                                            },
                                            "attachementStoreId": {
                                              "type": "string"
                                            },
                                            "attachementStoreExternalId": {
                                              "properties": {
                                                "ownerID": {
                                                  "type": "string"
                                                },
                                                "nameIdentifier": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "attachementExternalId": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "AttachmentDescription": {
                                      "items": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "attachmentReferenceDescription": {
                                      "items": {
                                        "properties": {
                                          "attachmentName": {
                                            "type": "string"
                                          },
                                          "attachmentLanguage": {
                                            "type": "string"
                                          },
                                          "attachmentLongDescription": {
                                            "type": "string"
                                          },
                                          "attachmentShortDescription": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "AttachmentReferenceDescription": {
                                      "items": {
                                        "properties": {
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "attachmentAsset": {
                                      "items": {
                                        "required": [
                                          "attachmentAssetPath"
                                        ],
                                        "properties": {
                                          "attachmentAssetLanguage": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "attachmentLocalAsset": {
                                            "type": "string"
                                          },
                                          "attachmentAssetMimeType": {
                                            "type": "string"
                                          },
                                          "attachmentAssetRootDirectory": {
                                            "type": "string"
                                          },
                                          "attachmentAssetDirectoryPath": {
                                            "type": "string"
                                          },
                                          "userDataField": {
                                            "items": {
                                              "required": [
                                                "key"
                                              ],
                                              "properties": {
                                                "value": {
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": "array"
                                          },
                                          "attachmentAssetId": {
                                            "type": "string"
                                          },
                                          "attachmentAssetStoreExternalId": {
                                            "properties": {
                                              "ownerID": {
                                                "type": "string"
                                              },
                                              "nameIdentifier": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "attachmentAssetStoreId": {
                                            "type": "string"
                                          },
                                          "attachmentAssetPath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "attachmentDisplaySequence": {
                                      "type": "string"
                                    },
                                    "userDataField": {
                                      "items": {
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "attachmentDescription": {
                                      "items": {
                                        "properties": {
                                          "attachmentName": {
                                            "type": "string"
                                          },
                                          "attachmentLanguage": {
                                            "type": "string"
                                          },
                                          "attachmentLongDescription": {
                                            "type": "string"
                                          },
                                          "attachmentShortDescription": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "attachmentUsage": {
                                      "required": [
                                        "attachmentUsageName"
                                      ],
                                      "properties": {
                                        "attachmentDisplaySequence": {
                                          "type": "string"
                                        },
                                        "attachmentUsageName": {
                                          "type": "string"
                                        },
                                        "attachmentUsageDescription": {
                                          "properties": {
                                            "userData": {
                                              "properties": {
                                                "userDataField": {
                                                  "items": {
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string"
                                                      },
                                                      "key": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "type": "array"
                                                }
                                              }
                                            },
                                            "shortDescription": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "type": "string"
                                            },
                                            "longDescription": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "attachmentImage": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "contentFormatId": {
                                  "type": "string"
                                },
                                "userDataField": {
                                  "items": {
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "string"
                                      },
                                      "key": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "contentClickAction": {
                                  "enum": [
                                    "None",
                                    "Single",
                                    "Multiple"
                                  ],
                                  "type": "string"
                                }
                              }
                            },
                            "marketingSpotDataTitleDataType": {
                              "type": "string"
                            },
                            "marketingSpotDataTitleName": {
                              "type": "string"
                            },
                            "marketingSpotDataTitleId": {
                              "type": "string"
                            },
                            "marketingSpotDataTitleActivityID": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "behavior": {
                        "type": "string"
                      },
                      "previewReport": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "E-Spot name.",
            "in": "path",
            "name": "name"
          },
          {
            "required": true,
            "type": "string",
            "description": "E-Marketing Spot type for example, SEARCH.",
            "in": "path",
            "name": "type"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "type": "string",
            "description": "The catalog identifier. If none is specified, the store default catalog is used.",
            "in": "query",
            "name": "catalogId"
          },
          {
            "enum": [
              "JPY",
              "CNY",
              "BRL",
              "EUR",
              "RON",
              "RUB",
              "PLN",
              "USD",
              "KRW",
              "TWD",
              "CAD",
              "GBP"
            ],
            "name": "currency",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The currency code to use for example, currency=USD. If no currency code is specified, the store default currency is used."
          },
          {
            "required": false,
            "type": "string",
            "description": "E-Spot name.",
            "in": "query",
            "name": "name"
          }
        ],
        "tags": [
          "Spot"
        ],
        "description": "Gets e-Marketing Spot data.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get e-Marketing Sport data",
        "operationId": "E-spot-findESpotData"
      }
    },
    "/wcs/resources/store/{storeId}/spot": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "recordSetCount": {
                  "type": "integer",
                  "format": "int64"
                },
                "recordSetComplete": {
                  "type": "boolean"
                },
                "recordSetStartNumber": {
                  "type": "integer",
                  "format": "int64"
                },
                "MarketingSpot": {
                  "items": {
                    "properties": {
                      "spotName": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "spotId": {
                        "type": "string"
                      },
                      "userDataField": {
                        "items": {
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "value": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "type": {
                        "type": "string"
                      },
                      "uiDisplayable": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "type": "array"
                },
                "recordSetTotal": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "byType",
              "byTypeAndName"
            ],
            "name": "q",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The query name."
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "type": "string",
            "description": "Type of the e-spot. For instance : qType=MARKETING. Required for search by type.",
            "in": "query",
            "name": "qType"
          },
          {
            "required": false,
            "type": "string",
            "description": "Name of the e-spot used to find all spots with at least a partial match in the name or description. Required for search by name.",
            "in": "query",
            "name": "qName"
          },
          {
            "required": false,
            "type": "string",
            "description": "The catalog identifier. If none is specified, the store default catalog is used.",
            "in": "query",
            "name": "catalogId"
          },
          {
            "required": false,
            "type": "string",
            "description": "Page size. Used to limit the amount of data returned by a query. Valid values are integers starting with 1. Use pageSize with pageNumber.",
            "in": "query",
            "name": "pageSize"
          },
          {
            "required": false,
            "type": "string",
            "description": "Page number. Valid values are positive integers starting at 1. Use pageNumber with pageSize.",
            "in": "query",
            "name": "pageNumber"
          }
        ],
        "tags": [
          "Spot"
        ],
        "description": "Gets e-Marketing Spots in a store.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get e-Marketing Spots",
        "operationId": "Spot-findSpotsByQuery"
      }
    },
    "/wcs/resources/store/{storeId}/event": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "description": "Empty model. Used as default value when no model is specified."
            },
            "description": "The requested completed successfully.",
            "examples": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "in": "body",
            "description": "Marketing event trigger body.",
            "name": "body",
            "schema": {
              "required": [
                "activityId",
                "baseMarketingSpotActivityID",
                "baseMarketingSpotDataType",
                "eMarketingSpotId",
                "experimentResultId",
                "experimentResultTestElementId",
                "personalizationID"
              ],
              "description": "Marketing event trigger. Note : all parameters specified beyond the schema are sent to the marketing event.",
              "properties": {
                "eMarketingSpotId": {
                  "type": "string",
                  "description": "Marketing spot identifier."
                },
                "experimentResultTestElementId": {
                  "type": "string",
                  "description": "Experiment result test element identifier."
                },
                "baseMarketingSpotActivityID": {
                  "type": "string",
                  "description": "Base marketing spot activity identifier."
                },
                "baseMarketingSpotDataType": {
                  "type": "string",
                  "description": "Marketing spot data type. Example : \"MarketingContent\"."
                },
                "categoryId": {
                  "type": "string",
                  "description": "Category identifier."
                },
                "activityId": {
                  "type": "string",
                  "description": "Activity identifier."
                },
                "personalizationID": {
                  "type": "string",
                  "description": "Personalization identifier."
                },
                "experimentResultId": {
                  "type": "string",
                  "description": "Experiment result identifier."
                },
                "searchTerm": {
                  "type": "string",
                  "description": "Search term. Stored in a comma-separated list of search strings."
                },
                "DM_ReqCmd": {
                  "type": "string",
                  "description": "Requested command."
                },
                "productId": {
                  "type": "string",
                  "description": "Product identifier."
                }
              }
            }
          }
        ],
        "tags": [
          "Event"
        ],
        "description": "Triggers marketing based on certain events.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Trigger marketing by event",
        "operationId": "Event-triggerMarketing"
      }
    },
    "/wcs/resources/store/{storeId}/espot/{name}/product/{productId}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "MarketingSpotData"
              ],
              "description": "Structure containing an e-marketing spot.",
              "properties": {
                "MarketingSpotData": {
                  "items": {
                    "required": [
                      "marketingSpotIdentifier"
                    ],
                    "description": "Data to display in the e-marketing spot.",
                    "properties": {
                      "eSpotStoreId": {
                        "type": "string",
                        "description": "The store identifier."
                      },
                      "nextTimeLimit": {
                        "type": "string",
                        "description": "The number of seconds from now to the earliest start date or end date of activities scheduled to the e-Marketing Spot."
                      },
                      "marketingSpotIdentifier": {
                        "type": "string",
                        "description": "The unique identifier of the e-marketing spot."
                      },
                      "baseMarketingSpotActivityData": {
                        "items": {
                          "description": "The data to display in the e-marketing spot. This contains the data and the information about the activity that returned this data.",
                          "properties": {
                            "attachmentReferenceId": {
                              "type": "string",
                              "description": "Unique identifier for the attachment reference."
                            },
                            "attachmentUsageName": {
                              "type": "string",
                              "description": "Name of the attachment usage."
                            },
                            "standardPriceQuantity": {
                              "type": "string",
                              "description": "Quantity of a unit."
                            },
                            "standardPriceCurrency": {
                              "type": "string",
                              "description": "Currency of the standard price."
                            },
                            "standardPricePrecedence": {
                              "type": "string",
                              "description": "Precedence of contract."
                            },
                            "contentName": {
                              "type": "string",
                              "description": "Name of the marketing content."
                            },
                            "standardPriceAltCurrencyPrice": {
                              "type": "string",
                              "description": "Unit price in other currencies."
                            },
                            "contentFormatName": {
                              "type": "string",
                              "description": "Name of the type of the marketing content."
                            },
                            "standardPriceQualifier": {
                              "type": "string",
                              "description": "A uniquely identifying number that identifies the standard price."
                            },
                            "standardPrice": {
                              "type": "string",
                              "description": "The standard price."
                            },
                            "standardPriceMinQuantity": {
                              "type": "string",
                              "description": "Minimum quantity."
                            },
                            "attachementOwnerId": {
                              "type": "string",
                              "description": "Owner of the attachment target."
                            },
                            "standardPriceStartDate": {
                              "type": "string",
                              "description": "Start date."
                            },
                            "standardPriceQuantityUnit": {
                              "type": "string",
                              "description": "Unit of measure for minimumQuantity and maximumQuantity."
                            },
                            "xcatg_displayTemplate": {
                              "type": "string",
                              "description": "The display template for the catalog group."
                            },
                            "topCatalogGroup": {
                              "type": "string",
                              "description": "Attribute indicating whether catalog group is a top-level catalog group."
                            },
                            "standardPriceLastUpdate": {
                              "type": "string",
                              "description": "Date of last update."
                            },
                            "attachmentDescription": {
                              "items": {
                                "description": "Structure containing attachment description.",
                                "properties": {
                                  "attachmentName": {
                                    "type": "string",
                                    "description": "Language-dependent name of the attachment."
                                  },
                                  "attachmentLanguage": {
                                    "type": "string",
                                    "description": "Supported languages of an attachment asset."
                                  },
                                  "attachmentLongDescription": {
                                    "type": "string",
                                    "description": "Long description of the attachment."
                                  },
                                  "attachmentShortDescription": {
                                    "type": "string",
                                    "description": "Short description of the attachment."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Description of an attachment."
                            },
                            "attachementExternalId": {
                              "type": "string",
                              "description": "External identifying name for the attachment target."
                            },
                            "storeIdentifier": {
                              "type": "string",
                              "description": "External store identifier for the catalog entry/catalog group."
                            },
                            "MarketingContentDescription": {
                              "items": {
                                "description": "Not used"
                              },
                              "type": "array",
                              "description": "Not used."
                            },
                            "navigationRelationship": {
                              "type": "string",
                              "description": "Type definition for a navigational relationship"
                            },
                            "listPrice": {
                              "description": "List price associated with the catalog entry.",
                              "properties": {
                                "listPriceAltCurrencyPrice": {
                                  "type": "string",
                                  "description": "Unit price in other currencies."
                                },
                                "listPriceCurrency": {
                                  "type": "string",
                                  "description": "Currency of the standard price."
                                },
                                "listPrice": {
                                  "type": "string",
                                  "description": "The standard price."
                                },
                                "listPriceQuantity": {
                                  "type": "string",
                                  "description": "Quantity of a unit."
                                }
                              }
                            },
                            "standardPriceDescription": {
                              "type": "string",
                              "description": "Description of the standard price."
                            },
                            "contentInputOption": {
                              "type": "string",
                              "description": "The input options for the marketing content image map. Two options are support: \"Area\" means the image map is defined by individual area. \"Source\" means the image map is defined by HTML source code."
                            },
                            "marketingContentDescription": {
                              "items": {
                                "description": "Structure containing marketing content description.",
                                "properties": {
                                  "marketingText": {
                                    "type": "string",
                                    "description": "Marketing text of a marketing content."
                                  },
                                  "contentLocation": {
                                    "type": "string",
                                    "description": "Location of a marketing content."
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Supported languages of a marketing content."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Description of the marketing content."
                            },
                            "AttachmentReferenceDescription": {
                              "items": {
                                "description": "Not used"
                              },
                              "type": "array",
                              "description": "Not used"
                            },
                            "contentClickAction": {
                              "type": "string",
                              "description": "Number of click actions of the marketing content. : \"None\", \"Single\"(URL) or \"Multiple\"(Image Map)."
                            },
                            "attachmentImage": {
                              "type": "string",
                              "description": "Image path of the attachment relation usage."
                            },
                            "catalogEntryTypeCode": {
                              "type": "string",
                              "description": "Catalog entry type code."
                            },
                            "categoryId": {
                              "type": "string",
                              "description": "Unique identifier for the category."
                            },
                            "attachmentAsset": {
                              "items": {
                                "description": "Structure containing the attachment asset.",
                                "properties": {
                                  "attachmentAssetLanguage": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "description": "Language ID for the language-specific fields in this input file."
                                  },
                                  "attachmentLocalAsset": {
                                    "type": "string",
                                    "description": "Attribute to indicate whether this attachment is a local attachment."
                                  },
                                  "attachmentAssetMimeType": {
                                    "type": "string",
                                    "description": "MIME type of the attachment asset."
                                  },
                                  "attachmentAssetRootDirectory": {
                                    "type": "string",
                                    "description": "Root directory for the attachment asset."
                                  },
                                  "attachmentAssetDirectoryPath": {
                                    "type": "string",
                                    "description": "Directory path to the attachment asset."
                                  },
                                  "attachmentAssetId": {
                                    "type": "string",
                                    "description": "Identifier of the attachment asset."
                                  },
                                  "attachmentAssetStoreExternalId": {
                                    "type": "string",
                                    "description": "External identifier of the store that owns the attachment asset."
                                  },
                                  "attachmentAssetStoreId": {
                                    "type": "string",
                                    "description": "Identifier of the store that owns the attachment asset."
                                  },
                                  "attachmentAssetPath": {
                                    "type": "string",
                                    "description": "Relative path of the attachment asset."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Definition of an attachment asset."
                            },
                            "productId": {
                              "type": "string",
                              "description": "Unique ID of the product."
                            },
                            "contentUrl": {
                              "type": "string",
                              "description": "Click action to be invoked when marketing content on the page is clicked."
                            },
                            "standardPriceContractID": {
                              "type": "string",
                              "description": "Contract identifier the standard price is associated with."
                            },
                            "baseMarketingSpotActivityID": {
                              "type": "string",
                              "description": "Unique identifier for the data displayed in the e-marketing spot."
                            },
                            "categoryIdentifier": {
                              "type": "string",
                              "description": "Catalog group identifier."
                            },
                            "attachmentUsageDescription": {
                              "items": {
                                "description": "Structure containing attachment description.",
                                "properties": {
                                  "attachmentName": {
                                    "type": "string",
                                    "description": "Language-dependent name of the attachment."
                                  },
                                  "attachmentLanguage": {
                                    "type": "string",
                                    "description": "Supported languages of an attachment asset."
                                  },
                                  "attachmentLongDescription": {
                                    "type": "string",
                                    "description": "Long description of the attachment."
                                  },
                                  "attachmentShortDescription": {
                                    "type": "string",
                                    "description": "Short description of the attachment."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Language or locale specific description of an attachment."
                            },
                            "description": {
                              "items": {
                                "description": "Structure containing the catalog entry/category description.",
                                "properties": {
                                  "categoryName": {
                                    "type": "string",
                                    "description": "Name of the category."
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Language type."
                                  },
                                  "fullImage": {
                                    "type": "string",
                                    "description": "Full image of the catalog entity."
                                  },
                                  "longDescription": {
                                    "type": "string",
                                    "description": "Long description of the catalog entity."
                                  },
                                  "keyword": {
                                    "type": "string",
                                    "description": "Search keywords for the catalog entity."
                                  },
                                  "attributes": {
                                    "items": {
                                      "description": "Structure containing name-value pair attributes.",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Value."
                                        },
                                        "key": {
                                          "type": "string",
                                          "description": "Key name."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "Set of name-value pair attributes."
                                  },
                                  "productName": {
                                    "type": "string",
                                    "description": "Name of the catalog entry."
                                  },
                                  "shortDescription": {
                                    "type": "string",
                                    "description": "Short description of the catalog entity."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Description of the catalog entry/category."
                            },
                            "attachementStoreExternalId": {
                              "type": "string",
                              "description": "External identifier of the store that owns the attachment."
                            },
                            "contentMimeType": {
                              "type": "string",
                              "description": "MIME type of the marketing content."
                            },
                            "activityPriority": {
                              "type": "string",
                              "description": "Priority of the activity that returned the\tdata to be displayed in the e-marketing spot."
                            },
                            "activityIdentifierID": {
                              "type": "string",
                              "description": "Unique identifier for the activity."
                            },
                            "attachementId": {
                              "type": "string",
                              "description": "Identifier for the attachment"
                            },
                            "parentCatalogGroupId": {
                              "type": "string",
                              "description": "Parent catalog group identifier. Null for top-level catalog groups."
                            },
                            "sEOURL": {
                              "type": "string",
                              "description": "SEO URL associated with the catalog entry / catalog group."
                            },
                            "attachmentReferenceDescription": {
                              "items": {
                                "description": "Structure containing attachment description.",
                                "properties": {
                                  "attachmentName": {
                                    "type": "string",
                                    "description": "Language-dependent name of the attachment."
                                  },
                                  "attachmentLanguage": {
                                    "type": "string",
                                    "description": "Supported languages of an attachment asset."
                                  },
                                  "attachmentLongDescription": {
                                    "type": "string",
                                    "description": "Long description of the attachment."
                                  },
                                  "attachmentShortDescription": {
                                    "type": "string",
                                    "description": "Short description of the attachment."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Description of the relationship between the business object and the attachment."
                            },
                            "xcatg_rootDirectory": {
                              "type": "string",
                              "description": "The root directory for the catalog group."
                            },
                            "ownerId": {
                              "type": "string",
                              "description": "Owner organization of the catalog entry/catalog group."
                            },
                            "taxonomyAttribute": {
                              "type": "string",
                              "description": "Taxonomy attributes for the catalog group."
                            },
                            "attachmentDisplaySequence": {
                              "type": "string",
                              "description": "Sequence of the attachment relation usage."
                            },
                            "contentFormatId": {
                              "type": "string",
                              "description": "Unique ID of the type of the marketing content."
                            },
                            "baseMarketingSpotCampaignName": {
                              "type": "string",
                              "description": "Name of the campaign that returned the data to be displayed in the e-marketing spot"
                            },
                            "properties": {
                              "items": {
                                "description": "Structure containing optional properties related to marketing content to display.",
                                "properties": {
                                  "baseMarketingKey": {
                                    "type": "string",
                                    "description": "Property key."
                                  },
                                  "baseMarketingValue": {
                                    "type": "string",
                                    "description": "Property value."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Properties related to marketing content."
                            },
                            "association": {
                              "type": "string",
                              "description": "Association to other objects."
                            },
                            "contentStoreId": {
                              "type": "string",
                              "description": "Identifier of the store associated with the marketing content."
                            },
                            "activityFormat": {
                              "type": "string",
                              "description": "Type of the activity that returned the data to be displayed in the e-marketing spot."
                            },
                            "baseMarketingSpotDataType": {
                              "type": "string",
                              "description": "Type of the data displayed in the e-marketing spot."
                            },
                            "sEOProperties": {
                              "type": "string",
                              "description": "SEO properties associated with the catalog entry / catalog group."
                            },
                            "standardPriceEndDate": {
                              "type": "string",
                              "description": "End date."
                            },
                            "contentId": {
                              "type": "string",
                              "description": "Unique ID of the marketing content."
                            },
                            "displaySequence": {
                              "type": "string",
                              "description": "Sequence of display of catalog entry."
                            },
                            "activityIdentifierName": {
                              "type": "string",
                              "description": "Name of the activity."
                            },
                            "attachementStoreId": {
                              "type": "string",
                              "description": "Identifier of the store that owns the attachment."
                            },
                            "standardPriceMaxQuantity": {
                              "type": "string",
                              "description": "Maximum quantity."
                            },
                            "productPartNumber": {
                              "type": "string",
                              "description": "Part number or SKU for the product."
                            },
                            "AttachmentDescription": {
                              "items": {
                                "description": "Not used"
                              },
                              "type": "array",
                              "description": "Not used"
                            },
                            "attributes": {
                              "items": {
                                "description": "Structure containing attributes.",
                                "properties": {
                                  "comparable": {
                                    "type": "string",
                                    "description": "If attribute can be used for comparison."
                                  },
                                  "floatValue": {
                                    "type": "string",
                                    "description": "Type definition for a FloatValue attribute."
                                  },
                                  "extendedValue": {
                                    "items": {
                                      "description": "Structure containing name-value pair attributes.",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Value."
                                        },
                                        "key": {
                                          "type": "string",
                                          "description": "Key name."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "Name-value pairs for defining additional attribute values such as images and or attachments. Can also be used for customer extension."
                                  },
                                  "attributeValue": {
                                    "type": "string",
                                    "description": "Abstract attribute value for customer extension."
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Optional language for the attribute."
                                  },
                                  "groupPath": {
                                    "type": "string",
                                    "description": "Group path of the attribute, listing all ancestor groups of this attribute."
                                  },
                                  "displaySequence": {
                                    "type": "string",
                                    "description": "Display sequence of a displayable attribute."
                                  },
                                  "extendedData": {
                                    "items": {
                                      "description": "Structure containing name-value pair attributes.",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Value."
                                        },
                                        "key": {
                                          "type": "string",
                                          "description": "Key name."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "Extended data."
                                  },
                                  "attributeIdentifier": {
                                    "type": "string",
                                    "description": "If the attribute is a reference to an attribute from the attribute dictionary."
                                  },
                                  "displayable": {
                                    "type": "string",
                                    "description": "If attribute is displayable in storefront."
                                  },
                                  "attributeDataType": {
                                    "type": "string",
                                    "description": "Attribute data type."
                                  },
                                  "values": {
                                    "items": {
                                      "description": "Structure containing the allowed values for the attribute.",
                                      "properties": {
                                        "integerValue": {
                                          "type": "string",
                                          "description": "Type definition for an IntegerValue attribute."
                                        },
                                        "floatValue": {
                                          "type": "string",
                                          "description": "Type definition for a FloatValue attribute."
                                        },
                                        "attributeValue": {
                                          "type": "string",
                                          "description": "Abstract attribute value for customer extension."
                                        },
                                        "stringValue": {
                                          "type": "string",
                                          "description": "Type definition for an StringValue attribute."
                                        },
                                        "extendedValue": {
                                          "items": {
                                            "description": "Structure containing name-value pair attributes.",
                                            "properties": {
                                              "value": {
                                                "type": "string",
                                                "description": "Value."
                                              },
                                              "key": {
                                                "type": "string",
                                                "description": "Key name."
                                              }
                                            }
                                          },
                                          "type": "array",
                                          "description": "Name-value pairs for defining additional attribute values such as images and or attachments. Can also be used for customer extension."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "All values for the attribute"
                                  },
                                  "attributeType": {
                                    "type": "string",
                                    "description": "Attribute type"
                                  },
                                  "allowedValue": {
                                    "items": {
                                      "description": "Structure containing the allowed values for the attribute.",
                                      "properties": {
                                        "integerValue": {
                                          "type": "string",
                                          "description": "Type definition for an IntegerValue attribute."
                                        },
                                        "floatValue": {
                                          "type": "string",
                                          "description": "Type definition for a FloatValue attribute."
                                        },
                                        "attributeValue": {
                                          "type": "string",
                                          "description": "Abstract attribute value for customer extension."
                                        },
                                        "stringValue": {
                                          "type": "string",
                                          "description": "Type definition for an StringValue attribute."
                                        },
                                        "extendedValue": {
                                          "items": {
                                            "description": "Structure containing name-value pair attributes.",
                                            "properties": {
                                              "value": {
                                                "type": "string",
                                                "description": "Value."
                                              },
                                              "key": {
                                                "type": "string",
                                                "description": "Key name."
                                              }
                                            }
                                          },
                                          "type": "array",
                                          "description": "Name-value pairs for defining additional attribute values such as images and or attachments. Can also be used for customer extension."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "Allowed values for the attribute."
                                  },
                                  "usage": {
                                    "type": "string",
                                    "description": "Use for the attribute."
                                  },
                                  "stringValue": {
                                    "type": "string",
                                    "description": "Type definition for an StringValue attribute."
                                  },
                                  "searchable": {
                                    "type": "string",
                                    "description": "If attribute can be used for search."
                                  },
                                  "parentAttributeGroup": {
                                    "type": "string",
                                    "description": "Parent attribute group for this attribute."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Attribute name."
                                  },
                                  "integerValue": {
                                    "type": "string",
                                    "description": "Type definition for an IntegerValue attribute."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Attribute description."
                                  }
                                }
                              },
                              "type": "array"
                            },
                            "baseMarketingSpotActivityName": {
                              "type": "string",
                              "description": "Name of the data displayed in the e-marketing spot."
                            },
                            "categoryGroupId": {
                              "type": "string",
                              "description": "Catalog group identifier."
                            },
                            "contentStoreExternalId": {
                              "type": "string",
                              "description": "Unique external identifier of the store associated with the marketing content."
                            },
                            "contractPrice": {
                              "items": {
                                "description": "Structure containing an contract price.",
                                "properties": {
                                  "majorVersionNumber": {
                                    "type": "string",
                                    "description": "Major version."
                                  },
                                  "lastUpdate": {
                                    "type": "string",
                                    "description": "Date of last update."
                                  },
                                  "endDate": {
                                    "type": "string",
                                    "description": "End date."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the offer price."
                                  },
                                  "precedence": {
                                    "type": "string",
                                    "description": "Precedence of contract."
                                  },
                                  "quantityUnit": {
                                    "type": "string",
                                    "description": "Unit of measure for minimumQuantity and maximumQuantity."
                                  },
                                  "minorVersionNumber": {
                                    "type": "string",
                                    "description": "Minor version."
                                  },
                                  "startDate": {
                                    "type": "string",
                                    "description": "Start date."
                                  },
                                  "qualifier": {
                                    "type": "string",
                                    "description": "A uniquely identifying number that identifies the contract price."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Contact name."
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency of the offer price."
                                  },
                                  "maximumQuantity": {
                                    "type": "string",
                                    "description": "Maximum quantity."
                                  },
                                  "minimumQuantity": {
                                    "type": "string",
                                    "description": "Minimum quantity."
                                  },
                                  "alternativeCurrencyPrice": {
                                    "type": "string",
                                    "description": "Unit price in other currencies."
                                  },
                                  "ownerID": {
                                    "type": "string",
                                    "description": "Owner of the contract."
                                  },
                                  "quantity": {
                                    "type": "string",
                                    "description": "Quantity of a unit."
                                  },
                                  "contractPrice": {
                                    "type": "string",
                                    "description": "The contract price."
                                  },
                                  "origin": {
                                    "type": "string",
                                    "description": "Origin of the contract."
                                  },
                                  "contractID": {
                                    "type": "string",
                                    "description": "Contract identifier the offer price is associated with."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "The contract price object."
                            }
                          }
                        },
                        "type": "array",
                        "description": "Base e-marketing spot activity data."
                      },
                      "filteredResult": {
                        "items": {
                          "description": "Structure containing the filtered result.",
                          "properties": {
                            "filteredResultId": {
                              "type": "string",
                              "description": "The unique identifier of the filtered result."
                            },
                            "filteredResultFormat": {
                              "type": "string",
                              "description": "The format of the filtered result."
                            }
                          }
                        },
                        "type": "array",
                        "description": "Result that was filtered from display in the e-Marketing Spot."
                      },
                      "defaultContentDisplaySequence": {
                        "items": {
                          "description": "Structure containing the default content sequence values.",
                          "properties": {
                            "displaySequence": {
                              "type": "string",
                              "description": "Sequence value of the default content."
                            },
                            "resultId": {
                              "type": "string",
                              "description": "Unique identifier of the result."
                            },
                            "resultFormat": {
                              "type": "string",
                              "description": "Type of the result.  Valid values include MarketingContent, CatalogGroup, CatalogEntry."
                            }
                          }
                        },
                        "type": "array",
                        "description": "Sequence values of the default content to display in the e-marketing spot."
                      },
                      "marketingSpotDataTitle": {
                        "items": {
                          "description": "Structure containing the marketing title to display in the e-marketing spot.",
                          "properties": {
                            "contentFormatName": {
                              "type": "string",
                              "description": "Name of the type of the marketing content."
                            },
                            "marketingContentImageMap": {
                              "items": {
                                "description": "Structure containing image map definition for marketing content.",
                                "properties": {
                                  "source": {
                                    "type": "string",
                                    "description": "HTML definition of the image map. This element is used when users want to define the whole image map directly using HTML."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the image map."
                                  },
                                  "area": {
                                    "items": {
                                      "description": "Structure containing the clickable area of an image map.",
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "Title of the area."
                                        },
                                        "url": {
                                          "type": "string",
                                          "description": "Click action to be invoked when the area is clicked."
                                        },
                                        "displaySequence": {
                                          "type": "string",
                                          "description": "Sequence of the area."
                                        },
                                        "coordinates": {
                                          "type": "string",
                                          "description": "Coordinates of the area."
                                        },
                                        "shape": {
                                          "type": "string",
                                          "description": "Shape of the area. Three types of shape are supported: \"rect\" (Rectangle), \"circle\" (Circle) and \"poly\" (Polygon)."
                                        },
                                        "uniqueID": {
                                          "type": "string",
                                          "description": "Unique ID of the image map area."
                                        },
                                        "alternateText": {
                                          "type": "string",
                                          "description": "Alternate text for the area."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "Clickable area in the image map."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Image map definition for the image with clickable areas."
                            },
                            "marketingSpotDataTitleId": {
                              "type": "string",
                              "description": "Unique ID for the marketing content."
                            },
                            "MarketingContentDescription": {
                              "items": {
                                "description": "Not used"
                              },
                              "type": "array",
                              "description": "Not used."
                            },
                            "contentId": {
                              "type": "string",
                              "description": "Unique ID of the marketing content."
                            },
                            "marketingSpotDataTitleDataType": {
                              "type": "string",
                              "description": "Type of data displayed in the marketing content."
                            },
                            "marketingSpotDataTitleName": {
                              "type": "string",
                              "description": "Name of the marketing content."
                            },
                            "marketingContentDescription": {
                              "items": {
                                "description": "Structure containing marketing content description.",
                                "properties": {
                                  "marketingText": {
                                    "type": "string",
                                    "description": "Marketing text of a marketing content."
                                  },
                                  "contentLocation": {
                                    "type": "string",
                                    "description": "Location of a marketing content."
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Supported languages of a marketing content."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Description of the marketing content."
                            },
                            "marketingSpotDataTitleActivityID": {
                              "type": "string",
                              "description": "The unique identifier of the activity that returned the data to be displayed in the e-marketing spot."
                            },
                            "contentClickAction": {
                              "type": "string",
                              "description": "Number of click actions of the marketing content. : \"None\", \"Single\"(URL) or \"Multiple\"(Image Map)."
                            },
                            "contentName": {
                              "type": "string",
                              "description": "Name of the marketing content."
                            },
                            "contentFormatId": {
                              "type": "string",
                              "description": "Unique ID of the type of the marketing content."
                            },
                            "contentStoreId": {
                              "type": "string",
                              "description": "Identifier of the store associated with the marketing content."
                            }
                          }
                        },
                        "type": "array",
                        "description": "Marketing title to display in the e-marketing spot."
                      },
                      "eSpotName": {
                        "type": "string",
                        "description": "The e-marketing Spot name."
                      },
                      "behavior": {
                        "type": "string",
                        "description": "The current caching behavior of the e-marketing spot."
                      },
                      "previewReport": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "Information about the activity evaluation."
                      }
                    }
                  },
                  "type": "array",
                  "description": "Data to display in the e-marketing spot."
                }
              }
            },
            "description": "The requested completed successfully.",
            "examples": {
              "application/json": {
                "MarketingSpotData": [
                  {
                    "nextTimeLimit": "-1",
                    "eSpotName": "ESpotDataHandlerESpotName",
                    "marketingSpotIdentifier": "15562",
                    "behavior": "0"
                  }
                ],
                "resourceId": "http://localhost:80/wcs/resources/store/10001/espot/ESpotDataHandlerESpotName/product/12973?numberContentToDisplay=1&DM_ReqCmd=ProductDisplay2",
                "resourceName": "espot"
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "E-Spot name.",
            "in": "path",
            "name": "name"
          },
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "The product identifier.",
            "in": "path",
            "name": "productId"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "type": "string",
            "description": "The catalog identifier. If none is specified, the store default catalog is used.",
            "in": "query",
            "name": "catalogId"
          },
          {
            "enum": [
              "ARS",
              "ATS",
              "AUD",
              "BEF",
              "BRL",
              "CAD",
              "CHF",
              "CNY",
              "DEM",
              "DKK",
              "EGP",
              "ESP",
              "EUR",
              "FIM",
              "FRF",
              "GBP",
              "HKD",
              "IEP",
              "ITL",
              "JPY",
              "KRW",
              "LUF",
              "NLG",
              "NOK",
              "PLN",
              "PTE",
              "ROL",
              "RON",
              "RUB",
              "SEK",
              "SGD",
              "TWD",
              "USD",
              "ZAR"
            ],
            "name": "currency",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The currency code to use for example, currency=USD. If no currency code is specified, the store default currency is used."
          }
        ],
        "tags": [
          "Spot"
        ],
        "description": "\"Deprecated: Gets an e-Marketing Spot for a specific product. Alternatively, this can be implemented using the findByName method with the following URL: store/{storeId}/espot/{name}?productId=&DM_ReqCmd=ProductDisplay.\"",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get e-Marketing Sport for product",
        "operationId": "E-spot-findByNameWithProduct"
      }
    },
    "/wcs/resources/store/{storeId}/event/behavior_rules": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "description": "Empty model. Used as default value when no model is specified."
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "required": false,
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "in": "query",
            "name": "responseFormat"
          }
        ],
        "tags": [
          "Event"
        ],
        "description": "Gets user behavior rules.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get user behavior rules",
        "operationId": "Event-getBehaviorRules"
      }
    },
    "/wcs/resources/store/{storeId}/espot/{name}": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "MarketingSpotData"
              ],
              "description": "Structure containing an e-marketing spot.",
              "properties": {
                "MarketingSpotData": {
                  "items": {
                    "required": [
                      "marketingSpotIdentifier"
                    ],
                    "description": "Data to display in the e-marketing spot.",
                    "properties": {
                      "eSpotStoreId": {
                        "type": "string",
                        "description": "The store identifier."
                      },
                      "nextTimeLimit": {
                        "type": "string",
                        "description": "The number of seconds from now to the earliest start date or end date of activities scheduled to the e-Marketing Spot."
                      },
                      "marketingSpotIdentifier": {
                        "type": "string",
                        "description": "The unique identifier of the e-marketing spot."
                      },
                      "baseMarketingSpotActivityData": {
                        "items": {
                          "description": "The data to display in the e-marketing spot. This contains the data and the information about the activity that returned this data.",
                          "properties": {
                            "attachmentReferenceId": {
                              "type": "string",
                              "description": "Unique identifier for the attachment reference."
                            },
                            "attachmentUsageName": {
                              "type": "string",
                              "description": "Name of the attachment usage."
                            },
                            "standardPriceQuantity": {
                              "type": "string",
                              "description": "Quantity of a unit."
                            },
                            "standardPriceCurrency": {
                              "type": "string",
                              "description": "Currency of the standard price."
                            },
                            "standardPricePrecedence": {
                              "type": "string",
                              "description": "Precedence of contract."
                            },
                            "contentName": {
                              "type": "string",
                              "description": "Name of the marketing content."
                            },
                            "standardPriceAltCurrencyPrice": {
                              "type": "string",
                              "description": "Unit price in other currencies."
                            },
                            "contentFormatName": {
                              "type": "string",
                              "description": "Name of the type of the marketing content."
                            },
                            "standardPriceQualifier": {
                              "type": "string",
                              "description": "A uniquely identifying number that identifies the standard price."
                            },
                            "standardPrice": {
                              "type": "string",
                              "description": "The standard price."
                            },
                            "standardPriceMinQuantity": {
                              "type": "string",
                              "description": "Minimum quantity."
                            },
                            "attachementOwnerId": {
                              "type": "string",
                              "description": "Owner of the attachment target."
                            },
                            "standardPriceStartDate": {
                              "type": "string",
                              "description": "Start date."
                            },
                            "standardPriceQuantityUnit": {
                              "type": "string",
                              "description": "Unit of measure for minimumQuantity and maximumQuantity."
                            },
                            "xcatg_displayTemplate": {
                              "type": "string",
                              "description": "The display template for the catalog group."
                            },
                            "topCatalogGroup": {
                              "type": "string",
                              "description": "Attribute indicating whether catalog group is a top-level catalog group."
                            },
                            "standardPriceLastUpdate": {
                              "type": "string",
                              "description": "Date of last update."
                            },
                            "attachmentDescription": {
                              "items": {
                                "description": "Structure containing attachment description.",
                                "properties": {
                                  "attachmentName": {
                                    "type": "string",
                                    "description": "Language-dependent name of the attachment."
                                  },
                                  "attachmentLanguage": {
                                    "type": "string",
                                    "description": "Supported languages of an attachment asset."
                                  },
                                  "attachmentLongDescription": {
                                    "type": "string",
                                    "description": "Long description of the attachment."
                                  },
                                  "attachmentShortDescription": {
                                    "type": "string",
                                    "description": "Short description of the attachment."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Description of an attachment."
                            },
                            "attachementExternalId": {
                              "type": "string",
                              "description": "External identifying name for the attachment target."
                            },
                            "storeIdentifier": {
                              "type": "string",
                              "description": "External store identifier for the catalog entry/catalog group."
                            },
                            "MarketingContentDescription": {
                              "items": {
                                "description": "Not used"
                              },
                              "type": "array",
                              "description": "Not used."
                            },
                            "navigationRelationship": {
                              "type": "string",
                              "description": "Type definition for a navigational relationship"
                            },
                            "listPrice": {
                              "description": "List price associated with the catalog entry.",
                              "properties": {
                                "listPriceAltCurrencyPrice": {
                                  "type": "string",
                                  "description": "Unit price in other currencies."
                                },
                                "listPriceCurrency": {
                                  "type": "string",
                                  "description": "Currency of the standard price."
                                },
                                "listPrice": {
                                  "type": "string",
                                  "description": "The standard price."
                                },
                                "listPriceQuantity": {
                                  "type": "string",
                                  "description": "Quantity of a unit."
                                }
                              }
                            },
                            "standardPriceDescription": {
                              "type": "string",
                              "description": "Description of the standard price."
                            },
                            "contentInputOption": {
                              "type": "string",
                              "description": "The input options for the marketing content image map. Two options are support: \"Area\" means the image map is defined by individual area. \"Source\" means the image map is defined by HTML source code."
                            },
                            "marketingContentDescription": {
                              "items": {
                                "description": "Structure containing marketing content description.",
                                "properties": {
                                  "marketingText": {
                                    "type": "string",
                                    "description": "Marketing text of a marketing content."
                                  },
                                  "contentLocation": {
                                    "type": "string",
                                    "description": "Location of a marketing content."
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Supported languages of a marketing content."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Description of the marketing content."
                            },
                            "AttachmentReferenceDescription": {
                              "items": {
                                "description": "Not used"
                              },
                              "type": "array",
                              "description": "Not used"
                            },
                            "contentClickAction": {
                              "type": "string",
                              "description": "Number of click actions of the marketing content. : \"None\", \"Single\"(URL) or \"Multiple\"(Image Map)."
                            },
                            "attachmentImage": {
                              "type": "string",
                              "description": "Image path of the attachment relation usage."
                            },
                            "catalogEntryTypeCode": {
                              "type": "string",
                              "description": "Catalog entry type code."
                            },
                            "categoryId": {
                              "type": "string",
                              "description": "Unique identifier for the category."
                            },
                            "attachmentAsset": {
                              "items": {
                                "description": "Structure containing the attachment asset.",
                                "properties": {
                                  "attachmentAssetLanguage": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "description": "Language ID for the language-specific fields in this input file."
                                  },
                                  "attachmentLocalAsset": {
                                    "type": "string",
                                    "description": "Attribute to indicate whether this attachment is a local attachment."
                                  },
                                  "attachmentAssetMimeType": {
                                    "type": "string",
                                    "description": "MIME type of the attachment asset."
                                  },
                                  "attachmentAssetRootDirectory": {
                                    "type": "string",
                                    "description": "Root directory for the attachment asset."
                                  },
                                  "attachmentAssetDirectoryPath": {
                                    "type": "string",
                                    "description": "Directory path to the attachment asset."
                                  },
                                  "attachmentAssetId": {
                                    "type": "string",
                                    "description": "Identifier of the attachment asset."
                                  },
                                  "attachmentAssetStoreExternalId": {
                                    "type": "string",
                                    "description": "External identifier of the store that owns the attachment asset."
                                  },
                                  "attachmentAssetStoreId": {
                                    "type": "string",
                                    "description": "Identifier of the store that owns the attachment asset."
                                  },
                                  "attachmentAssetPath": {
                                    "type": "string",
                                    "description": "Relative path of the attachment asset."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Definition of an attachment asset."
                            },
                            "productId": {
                              "type": "string",
                              "description": "Unique ID of the product."
                            },
                            "contentUrl": {
                              "type": "string",
                              "description": "Click action to be invoked when marketing content on the page is clicked."
                            },
                            "standardPriceContractID": {
                              "type": "string",
                              "description": "Contract identifier the standard price is associated with."
                            },
                            "baseMarketingSpotActivityID": {
                              "type": "string",
                              "description": "Unique identifier for the data displayed in the e-marketing spot."
                            },
                            "categoryIdentifier": {
                              "type": "string",
                              "description": "Catalog group identifier."
                            },
                            "attachmentUsageDescription": {
                              "items": {
                                "description": "Structure containing attachment description.",
                                "properties": {
                                  "attachmentName": {
                                    "type": "string",
                                    "description": "Language-dependent name of the attachment."
                                  },
                                  "attachmentLanguage": {
                                    "type": "string",
                                    "description": "Supported languages of an attachment asset."
                                  },
                                  "attachmentLongDescription": {
                                    "type": "string",
                                    "description": "Long description of the attachment."
                                  },
                                  "attachmentShortDescription": {
                                    "type": "string",
                                    "description": "Short description of the attachment."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Language or locale specific description of an attachment."
                            },
                            "description": {
                              "items": {
                                "description": "Structure containing the catalog entry/category description.",
                                "properties": {
                                  "categoryName": {
                                    "type": "string",
                                    "description": "Name of the category."
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Language type."
                                  },
                                  "fullImage": {
                                    "type": "string",
                                    "description": "Full image of the catalog entity."
                                  },
                                  "longDescription": {
                                    "type": "string",
                                    "description": "Long description of the catalog entity."
                                  },
                                  "keyword": {
                                    "type": "string",
                                    "description": "Search keywords for the catalog entity."
                                  },
                                  "attributes": {
                                    "items": {
                                      "description": "Structure containing name-value pair attributes.",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Value."
                                        },
                                        "key": {
                                          "type": "string",
                                          "description": "Key name."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "Set of name-value pair attributes."
                                  },
                                  "productName": {
                                    "type": "string",
                                    "description": "Name of the catalog entry."
                                  },
                                  "shortDescription": {
                                    "type": "string",
                                    "description": "Short description of the catalog entity."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Description of the catalog entry/category."
                            },
                            "attachementStoreExternalId": {
                              "type": "string",
                              "description": "External identifier of the store that owns the attachment."
                            },
                            "contentMimeType": {
                              "type": "string",
                              "description": "MIME type of the marketing content."
                            },
                            "activityPriority": {
                              "type": "string",
                              "description": "Priority of the activity that returned the\tdata to be displayed in the e-marketing spot."
                            },
                            "activityIdentifierID": {
                              "type": "string",
                              "description": "Unique identifier for the activity."
                            },
                            "attachementId": {
                              "type": "string",
                              "description": "Identifier for the attachment"
                            },
                            "parentCatalogGroupId": {
                              "type": "string",
                              "description": "Parent catalog group identifier. Null for top-level catalog groups."
                            },
                            "sEOURL": {
                              "type": "string",
                              "description": "SEO URL associated with the catalog entry / catalog group."
                            },
                            "attachmentReferenceDescription": {
                              "items": {
                                "description": "Structure containing attachment description.",
                                "properties": {
                                  "attachmentName": {
                                    "type": "string",
                                    "description": "Language-dependent name of the attachment."
                                  },
                                  "attachmentLanguage": {
                                    "type": "string",
                                    "description": "Supported languages of an attachment asset."
                                  },
                                  "attachmentLongDescription": {
                                    "type": "string",
                                    "description": "Long description of the attachment."
                                  },
                                  "attachmentShortDescription": {
                                    "type": "string",
                                    "description": "Short description of the attachment."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Description of the relationship between the business object and the attachment."
                            },
                            "xcatg_rootDirectory": {
                              "type": "string",
                              "description": "The root directory for the catalog group."
                            },
                            "ownerId": {
                              "type": "string",
                              "description": "Owner organization of the catalog entry/catalog group."
                            },
                            "taxonomyAttribute": {
                              "type": "string",
                              "description": "Taxonomy attributes for the catalog group."
                            },
                            "attachmentDisplaySequence": {
                              "type": "string",
                              "description": "Sequence of the attachment relation usage."
                            },
                            "contentFormatId": {
                              "type": "string",
                              "description": "Unique ID of the type of the marketing content."
                            },
                            "baseMarketingSpotCampaignName": {
                              "type": "string",
                              "description": "Name of the campaign that returned the data to be displayed in the e-marketing spot"
                            },
                            "properties": {
                              "items": {
                                "description": "Structure containing optional properties related to marketing content to display.",
                                "properties": {
                                  "baseMarketingKey": {
                                    "type": "string",
                                    "description": "Property key."
                                  },
                                  "baseMarketingValue": {
                                    "type": "string",
                                    "description": "Property value."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Properties related to marketing content."
                            },
                            "association": {
                              "type": "string",
                              "description": "Association to other objects."
                            },
                            "contentStoreId": {
                              "type": "string",
                              "description": "Identifier of the store associated with the marketing content."
                            },
                            "activityFormat": {
                              "type": "string",
                              "description": "Type of the activity that returned the data to be displayed in the e-marketing spot."
                            },
                            "baseMarketingSpotDataType": {
                              "type": "string",
                              "description": "Type of the data displayed in the e-marketing spot."
                            },
                            "sEOProperties": {
                              "type": "string",
                              "description": "SEO properties associated with the catalog entry / catalog group."
                            },
                            "standardPriceEndDate": {
                              "type": "string",
                              "description": "End date."
                            },
                            "contentId": {
                              "type": "string",
                              "description": "Unique ID of the marketing content."
                            },
                            "displaySequence": {
                              "type": "string",
                              "description": "Sequence of display of catalog entry."
                            },
                            "activityIdentifierName": {
                              "type": "string",
                              "description": "Name of the activity."
                            },
                            "attachementStoreId": {
                              "type": "string",
                              "description": "Identifier of the store that owns the attachment."
                            },
                            "standardPriceMaxQuantity": {
                              "type": "string",
                              "description": "Maximum quantity."
                            },
                            "productPartNumber": {
                              "type": "string",
                              "description": "Part number or SKU for the product."
                            },
                            "AttachmentDescription": {
                              "items": {
                                "description": "Not used"
                              },
                              "type": "array",
                              "description": "Not used"
                            },
                            "attributes": {
                              "items": {
                                "description": "Structure containing attributes.",
                                "properties": {
                                  "comparable": {
                                    "type": "string",
                                    "description": "If attribute can be used for comparison."
                                  },
                                  "floatValue": {
                                    "type": "string",
                                    "description": "Type definition for a FloatValue attribute."
                                  },
                                  "extendedValue": {
                                    "items": {
                                      "description": "Structure containing name-value pair attributes.",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Value."
                                        },
                                        "key": {
                                          "type": "string",
                                          "description": "Key name."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "Name-value pairs for defining additional attribute values such as images and or attachments. Can also be used for customer extension."
                                  },
                                  "attributeValue": {
                                    "type": "string",
                                    "description": "Abstract attribute value for customer extension."
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Optional language for the attribute."
                                  },
                                  "groupPath": {
                                    "type": "string",
                                    "description": "Group path of the attribute, listing all ancestor groups of this attribute."
                                  },
                                  "displaySequence": {
                                    "type": "string",
                                    "description": "Display sequence of a displayable attribute."
                                  },
                                  "extendedData": {
                                    "items": {
                                      "description": "Structure containing name-value pair attributes.",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Value."
                                        },
                                        "key": {
                                          "type": "string",
                                          "description": "Key name."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "Extended data."
                                  },
                                  "attributeIdentifier": {
                                    "type": "string",
                                    "description": "If the attribute is a reference to an attribute from the attribute dictionary."
                                  },
                                  "displayable": {
                                    "type": "string",
                                    "description": "If attribute is displayable in storefront."
                                  },
                                  "attributeDataType": {
                                    "type": "string",
                                    "description": "Attribute data type."
                                  },
                                  "values": {
                                    "items": {
                                      "description": "Structure containing the allowed values for the attribute.",
                                      "properties": {
                                        "integerValue": {
                                          "type": "string",
                                          "description": "Type definition for an IntegerValue attribute."
                                        },
                                        "floatValue": {
                                          "type": "string",
                                          "description": "Type definition for a FloatValue attribute."
                                        },
                                        "attributeValue": {
                                          "type": "string",
                                          "description": "Abstract attribute value for customer extension."
                                        },
                                        "stringValue": {
                                          "type": "string",
                                          "description": "Type definition for an StringValue attribute."
                                        },
                                        "extendedValue": {
                                          "items": {
                                            "description": "Structure containing name-value pair attributes.",
                                            "properties": {
                                              "value": {
                                                "type": "string",
                                                "description": "Value."
                                              },
                                              "key": {
                                                "type": "string",
                                                "description": "Key name."
                                              }
                                            }
                                          },
                                          "type": "array",
                                          "description": "Name-value pairs for defining additional attribute values such as images and or attachments. Can also be used for customer extension."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "All values for the attribute"
                                  },
                                  "attributeType": {
                                    "type": "string",
                                    "description": "Attribute type"
                                  },
                                  "allowedValue": {
                                    "items": {
                                      "description": "Structure containing the allowed values for the attribute.",
                                      "properties": {
                                        "integerValue": {
                                          "type": "string",
                                          "description": "Type definition for an IntegerValue attribute."
                                        },
                                        "floatValue": {
                                          "type": "string",
                                          "description": "Type definition for a FloatValue attribute."
                                        },
                                        "attributeValue": {
                                          "type": "string",
                                          "description": "Abstract attribute value for customer extension."
                                        },
                                        "stringValue": {
                                          "type": "string",
                                          "description": "Type definition for an StringValue attribute."
                                        },
                                        "extendedValue": {
                                          "items": {
                                            "description": "Structure containing name-value pair attributes.",
                                            "properties": {
                                              "value": {
                                                "type": "string",
                                                "description": "Value."
                                              },
                                              "key": {
                                                "type": "string",
                                                "description": "Key name."
                                              }
                                            }
                                          },
                                          "type": "array",
                                          "description": "Name-value pairs for defining additional attribute values such as images and or attachments. Can also be used for customer extension."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "Allowed values for the attribute."
                                  },
                                  "usage": {
                                    "type": "string",
                                    "description": "Use for the attribute."
                                  },
                                  "stringValue": {
                                    "type": "string",
                                    "description": "Type definition for an StringValue attribute."
                                  },
                                  "searchable": {
                                    "type": "string",
                                    "description": "If attribute can be used for search."
                                  },
                                  "parentAttributeGroup": {
                                    "type": "string",
                                    "description": "Parent attribute group for this attribute."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Attribute name."
                                  },
                                  "integerValue": {
                                    "type": "string",
                                    "description": "Type definition for an IntegerValue attribute."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Attribute description."
                                  }
                                }
                              },
                              "type": "array"
                            },
                            "baseMarketingSpotActivityName": {
                              "type": "string",
                              "description": "Name of the data displayed in the e-marketing spot."
                            },
                            "categoryGroupId": {
                              "type": "string",
                              "description": "Catalog group identifier."
                            },
                            "contentStoreExternalId": {
                              "type": "string",
                              "description": "Unique external identifier of the store associated with the marketing content."
                            },
                            "contractPrice": {
                              "items": {
                                "description": "Structure containing an contract price.",
                                "properties": {
                                  "majorVersionNumber": {
                                    "type": "string",
                                    "description": "Major version."
                                  },
                                  "lastUpdate": {
                                    "type": "string",
                                    "description": "Date of last update."
                                  },
                                  "endDate": {
                                    "type": "string",
                                    "description": "End date."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the offer price."
                                  },
                                  "precedence": {
                                    "type": "string",
                                    "description": "Precedence of contract."
                                  },
                                  "quantityUnit": {
                                    "type": "string",
                                    "description": "Unit of measure for minimumQuantity and maximumQuantity."
                                  },
                                  "minorVersionNumber": {
                                    "type": "string",
                                    "description": "Minor version."
                                  },
                                  "startDate": {
                                    "type": "string",
                                    "description": "Start date."
                                  },
                                  "qualifier": {
                                    "type": "string",
                                    "description": "A uniquely identifying number that identifies the contract price."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Contact name."
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency of the offer price."
                                  },
                                  "maximumQuantity": {
                                    "type": "string",
                                    "description": "Maximum quantity."
                                  },
                                  "minimumQuantity": {
                                    "type": "string",
                                    "description": "Minimum quantity."
                                  },
                                  "alternativeCurrencyPrice": {
                                    "type": "string",
                                    "description": "Unit price in other currencies."
                                  },
                                  "ownerID": {
                                    "type": "string",
                                    "description": "Owner of the contract."
                                  },
                                  "quantity": {
                                    "type": "string",
                                    "description": "Quantity of a unit."
                                  },
                                  "contractPrice": {
                                    "type": "string",
                                    "description": "The contract price."
                                  },
                                  "origin": {
                                    "type": "string",
                                    "description": "Origin of the contract."
                                  },
                                  "contractID": {
                                    "type": "string",
                                    "description": "Contract identifier the offer price is associated with."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "The contract price object."
                            }
                          }
                        },
                        "type": "array",
                        "description": "Base e-marketing spot activity data."
                      },
                      "filteredResult": {
                        "items": {
                          "description": "Structure containing the filtered result.",
                          "properties": {
                            "filteredResultId": {
                              "type": "string",
                              "description": "The unique identifier of the filtered result."
                            },
                            "filteredResultFormat": {
                              "type": "string",
                              "description": "The format of the filtered result."
                            }
                          }
                        },
                        "type": "array",
                        "description": "Result that was filtered from display in the e-Marketing Spot."
                      },
                      "defaultContentDisplaySequence": {
                        "items": {
                          "description": "Structure containing the default content sequence values.",
                          "properties": {
                            "displaySequence": {
                              "type": "string",
                              "description": "Sequence value of the default content."
                            },
                            "resultId": {
                              "type": "string",
                              "description": "Unique identifier of the result."
                            },
                            "resultFormat": {
                              "type": "string",
                              "description": "Type of the result.  Valid values include MarketingContent, CatalogGroup, CatalogEntry."
                            }
                          }
                        },
                        "type": "array",
                        "description": "Sequence values of the default content to display in the e-marketing spot."
                      },
                      "marketingSpotDataTitle": {
                        "items": {
                          "description": "Structure containing the marketing title to display in the e-marketing spot.",
                          "properties": {
                            "contentFormatName": {
                              "type": "string",
                              "description": "Name of the type of the marketing content."
                            },
                            "marketingContentImageMap": {
                              "items": {
                                "description": "Structure containing image map definition for marketing content.",
                                "properties": {
                                  "source": {
                                    "type": "string",
                                    "description": "HTML definition of the image map. This element is used when users want to define the whole image map directly using HTML."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the image map."
                                  },
                                  "area": {
                                    "items": {
                                      "description": "Structure containing the clickable area of an image map.",
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "Title of the area."
                                        },
                                        "url": {
                                          "type": "string",
                                          "description": "Click action to be invoked when the area is clicked."
                                        },
                                        "displaySequence": {
                                          "type": "string",
                                          "description": "Sequence of the area."
                                        },
                                        "coordinates": {
                                          "type": "string",
                                          "description": "Coordinates of the area."
                                        },
                                        "shape": {
                                          "type": "string",
                                          "description": "Shape of the area. Three types of shape are supported: \"rect\" (Rectangle), \"circle\" (Circle) and \"poly\" (Polygon)."
                                        },
                                        "uniqueID": {
                                          "type": "string",
                                          "description": "Unique ID of the image map area."
                                        },
                                        "alternateText": {
                                          "type": "string",
                                          "description": "Alternate text for the area."
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "description": "Clickable area in the image map."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Image map definition for the image with clickable areas."
                            },
                            "marketingSpotDataTitleId": {
                              "type": "string",
                              "description": "Unique ID for the marketing content."
                            },
                            "MarketingContentDescription": {
                              "items": {
                                "description": "Not used"
                              },
                              "type": "array",
                              "description": "Not used."
                            },
                            "contentId": {
                              "type": "string",
                              "description": "Unique ID of the marketing content."
                            },
                            "marketingSpotDataTitleDataType": {
                              "type": "string",
                              "description": "Type of data displayed in the marketing content."
                            },
                            "marketingSpotDataTitleName": {
                              "type": "string",
                              "description": "Name of the marketing content."
                            },
                            "marketingContentDescription": {
                              "items": {
                                "description": "Structure containing marketing content description.",
                                "properties": {
                                  "marketingText": {
                                    "type": "string",
                                    "description": "Marketing text of a marketing content."
                                  },
                                  "contentLocation": {
                                    "type": "string",
                                    "description": "Location of a marketing content."
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Supported languages of a marketing content."
                                  }
                                }
                              },
                              "type": "array",
                              "description": "Description of the marketing content."
                            },
                            "marketingSpotDataTitleActivityID": {
                              "type": "string",
                              "description": "The unique identifier of the activity that returned the data to be displayed in the e-marketing spot."
                            },
                            "contentClickAction": {
                              "type": "string",
                              "description": "Number of click actions of the marketing content. : \"None\", \"Single\"(URL) or \"Multiple\"(Image Map)."
                            },
                            "contentName": {
                              "type": "string",
                              "description": "Name of the marketing content."
                            },
                            "contentFormatId": {
                              "type": "string",
                              "description": "Unique ID of the type of the marketing content."
                            },
                            "contentStoreId": {
                              "type": "string",
                              "description": "Identifier of the store associated with the marketing content."
                            }
                          }
                        },
                        "type": "array",
                        "description": "Marketing title to display in the e-marketing spot."
                      },
                      "eSpotName": {
                        "type": "string",
                        "description": "The e-marketing Spot name."
                      },
                      "behavior": {
                        "type": "string",
                        "description": "The current caching behavior of the e-marketing spot."
                      },
                      "previewReport": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "Information about the activity evaluation."
                      }
                    }
                  },
                  "type": "array",
                  "description": "Data to display in the e-marketing spot."
                }
              }
            },
            "description": "The requested completed successfully.",
            "examples": {
              "application/json": {
                "MarketingSpotData": [
                  {
                    "nextTimeLimit": "-1",
                    "marketingSpotIdentifier": "10562",
                    "baseMarketingSpotActivityData": [
                      {
                        "baseMarketingSpotActivityID": "10065",
                        "baseMarketingSpotDataType": "MarketingContent",
                        "MarketingContentDescription": [
                          {}
                        ],
                        "contentId": "10065",
                        "activityPriority": "1",
                        "contentFormatName": "Text",
                        "activityIdentifierID": "0",
                        "marketingContentDescription": [
                          {
                            "marketingText": "<link rel=\"stylesheet\" href=\"/wcsstore/Aurora/rwdWebAssets/homePageEspot_Right/styles.css\" /> <div class=\"col4\" id=\"homePageEspot_Right\" role=\"region\" aria-label=\"home page Espot kids\">    <div class=\"homeESpotContainer\" id=\"homePageEspot_Right_Slot\">       <div class=\"textContainer\">          <div class=\"title\">                       Kids' Stuff                      </div>          <div class=\"bodyText\">             Summer style is all about fun prints, bright colors, comfort, and durability. Stock up on our easy-to-wear and affordable fashions for kids. Spend $100* or more, and earn a $25 gift certificate.                                    <div class=\"finePrint\">                         *Before taxes. Gift certificates are redeemable on your next visit.                       </div>          </div>          <div class=\"button\"><a alt=\"\" role=\"link\" aria-label=\"Shop now girls category\" href=\"http://localhost/webapp/wcs/stores/servlet/en/aurora/apparel/girls\">shop now</a></div>       </div>       <div class=\"imageContainer\">                     <img alt=\"\" id=\"kids1\" src=\"/wcsstore/Aurora/rwdWebAssets/homePageEspot_Right/kids1.jpg\">                     <img alt=\"\" id=\"kids2\" src=\"/wcsstore/Aurora/rwdWebAssets/homePageEspot_Right/kids2.png\">                   </div>    </div> </div>",
                            "language": "-1"
                          }
                        ],
                        "contentClickAction": "None",
                        "contentName": "HomeKidsApparelAdContent",
                        "baseMarketingSpotActivityName": "HomeKidsApparelAdContent",
                        "contentFormatId": "2",
                        "properties": [
                          {
                            "baseMarketingKey": "mktActivityDescription"
                          },
                          {
                            "baseMarketingKey": "displaySequence",
                            "baseMarketingValue": "1.0"
                          }
                        ],
                        "contentStoreId": "10001"
                      }
                    ],
                    "defaultContentDisplaySequence": [
                      {
                        "displaySequence": "1.0",
                        "resultId": "10065",
                        "resultFormat": "MarketingContent"
                      }
                    ],
                    "eSpotName": "HomeBottomRight_Content",
                    "behavior": "0"
                  }
                ],
                "resourceId": "http://localhost:80/wcs/resources/store/10001/espot/HomeBottomRight_Content?DM_marketingSpotBehavior=&deleteIfEmpty=*&orderId=14029&toOrderId=.&page=&DM_ReqCmd=TopCategoriesDisplay&calculationUsageId=-1&DM_SubstitutionValue1=Aurora&catalogId=10052&createIfEmpty=1&DM_SubstitutionValue2=http%3A%2F%2Flocalhost%2Fwebapp%2Fwcs%2Fstores%2Fservlet%2Fen%2Faurora&DM_SubstitutionValue3=en_US&DM_SubstitutionValue4=&DM_SubstitutionValue5=&DM_SubstitutionValue6=_8_-2000_1469&storeId=10001&DM_EmsName=HomeBottomRight_Content&continue=1&langId=-1&DM_imagePath=%2Fwcsstore%2FAurora%2F&deleteCartCookie=true&pageGroup=Content&updatePrices=0&DM_SubstitutionName1=%5BstoreName%5D&DM_SubstitutionName2=%5BfullPathHomeURL%5D&DM_SubstitutionName3=%5Blanglocale%5D&DM_SubstitutionName4=%5BproductTotalCount%5D&DM_SubstitutionName5=%5BcontentTotalCount%5D&DM_SubstitutionName6=%5BwidgetSuffix%5D&pageName=HomePage&DM_contextPath=%2Fwebapp%2Fwcs%2Fstores%2Fservlet&fromOrderId=*&responseFormat=json",
                "resourceName": "espot"
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "E-Spot name.",
            "in": "path",
            "name": "name"
          },
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "type": "string",
            "description": "The catalog identifier. If none is specified, the store default catalog is used.",
            "in": "query",
            "name": "catalogId"
          },
          {
            "enum": [
              "JPY",
              "CNY",
              "BRL",
              "EUR",
              "RON",
              "RUB",
              "PLN",
              "USD",
              "KRW",
              "TWD",
              "CAD",
              "GBP"
            ],
            "name": "currency",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The currency code to use for example, currency=USD. If no currency code is specified, the store default currency is used."
          },
          {
            "required": false,
            "type": "string",
            "description": "E-Spot name.",
            "in": "query",
            "name": "name"
          }
        ],
        "tags": [
          "Spot"
        ],
        "description": "Gets an e-Marketing Spot by name.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get e-Marketing Spot by name",
        "operationId": "E-spot-findByName"
      }
    },
    "/wcs/resources/store/{storeId}/segment/{segmentId}/isMember": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "isInCustomeSegment"
              ],
              "description": "Segment membership check.",
              "properties": {
                "isInCustomeSegment": {
                  "type": "boolean",
                  "description": "Is the specified customer in the specified segment."
                }
              }
            },
            "description": "The requested completed successfully.",
            "examples": {
              "application/json": {
                "isInCustomeSegment": true
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "description": "Segment identifier.",
            "in": "path",
            "name": "segmentId"
          },
          {
            "description": "User unique identifier.",
            "format": "int64",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "userId"
          },
          {
            "required": false,
            "type": "string",
            "description": "The user's personalization id. Note : this parameter is ignored if the userId parameter is specified.",
            "in": "query",
            "name": "personalizationId"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          }
        ],
        "tags": [
          "Segment"
        ],
        "description": "Checks if the customer identified by userId or personalizationId is part of given customer segment.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Check segment membership",
        "operationId": "checkIsInSegmentByUserId"
      }
    },
    "/wcs/resources/store/{storeId}/espot": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "required": [
                "searchTerms"
              ],
              "description": "Structure containing multiple search terms.",
              "properties": {
                "searchTerms": {
                  "type": "string",
                  "description": "Encoded list of all the search terms."
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "required": false,
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "in": "query",
            "name": "responseFormat"
          },
          {
            "enum": [
              "allSearchTerms"
            ],
            "name": "q",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The query name."
          }
        ],
        "tags": [
          "Spot"
        ],
        "description": "Gets all search terms that have search rules.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get search terms with search rules",
        "operationId": "E-spot-findAllSearchTerms"
      }
    },
    "/wcs/resources/store/{storeId}/event/evaluate_triggers": {
      "post": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "description": "Empty model. Used as default value when no model is specified."
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          },
          {
            "required": false,
            "in": "body",
            "description": "Marketing evaluate trigger body.",
            "name": "body",
            "schema": {
              "required": [
                "activityId",
                "baseMarketingSpotActivityID",
                "baseMarketingSpotDataType",
                "eMarketingSpotId",
                "experimentResultId",
                "experimentResultTestElementId",
                "personalizationID"
              ],
              "description": "Marketing event trigger. Note : all parameters specified beyond the schema are sent to the marketing event.",
              "properties": {
                "eMarketingSpotId": {
                  "type": "string",
                  "description": "Marketing spot identifier."
                },
                "experimentResultTestElementId": {
                  "type": "string",
                  "description": "Experiment result test element identifier."
                },
                "baseMarketingSpotActivityID": {
                  "type": "string",
                  "description": "Base marketing spot activity identifier."
                },
                "baseMarketingSpotDataType": {
                  "type": "string",
                  "description": "Marketing spot data type. Example : \"MarketingContent\"."
                },
                "categoryId": {
                  "type": "string",
                  "description": "Category identifier."
                },
                "activityId": {
                  "type": "string",
                  "description": "Activity identifier."
                },
                "personalizationID": {
                  "type": "string",
                  "description": "Personalization identifier."
                },
                "experimentResultId": {
                  "type": "string",
                  "description": "Experiment result identifier."
                },
                "searchTerm": {
                  "type": "string",
                  "description": "Search term. Stored in a comma-separated list of search strings."
                },
                "DM_ReqCmd": {
                  "type": "string",
                  "description": "Requested command."
                },
                "productId": {
                  "type": "string",
                  "description": "Product identifier."
                }
              }
            }
          }
        ],
        "tags": [
          "Event"
        ],
        "description": "Evaluates potential triggers passed from the store.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Evaluate triggers",
        "operationId": "Event-evaluateTriggers"
      }
    },
    "/wcs/resources/store/{storeId}/segment": {
      "get": {
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "recordSetCount": {
                  "type": "integer",
                  "format": "int64"
                },
                "recordSetComplete": {
                  "type": "boolean"
                },
                "recordSetStartNumber": {
                  "type": "integer",
                  "format": "int64"
                },
                "MemberGroup": {
                  "items": {
                    "properties": {
                      "usage": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "displayName": {
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string"
                          }
                        }
                      },
                      "description": {
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "type": "array"
                },
                "recordSetTotal": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax."
          },
          "401": {
            "description": "Not authenticated. The user session is not valid."
          },
          "403": {
            "description": "The user is not authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource could not be found."
          },
          "500": {
            "description": "Internal server error. For details, see the server log files."
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "description": "The store identifier.",
            "name": "storeId",
            "in": "path"
          },
          {
            "enum": [
              "byUserId",
              "byPersonalizationId",
              "byName",
              "all"
            ],
            "name": "q",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The query name."
          },
          {
            "description": "The user identifier. Required if the query is set to byUserId.",
            "format": "int64",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "qUserId"
          },
          {
            "required": false,
            "type": "string",
            "description": "The user's personalization identifier. Required if the query is set to byPersonalizationId.",
            "in": "query",
            "name": "qPersonalizationId"
          },
          {
            "required": false,
            "type": "string",
            "description": "The user's name. Required if the query is set to byName.",
            "in": "query",
            "name": "qName"
          },
          {
            "description": "Page number. Valid values are positive integers starting at 1. Use pageNumber with pageSize.",
            "format": "int32",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "pageNumber"
          },
          {
            "description": "Page size. Used to limit the amount of data returned by a query. Valid values are integers starting with 1. Use pageSize with pageNumber.",
            "format": "int32",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "pageSize"
          },
          {
            "enum": [
              "xml",
              "json"
            ],
            "name": "responseFormat",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json."
          }
        ],
        "tags": [
          "Segment"
        ],
        "description": "Gets all customer segments by a specified storeId or get segment by userId or personalizationId or byName.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "summary": "Get segments by user or store ID",
        "operationId": "getCustomerSegments"
      }
    },
    "/wcs/resources/store/{storeId}/user_behavior/{userId}": {
      "delete": {
        "operationId": "deleteUserBehaviorData",
        "summary": "Delete the marketing tracking data for a user for the store.",
        "produces": [
          "application/json",
          "application/xml",
          "application/xhtml+xml",
          "application/atom+xml"
        ],
        "tags": [
          "User Behavior"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The store identifier.",
            "name": "storeId",
            "required": true,
            "type": "string",
            "enum": [
              "0",
              "10001",
              "10501",
              "11001",
              "1"
            ]
          },
          {
            "in": "path",
            "description": "The user ID",
            "name": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "response": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Some of the inputs provided to the request aren't valid."
          },
          "401": {
            "description": "Not authenticated. The user session isn't valid."
          },
          "403": {
            "description": "The user isn't authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource couldn't be found."
          },
          "500": {
            "description": "Internal server error. Additional details will be contained on the server logs."
          }
        }
      }
    },
    "/wcs/resources/store/{storeId}/user_behavior": {
      "get": {
        "operationId": "findUserBehaviors",
        "summary": "Get the marketing tracking data for a user for the store.",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": [
          "User Behavior"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The store identifier.",
            "name": "storeId",
            "required": true,
            "type": "string",
            "enum": [
              "0",
              "10001",
              "10501",
              "11001",
              "1"
            ]
          },
          {
            "in": "query",
            "description": "The user ID",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "schema": {
              "properties": {
                "behaviorList": {
                  "items": {
                    "description": "",
                    "properties": {
                      "data": {
                        "type": "string",
                        "description": "The data value"
                      },
                      "time": {
                        "type": "string",
                        "description": "The time which the behavior was recorded"
                      },
                      "elementTemplateName": {
                        "type": "string",
                        "description": "The name of the marketing element template"
                      }
                    }
                  },
                  "type": "array",
                  "description": "List of marketing tracking data for the storefront user"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Some of the inputs provided to the request aren't valid."
          },
          "401": {
            "description": "Not authenticated. The user session isn't valid."
          },
          "403": {
            "description": "The user isn't authorized to perform the specified request."
          },
          "404": {
            "description": "The specified resource couldn't be found."
          },
          "500": {
            "description": "Internal server error. Additional details will be contained on the server logs."
          }
        }
      }
    },
    "/rest/admin/v2/price-rules": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is 5, the records that returned begin with the sixth record that matches the query parameters. If the offset is 0, the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/recordSetStartNumber"
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/maxItems"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of price rules.",
              "properties": {
                "count": {
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "description": "A price rule.",
                    "properties": {
                      "createdDate": {
                        "description": "Created time.",
                        "format": "date-time",
                        "type": "string",
                        "x-entity-path": "CreatedTime"
                      },
                      "dependent": {
                        "description": "Indicate if the price rule is independent or not.",
                        "type": "boolean",
                        "x-entity-path": "dependent"
                      },
                      "description": {
                        "description": "A description of the price rule, suitable for display to business users.",
                        "type": "string",
                        "x-entity-path": "description"
                      },
                      "elements": {
                        "items": {
                          "description": "A price rule element.",
                          "properties": {
                            "attributes": {
                              "description": "The attributes of the price rule element",
                              "items": {
                                "description": "A element attribute.",
                                "properties": {
                                  "name": {
                                    "description": "The name of the element attribute",
                                    "type": "string",
                                    "x-entity-path": "name"
                                  },
                                  "value": {
                                    "description": "The value of the element attribute",
                                    "type": "string",
                                    "x-entity-path": "value"
                                  }
                                },
                                "type": "object",
                                "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                              },
                              "type": "array",
                              "x-entity-path": "elementAttribute"
                            },
                            "name": {
                              "description": "The name of the price rule element",
                              "type": "string",
                              "x-entity-path": "elementIdentifier/name"
                            },
                            "parentElementName": {
                              "description": "The name of the price rule element",
                              "type": "string",
                              "x-entity-path": "parentElementIdentifier/name"
                            },
                            "sequence": {
                              "description": "The sequence of this element under its parent element.",
                              "format": "double",
                              "type": "number",
                              "x-entity-path": "elementSequence"
                            },
                            "templateGroup": {
                              "description": "The name of the element template",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                            },
                            "templateId": {
                              "description": "The element template ID",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/uniqueID"
                            },
                            "templateName": {
                              "description": "The name of the element template",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
                        },
                        "type": "array",
                        "x-entity-path": "priceRuleElement"
                      },
                      "format": {
                        "description": "A description of the price rule, suitable for display to business users.",
                        "type": "string",
                        "x-entity-path": "format"
                      },
                      "id": {
                        "description": "The price rule ID",
                        "type": "string",
                        "x-entity-path": "priceRuleIdentifier/uniqueID"
                      },
                      "name": {
                        "description": "The name of the price rule",
                        "type": "string",
                        "x-entity-path": "priceRuleIdentifier/externalIdentifier/name"
                      },
                      "state": {
                        "description": "The state of the price rule.",
                        "type": "string",
                        "x-entity-path": "state"
                      },
                      "storeId": {
                        "description": "The unique numeric ID for identifying the store.",
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "priceRuleIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                      },
                      "updatedDate": {
                        "description": "Last updated time.",
                        "format": "date-time",
                        "type": "string",
                        "x-entity-path": "lastUpdateTime"
                      },
                      "version": {
                        "description": "The version of the price rule.",
                        "format": "float",
                        "type": "number",
                        "x-entity-path": "version"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/priceRule"
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "getPriceRules",
        "summary": "Get a collection of price rules in a store.",
        "x-expression-template": "{_wcf.ap=IBM_Admin_Summary}/PriceRule",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "getPriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.GetPriceRuleType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/priceRule[1]/priceRuleIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A price rule.",
              "properties": {
                "createdDate": {
                  "description": "Created time.",
                  "format": "date-time",
                  "type": "string",
                  "x-entity-path": "CreatedTime"
                },
                "dependent": {
                  "description": "Indicate if the price rule is independent or not.",
                  "type": "boolean",
                  "x-entity-path": "dependent"
                },
                "description": {
                  "description": "A description of the price rule, suitable for display to business users.",
                  "type": "string",
                  "x-entity-path": "description"
                },
                "elements": {
                  "items": {
                    "description": "A price rule element.",
                    "properties": {
                      "attributes": {
                        "description": "The attributes of the price rule element",
                        "items": {
                          "description": "A element attribute.",
                          "properties": {
                            "name": {
                              "description": "The name of the element attribute",
                              "type": "string",
                              "x-entity-path": "name"
                            },
                            "value": {
                              "description": "The value of the element attribute",
                              "type": "string",
                              "x-entity-path": "value"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                        },
                        "type": "array",
                        "x-entity-path": "elementAttribute"
                      },
                      "name": {
                        "description": "The name of the price rule element",
                        "type": "string",
                        "x-entity-path": "elementIdentifier/name"
                      },
                      "parentElementName": {
                        "description": "The name of the price rule element",
                        "type": "string",
                        "x-entity-path": "parentElementIdentifier/name"
                      },
                      "sequence": {
                        "description": "The sequence of this element under its parent element.",
                        "format": "double",
                        "type": "number",
                        "x-entity-path": "elementSequence"
                      },
                      "templateGroup": {
                        "description": "The name of the element template",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                      },
                      "templateId": {
                        "description": "The element template ID",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/uniqueID"
                      },
                      "templateName": {
                        "description": "The name of the element template",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
                  },
                  "type": "array",
                  "x-entity-path": "priceRuleElement"
                },
                "format": {
                  "description": "A description of the price rule, suitable for display to business users.",
                  "type": "string",
                  "x-entity-path": "format"
                },
                "id": {
                  "description": "The price rule ID",
                  "type": "string",
                  "x-entity-path": "priceRuleIdentifier/uniqueID"
                },
                "name": {
                  "description": "The name of the price rule",
                  "type": "string",
                  "x-entity-path": "priceRuleIdentifier/externalIdentifier/name"
                },
                "state": {
                  "description": "The state of the price rule.",
                  "type": "string",
                  "x-entity-path": "state"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "priceRuleIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                },
                "updatedDate": {
                  "description": "Last updated time.",
                  "format": "date-time",
                  "type": "string",
                  "x-entity-path": "lastUpdateTime"
                },
                "version": {
                  "description": "The version of the price rule.",
                  "format": "float",
                  "type": "number",
                  "x-entity-path": "version"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleType"
            },
            "x-entity-path": "dataArea/priceRule[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of the price rule.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/priceRule[1]/priceRuleIdentifier/uniqueID"
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "createPriceRule",
        "summary": "Create a price rule.",
        "x-action-code": "Create",
        "x-expression-template": "/PriceRule[1]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "processPriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.ProcessPriceRuleType"
      }
    },
    "/rest/admin/v2/price-rules/by-name-or-description": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The store ID.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The name pattern to search.",
            "in": "query",
            "name": "searchText",
            "required": true,
            "type": "string"
          },
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is 5, the records that returned begin with the sixth record that matches the query parameters. If the offset is 0, the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/recordSetStartNumber"
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/maxItems"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of price rules.",
              "properties": {
                "count": {
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "description": "A price rule.",
                    "properties": {
                      "createdDate": {
                        "description": "Created time.",
                        "format": "date-time",
                        "type": "string",
                        "x-entity-path": "CreatedTime"
                      },
                      "dependent": {
                        "description": "Indicate if the price rule is independent or not.",
                        "type": "boolean",
                        "x-entity-path": "dependent"
                      },
                      "description": {
                        "description": "A description of the price rule, suitable for display to business users.",
                        "type": "string",
                        "x-entity-path": "description"
                      },
                      "elements": {
                        "items": {
                          "description": "A price rule element.",
                          "properties": {
                            "attributes": {
                              "description": "The attributes of the price rule element",
                              "items": {
                                "description": "A element attribute.",
                                "properties": {
                                  "name": {
                                    "description": "The name of the element attribute",
                                    "type": "string",
                                    "x-entity-path": "name"
                                  },
                                  "value": {
                                    "description": "The value of the element attribute",
                                    "type": "string",
                                    "x-entity-path": "value"
                                  }
                                },
                                "type": "object",
                                "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                              },
                              "type": "array",
                              "x-entity-path": "elementAttribute"
                            },
                            "name": {
                              "description": "The name of the price rule element",
                              "type": "string",
                              "x-entity-path": "elementIdentifier/name"
                            },
                            "parentElementName": {
                              "description": "The name of the price rule element",
                              "type": "string",
                              "x-entity-path": "parentElementIdentifier/name"
                            },
                            "sequence": {
                              "description": "The sequence of this element under its parent element.",
                              "format": "double",
                              "type": "number",
                              "x-entity-path": "elementSequence"
                            },
                            "templateGroup": {
                              "description": "The name of the element template",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                            },
                            "templateId": {
                              "description": "The element template ID",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/uniqueID"
                            },
                            "templateName": {
                              "description": "The name of the element template",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
                        },
                        "type": "array",
                        "x-entity-path": "priceRuleElement"
                      },
                      "format": {
                        "description": "A description of the price rule, suitable for display to business users.",
                        "type": "string",
                        "x-entity-path": "format"
                      },
                      "id": {
                        "description": "The price rule ID",
                        "type": "string",
                        "x-entity-path": "priceRuleIdentifier/uniqueID"
                      },
                      "name": {
                        "description": "The name of the price rule",
                        "type": "string",
                        "x-entity-path": "priceRuleIdentifier/externalIdentifier/name"
                      },
                      "state": {
                        "description": "The state of the price rule.",
                        "type": "string",
                        "x-entity-path": "state"
                      },
                      "storeId": {
                        "description": "The unique numeric ID for identifying the store.",
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "priceRuleIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                      },
                      "updatedDate": {
                        "description": "Last updated time.",
                        "format": "date-time",
                        "type": "string",
                        "x-entity-path": "lastUpdateTime"
                      },
                      "version": {
                        "description": "The version of the price rule.",
                        "format": "float",
                        "type": "number",
                        "x-entity-path": "version"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/priceRule"
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "getPriceRuleByNameOrDescription",
        "summary": "Search price rules by name or description.",
        "x-expression-builder-class": "com.ibm.commerce.foundation.internal.client.taglib.util.SearchExpressionBuilder",
        "x-expression-builder-method": "formatExpression",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "getPriceRule",
        "x-parameters": {
          "accessProfile": "IBM_Admin_Summary",
          "template": "/PriceRule[search(PriceRuleIdentifier/ExternalIdentifier/Name='$searchText$' or Description='$searchText$')]"
        },
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.GetPriceRuleType"
      }
    },
    "/rest/admin/v2/price-rules/by-price-constant-id/{priceConstantId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The price constant ID.",
            "in": "path",
            "name": "priceConstantId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is 5, the records that returned begin with the sixth record that matches the query parameters. If the offset is 0, the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/recordSetStartNumber"
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/maxItems"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of price rules.",
              "properties": {
                "count": {
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "description": "A price rule.",
                    "properties": {
                      "createdDate": {
                        "description": "Created time.",
                        "format": "date-time",
                        "type": "string",
                        "x-entity-path": "CreatedTime"
                      },
                      "dependent": {
                        "description": "Indicate if the price rule is independent or not.",
                        "type": "boolean",
                        "x-entity-path": "dependent"
                      },
                      "description": {
                        "description": "A description of the price rule, suitable for display to business users.",
                        "type": "string",
                        "x-entity-path": "description"
                      },
                      "elements": {
                        "items": {
                          "description": "A price rule element.",
                          "properties": {
                            "attributes": {
                              "description": "The attributes of the price rule element",
                              "items": {
                                "description": "A element attribute.",
                                "properties": {
                                  "name": {
                                    "description": "The name of the element attribute",
                                    "type": "string",
                                    "x-entity-path": "name"
                                  },
                                  "value": {
                                    "description": "The value of the element attribute",
                                    "type": "string",
                                    "x-entity-path": "value"
                                  }
                                },
                                "type": "object",
                                "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                              },
                              "type": "array",
                              "x-entity-path": "elementAttribute"
                            },
                            "name": {
                              "description": "The name of the price rule element",
                              "type": "string",
                              "x-entity-path": "elementIdentifier/name"
                            },
                            "parentElementName": {
                              "description": "The name of the price rule element",
                              "type": "string",
                              "x-entity-path": "parentElementIdentifier/name"
                            },
                            "sequence": {
                              "description": "The sequence of this element under its parent element.",
                              "format": "double",
                              "type": "number",
                              "x-entity-path": "elementSequence"
                            },
                            "templateGroup": {
                              "description": "The name of the element template",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                            },
                            "templateId": {
                              "description": "The element template ID",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/uniqueID"
                            },
                            "templateName": {
                              "description": "The name of the element template",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
                        },
                        "type": "array",
                        "x-entity-path": "priceRuleElement"
                      },
                      "format": {
                        "description": "A description of the price rule, suitable for display to business users.",
                        "type": "string",
                        "x-entity-path": "format"
                      },
                      "id": {
                        "description": "The price rule ID",
                        "type": "string",
                        "x-entity-path": "priceRuleIdentifier/uniqueID"
                      },
                      "name": {
                        "description": "The name of the price rule",
                        "type": "string",
                        "x-entity-path": "priceRuleIdentifier/externalIdentifier/name"
                      },
                      "state": {
                        "description": "The state of the price rule.",
                        "type": "string",
                        "x-entity-path": "state"
                      },
                      "storeId": {
                        "description": "The unique numeric ID for identifying the store.",
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "priceRuleIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                      },
                      "updatedDate": {
                        "description": "Last updated time.",
                        "format": "date-time",
                        "type": "string",
                        "x-entity-path": "lastUpdateTime"
                      },
                      "version": {
                        "description": "The version of the price rule.",
                        "format": "float",
                        "type": "number",
                        "x-entity-path": "version"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/priceRule",
            "x-support-paging": false
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "getPriceRulesByPriceConstant",
        "summary": "Get all price rules which reference the price constant.",
        "x-expression-template": "{_wcf.ap=IBM_Admin_Details}/PriceRule[PriceRuleElement[ElementTemplateIdentifier[UniqueID='8'] and ElementAttribute[(Name='inputOperandReferenceId' or Name='comparisonOperandReferenceId') and Value='{priceConstantId}']]]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "getPriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.GetPriceRuleType"
      }
    },
    "/rest/admin/v2/price-rules/by-price-equation-id/{priceEquationId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The price equation ID.",
            "in": "path",
            "name": "priceEquationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is 5, the records that returned begin with the sixth record that matches the query parameters. If the offset is 0, the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/recordSetStartNumber"
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/maxItems"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of price rules.",
              "properties": {
                "count": {
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "description": "A price rule.",
                    "properties": {
                      "createdDate": {
                        "description": "Created time.",
                        "format": "date-time",
                        "type": "string",
                        "x-entity-path": "CreatedTime"
                      },
                      "dependent": {
                        "description": "Indicate if the price rule is independent or not.",
                        "type": "boolean",
                        "x-entity-path": "dependent"
                      },
                      "description": {
                        "description": "A description of the price rule, suitable for display to business users.",
                        "type": "string",
                        "x-entity-path": "description"
                      },
                      "elements": {
                        "items": {
                          "description": "A price rule element.",
                          "properties": {
                            "attributes": {
                              "description": "The attributes of the price rule element",
                              "items": {
                                "description": "A element attribute.",
                                "properties": {
                                  "name": {
                                    "description": "The name of the element attribute",
                                    "type": "string",
                                    "x-entity-path": "name"
                                  },
                                  "value": {
                                    "description": "The value of the element attribute",
                                    "type": "string",
                                    "x-entity-path": "value"
                                  }
                                },
                                "type": "object",
                                "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                              },
                              "type": "array",
                              "x-entity-path": "elementAttribute"
                            },
                            "name": {
                              "description": "The name of the price rule element",
                              "type": "string",
                              "x-entity-path": "elementIdentifier/name"
                            },
                            "parentElementName": {
                              "description": "The name of the price rule element",
                              "type": "string",
                              "x-entity-path": "parentElementIdentifier/name"
                            },
                            "sequence": {
                              "description": "The sequence of this element under its parent element.",
                              "format": "double",
                              "type": "number",
                              "x-entity-path": "elementSequence"
                            },
                            "templateGroup": {
                              "description": "The name of the element template",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                            },
                            "templateId": {
                              "description": "The element template ID",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/uniqueID"
                            },
                            "templateName": {
                              "description": "The name of the element template",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
                        },
                        "type": "array",
                        "x-entity-path": "priceRuleElement"
                      },
                      "format": {
                        "description": "A description of the price rule, suitable for display to business users.",
                        "type": "string",
                        "x-entity-path": "format"
                      },
                      "id": {
                        "description": "The price rule ID",
                        "type": "string",
                        "x-entity-path": "priceRuleIdentifier/uniqueID"
                      },
                      "name": {
                        "description": "The name of the price rule",
                        "type": "string",
                        "x-entity-path": "priceRuleIdentifier/externalIdentifier/name"
                      },
                      "state": {
                        "description": "The state of the price rule.",
                        "type": "string",
                        "x-entity-path": "state"
                      },
                      "storeId": {
                        "description": "The unique numeric ID for identifying the store.",
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "priceRuleIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                      },
                      "updatedDate": {
                        "description": "Last updated time.",
                        "format": "date-time",
                        "type": "string",
                        "x-entity-path": "lastUpdateTime"
                      },
                      "version": {
                        "description": "The version of the price rule.",
                        "format": "float",
                        "type": "number",
                        "x-entity-path": "version"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/priceRule",
            "x-support-paging": false
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "getPriceRulesByPriceEquation",
        "summary": "Get all price rules which reference the price equation.",
        "x-expression-template": "{_wcf.ap=IBM_Admin_Details}/PriceRule[PriceRuleElement[ElementTemplateIdentifier[UniqueID='4'] and ElementAttribute[(Name='priceEquationId') and Value='10001'] or ElementTemplateIdentifier[UniqueID='8'] and ElementAttribute[(Name='inputOperandReferenceId' or Name='comparisonOperandReferenceId') and Value='{priceEquationId}']]]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "getPriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.GetPriceRuleType"
      }
    },
    "/rest/admin/v2/price-rules/by-price-list-id/{priceListId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The price list ID.",
            "in": "path",
            "name": "priceListId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is 5, the records that returned begin with the sixth record that matches the query parameters. If the offset is 0, the records that are returned begin with the first record that matches the query parameters.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/recordSetStartNumber"
          },
          {
            "description": "The maximum number of records to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/maxItems"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A collection of price rules.",
              "properties": {
                "count": {
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "description": "A price rule.",
                    "properties": {
                      "createdDate": {
                        "description": "Created time.",
                        "format": "date-time",
                        "type": "string",
                        "x-entity-path": "CreatedTime"
                      },
                      "dependent": {
                        "description": "Indicate if the price rule is independent or not.",
                        "type": "boolean",
                        "x-entity-path": "dependent"
                      },
                      "description": {
                        "description": "A description of the price rule, suitable for display to business users.",
                        "type": "string",
                        "x-entity-path": "description"
                      },
                      "elements": {
                        "items": {
                          "description": "A price rule element.",
                          "properties": {
                            "attributes": {
                              "description": "The attributes of the price rule element",
                              "items": {
                                "description": "A element attribute.",
                                "properties": {
                                  "name": {
                                    "description": "The name of the element attribute",
                                    "type": "string",
                                    "x-entity-path": "name"
                                  },
                                  "value": {
                                    "description": "The value of the element attribute",
                                    "type": "string",
                                    "x-entity-path": "value"
                                  }
                                },
                                "type": "object",
                                "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                              },
                              "type": "array",
                              "x-entity-path": "elementAttribute"
                            },
                            "name": {
                              "description": "The name of the price rule element",
                              "type": "string",
                              "x-entity-path": "elementIdentifier/name"
                            },
                            "parentElementName": {
                              "description": "The name of the price rule element",
                              "type": "string",
                              "x-entity-path": "parentElementIdentifier/name"
                            },
                            "sequence": {
                              "description": "The sequence of this element under its parent element.",
                              "format": "double",
                              "type": "number",
                              "x-entity-path": "elementSequence"
                            },
                            "templateGroup": {
                              "description": "The name of the element template",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                            },
                            "templateId": {
                              "description": "The element template ID",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/uniqueID"
                            },
                            "templateName": {
                              "description": "The name of the element template",
                              "type": "string",
                              "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
                        },
                        "type": "array",
                        "x-entity-path": "priceRuleElement"
                      },
                      "format": {
                        "description": "A description of the price rule, suitable for display to business users.",
                        "type": "string",
                        "x-entity-path": "format"
                      },
                      "id": {
                        "description": "The price rule ID",
                        "type": "string",
                        "x-entity-path": "priceRuleIdentifier/uniqueID"
                      },
                      "name": {
                        "description": "The name of the price rule",
                        "type": "string",
                        "x-entity-path": "priceRuleIdentifier/externalIdentifier/name"
                      },
                      "state": {
                        "description": "The state of the price rule.",
                        "type": "string",
                        "x-entity-path": "state"
                      },
                      "storeId": {
                        "description": "The unique numeric ID for identifying the store.",
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "priceRuleIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                      },
                      "updatedDate": {
                        "description": "Last updated time.",
                        "format": "date-time",
                        "type": "string",
                        "x-entity-path": "lastUpdateTime"
                      },
                      "version": {
                        "description": "The version of the price rule.",
                        "format": "float",
                        "type": "number",
                        "x-entity-path": "version"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/priceRule",
            "x-support-paging": false
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "getPriceRulesByPriceList",
        "summary": "Get all price rules which reference the price list.",
        "x-expression-template": "{_wcf.ap=IBM_Admin_Details}/PriceRule[PriceRuleElement[ElementTemplateIdentifier[UniqueID='2'] and ElementAttribute[(Name='priceListId') and Value='{priceListId}'] or ElementTemplateIdentifier[UniqueID='11'] and ElementAttribute[(Name='priceListId') and Value='{priceListId}'] or ElementTemplateIdentifier[UniqueID='8'] and ElementAttribute[(Name='inputOperandReferenceId' or Name='comparisonOperandReferenceId') and Value='{priceListId}']]]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "getPriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.GetPriceRuleType"
      }
    },
    "/rest/admin/v2/price-rules/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the price rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/priceRule[1]/priceRuleIdentifier/uniqueID"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "deletePriceRule",
        "summary": "Deletes a price rule.",
        "x-action-code": "Delete",
        "x-expression-template": "/PriceRule[1]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "processPriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.ProcessPriceRuleType"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the price rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "A price rule.",
              "properties": {
                "createdDate": {
                  "description": "Created time.",
                  "format": "date-time",
                  "type": "string",
                  "x-entity-path": "CreatedTime"
                },
                "dependent": {
                  "description": "Indicate if the price rule is independent or not.",
                  "type": "boolean",
                  "x-entity-path": "dependent"
                },
                "description": {
                  "description": "A description of the price rule, suitable for display to business users.",
                  "type": "string",
                  "x-entity-path": "description"
                },
                "elements": {
                  "items": {
                    "description": "A price rule element.",
                    "properties": {
                      "attributes": {
                        "description": "The attributes of the price rule element",
                        "items": {
                          "description": "A element attribute.",
                          "properties": {
                            "name": {
                              "description": "The name of the element attribute",
                              "type": "string",
                              "x-entity-path": "name"
                            },
                            "value": {
                              "description": "The value of the element attribute",
                              "type": "string",
                              "x-entity-path": "value"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                        },
                        "type": "array",
                        "x-entity-path": "elementAttribute"
                      },
                      "name": {
                        "description": "The name of the price rule element",
                        "type": "string",
                        "x-entity-path": "elementIdentifier/name"
                      },
                      "parentElementName": {
                        "description": "The name of the price rule element",
                        "type": "string",
                        "x-entity-path": "parentElementIdentifier/name"
                      },
                      "sequence": {
                        "description": "The sequence of this element under its parent element.",
                        "format": "double",
                        "type": "number",
                        "x-entity-path": "elementSequence"
                      },
                      "templateGroup": {
                        "description": "The name of the element template",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                      },
                      "templateId": {
                        "description": "The element template ID",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/uniqueID"
                      },
                      "templateName": {
                        "description": "The name of the element template",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
                  },
                  "type": "array",
                  "x-entity-path": "priceRuleElement"
                },
                "format": {
                  "description": "A description of the price rule, suitable for display to business users.",
                  "type": "string",
                  "x-entity-path": "format"
                },
                "id": {
                  "description": "The price rule ID",
                  "type": "string",
                  "x-entity-path": "priceRuleIdentifier/uniqueID"
                },
                "name": {
                  "description": "The name of the price rule",
                  "type": "string",
                  "x-entity-path": "priceRuleIdentifier/externalIdentifier/name"
                },
                "state": {
                  "description": "The state of the price rule.",
                  "type": "string",
                  "x-entity-path": "state"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "priceRuleIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                },
                "updatedDate": {
                  "description": "Last updated time.",
                  "format": "date-time",
                  "type": "string",
                  "x-entity-path": "lastUpdateTime"
                },
                "version": {
                  "description": "The version of the price rule.",
                  "format": "float",
                  "type": "number",
                  "x-entity-path": "version"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleType"
            },
            "x-entity-path": "dataArea/priceRule[1]"
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "getPriceRuleById",
        "summary": "Get a price rule.",
        "x-expression-template": "{_wcf.ap='IBM_Admin_Details'}/PriceRule/PriceRuleIdentifier[(UniqueID='{id}')]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "getPriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.GetPriceRuleType"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the price rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/priceRule[1]/priceRuleIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A price rule.",
              "properties": {
                "createdDate": {
                  "description": "Created time.",
                  "format": "date-time",
                  "type": "string",
                  "x-entity-path": "CreatedTime"
                },
                "dependent": {
                  "description": "Indicate if the price rule is independent or not.",
                  "type": "boolean",
                  "x-entity-path": "dependent"
                },
                "description": {
                  "description": "A description of the price rule, suitable for display to business users.",
                  "type": "string",
                  "x-entity-path": "description"
                },
                "elements": {
                  "items": {
                    "description": "A price rule element.",
                    "properties": {
                      "attributes": {
                        "description": "The attributes of the price rule element",
                        "items": {
                          "description": "A element attribute.",
                          "properties": {
                            "name": {
                              "description": "The name of the element attribute",
                              "type": "string",
                              "x-entity-path": "name"
                            },
                            "value": {
                              "description": "The value of the element attribute",
                              "type": "string",
                              "x-entity-path": "value"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                        },
                        "type": "array",
                        "x-entity-path": "elementAttribute"
                      },
                      "name": {
                        "description": "The name of the price rule element",
                        "type": "string",
                        "x-entity-path": "elementIdentifier/name"
                      },
                      "parentElementName": {
                        "description": "The name of the price rule element",
                        "type": "string",
                        "x-entity-path": "parentElementIdentifier/name"
                      },
                      "sequence": {
                        "description": "The sequence of this element under its parent element.",
                        "format": "double",
                        "type": "number",
                        "x-entity-path": "elementSequence"
                      },
                      "templateGroup": {
                        "description": "The name of the element template",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                      },
                      "templateId": {
                        "description": "The element template ID",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/uniqueID"
                      },
                      "templateName": {
                        "description": "The name of the element template",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
                  },
                  "type": "array",
                  "x-entity-path": "priceRuleElement"
                },
                "format": {
                  "description": "A description of the price rule, suitable for display to business users.",
                  "type": "string",
                  "x-entity-path": "format"
                },
                "id": {
                  "description": "The price rule ID",
                  "type": "string",
                  "x-entity-path": "priceRuleIdentifier/uniqueID"
                },
                "name": {
                  "description": "The name of the price rule",
                  "type": "string",
                  "x-entity-path": "priceRuleIdentifier/externalIdentifier/name"
                },
                "state": {
                  "description": "The state of the price rule.",
                  "type": "string",
                  "x-entity-path": "state"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "priceRuleIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                },
                "updatedDate": {
                  "description": "Last updated time.",
                  "format": "date-time",
                  "type": "string",
                  "x-entity-path": "lastUpdateTime"
                },
                "version": {
                  "description": "The version of the price rule.",
                  "format": "float",
                  "type": "number",
                  "x-entity-path": "version"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleType"
            },
            "x-entity-path": "dataArea/priceRule[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "updatePriceRule",
        "summary": "Update a price rule.",
        "x-action-code": "Change",
        "x-expression-template": "/PriceRule[1]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "changePriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.ChangePriceRuleType"
      }
    },
    "/rest/admin/v2/price-rules/{id}/elements": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the price rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": null,
            "schema": {
              "description": "A collection of price rule elements.",
              "properties": {
                "count": {
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "description": "A price rule element.",
                    "properties": {
                      "attributes": {
                        "description": "The attributes of the price rule element",
                        "items": {
                          "description": "A element attribute.",
                          "properties": {
                            "name": {
                              "description": "The name of the element attribute",
                              "type": "string",
                              "x-entity-path": "name"
                            },
                            "value": {
                              "description": "The value of the element attribute",
                              "type": "string",
                              "x-entity-path": "value"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                        },
                        "type": "array",
                        "x-entity-path": "elementAttribute"
                      },
                      "name": {
                        "description": "The name of the price rule element",
                        "type": "string",
                        "x-entity-path": "elementIdentifier/name"
                      },
                      "parentElementName": {
                        "description": "The name of the price rule element",
                        "type": "string",
                        "x-entity-path": "parentElementIdentifier/name"
                      },
                      "sequence": {
                        "description": "The sequence of this element under its parent element.",
                        "format": "double",
                        "type": "number",
                        "x-entity-path": "elementSequence"
                      },
                      "templateGroup": {
                        "description": "The name of the element template",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                      },
                      "templateId": {
                        "description": "The element template ID",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/uniqueID"
                      },
                      "templateName": {
                        "description": "The name of the element template",
                        "type": "string",
                        "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/priceRule[1]/priceRuleElement",
            "x-support-paging": false
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "getPriceRuleElements",
        "summary": "Get a price rule with price rule elements.",
        "x-expression-template": "{_wcf.ap='IBM_Admin_PriceRuleElementsDetails'}/PriceRule/PriceRuleIdentifier[(UniqueID='{id}')]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "getPriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.GetPriceRuleType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the price rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/priceRule[1]/priceRuleIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A price rule element.",
              "properties": {
                "attributes": {
                  "description": "The attributes of the price rule element",
                  "items": {
                    "description": "A element attribute.",
                    "properties": {
                      "name": {
                        "description": "The name of the element attribute",
                        "type": "string",
                        "x-entity-path": "name"
                      },
                      "value": {
                        "description": "The value of the element attribute",
                        "type": "string",
                        "x-entity-path": "value"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                  },
                  "type": "array",
                  "x-entity-path": "elementAttribute"
                },
                "name": {
                  "description": "The name of the price rule element",
                  "type": "string",
                  "x-entity-path": "elementIdentifier/name"
                },
                "parentElementName": {
                  "description": "The name of the price rule element",
                  "type": "string",
                  "x-entity-path": "parentElementIdentifier/name"
                },
                "sequence": {
                  "description": "The sequence of this element under its parent element.",
                  "format": "double",
                  "type": "number",
                  "x-entity-path": "elementSequence"
                },
                "templateGroup": {
                  "description": "The name of the element template",
                  "type": "string",
                  "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                },
                "templateId": {
                  "description": "The element template ID",
                  "type": "string",
                  "x-entity-path": "elementTemplateIdentifier/uniqueID"
                },
                "templateName": {
                  "description": "The name of the element template",
                  "type": "string",
                  "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
            },
            "x-entity-path": "dataArea/priceRule[1]/priceRuleElement[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of the price rule element.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/priceRule[1]/priceRuleElement[1]/elementIdentifier/name"
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "createPriceRuleElement",
        "summary": "Add a price rule element to a price rule.",
        "x-action-code": "Add",
        "x-expression-template": "/PriceRule[1]/PriceRuleElement[1]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "changePriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.ChangePriceRuleType",
        "x-request-verb": "change",
        "x-response-verb": "respond"
      }
    },
    "/rest/admin/v2/price-rules/{id}/elements/{name}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the price rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/priceRule[1]/priceRuleIdentifier/uniqueID"
          },
          {
            "description": "The name of the price rule element.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/priceRule[1]/priceRuleElement[1]/elementIdentifier/name"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "deletePriceRuleElement",
        "summary": "Deletes a price rule element.",
        "x-action-code": "Delete",
        "x-expression-template": "/PriceRule[1]/PriceRuleElement[1]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "changePriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.ChangePriceRuleType",
        "x-request-verb": "change",
        "x-response-verb": "respond"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the price rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/priceRule[1]/priceRuleIdentifier/uniqueID"
          },
          {
            "description": "The name of the price rule element.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/priceRule[1]/priceRuleElement/elementIdentifier/name"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A price rule element.",
              "properties": {
                "attributes": {
                  "description": "The attributes of the price rule element",
                  "items": {
                    "description": "A element attribute.",
                    "properties": {
                      "name": {
                        "description": "The name of the element attribute",
                        "type": "string",
                        "x-entity-path": "name"
                      },
                      "value": {
                        "description": "The value of the element attribute",
                        "type": "string",
                        "x-entity-path": "value"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.FlowElementAttributeType"
                  },
                  "type": "array",
                  "x-entity-path": "elementAttribute"
                },
                "name": {
                  "description": "The name of the price rule element",
                  "type": "string",
                  "x-entity-path": "elementIdentifier/name"
                },
                "parentElementName": {
                  "description": "The name of the price rule element",
                  "type": "string",
                  "x-entity-path": "parentElementIdentifier/name"
                },
                "sequence": {
                  "description": "The sequence of this element under its parent element.",
                  "format": "double",
                  "type": "number",
                  "x-entity-path": "elementSequence"
                },
                "templateGroup": {
                  "description": "The name of the element template",
                  "type": "string",
                  "x-entity-path": "elementTemplateIdentifier/externalIdentifier/priceRuleElementTemplateGroup"
                },
                "templateId": {
                  "description": "The element template ID",
                  "type": "string",
                  "x-entity-path": "elementTemplateIdentifier/uniqueID"
                },
                "templateName": {
                  "description": "The name of the element template",
                  "type": "string",
                  "x-entity-path": "elementTemplateIdentifier/externalIdentifier/name"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.price.facade.datatypes.PriceRuleElementType"
            },
            "x-entity-path": "dataArea/priceRule[1]/priceRuleElement[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Price Rules"
        ],
        "operationId": "updatePriceRuleElement",
        "summary": "Update a price rule element.",
        "x-action-code": "Change",
        "x-expression-template": "/PriceRule[1]/PriceRuleElement[1]",
        "x-facade-client-class": "com.ibm.commerce.price.facade.client.PriceFacadeClient",
        "x-facade-client-method": "changePriceRule",
        "x-request-bod-class": "com.ibm.commerce.price.facade.datatypes.ChangePriceRuleType"
      }
    },
    "/rest/admin/v2/catalog-filters": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The offset.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/recordSetStartNumber"
          },
          {
            "description": "The limit.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-entity-path": "dataArea/get/maxItems"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "The collection of catalog filters.",
              "properties": {
                "count": {
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "properties": {
                      "catalogId": {
                        "type": "string",
                        "x-entity-path": "catalogFilterIdentifier/externalIdentifier/catalogIdentifier/uniqueID"
                      },
                      "description": {
                        "example": "Optionally required when creating a catalog filter.",
                        "type": "string",
                        "x-entity-path": "description[1]/value"
                      },
                      "id": {
                        "type": "string",
                        "x-entity-path": "catalogFilterIdentifier/uniqueID"
                      },
                      "name": {
                        "example": "Required when creating a catalog filter",
                        "type": "string",
                        "x-entity-path": "catalogFilterIdentifier/externalIdentifier/identifier"
                      },
                      "storeId": {
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/catalogFilter"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "getCatalogFilters",
        "summary": "Get a collection of catalog filter.",
        "x-expression-template": "{_wcf.ap='IBM_CatalogFilter_details';_wcf.dataLanguageIds='{}'}/CatalogFilter",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "getCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.GetCatalogFilterType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "catalogId": {
                  "type": "string",
                  "x-entity-path": "catalogFilterIdentifier/externalIdentifier/catalogIdentifier/uniqueID"
                },
                "description": {
                  "example": "Optionally required when creating a catalog filter.",
                  "type": "string",
                  "x-entity-path": "description[1]/value"
                },
                "id": {
                  "type": "string",
                  "x-entity-path": "catalogFilterIdentifier/uniqueID"
                },
                "name": {
                  "example": "Required when creating a catalog filter",
                  "type": "string",
                  "x-entity-path": "catalogFilterIdentifier/externalIdentifier/identifier"
                },
                "storeId": {
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of catalog filter.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "createCatalogFilters",
        "summary": "Create a catalog filter.",
        "x-action-code": "Create",
        "x-expression-template": "/CatalogFilter[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "processCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ProcessCatalogFilterType"
      }
    },
    "/rest/admin/v2/catalog-filters/by-name": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The catalog filter name.",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "description": "The collection of catalog filters.",
              "properties": {
                "count": {
                  "format": "int64",
                  "type": "integer"
                },
                "items": {
                  "items": {
                    "properties": {
                      "catalogId": {
                        "type": "string",
                        "x-entity-path": "catalogFilterIdentifier/externalIdentifier/catalogIdentifier/uniqueID"
                      },
                      "description": {
                        "example": "Optionally required when creating a catalog filter.",
                        "type": "string",
                        "x-entity-path": "description[1]/value"
                      },
                      "id": {
                        "type": "string",
                        "x-entity-path": "catalogFilterIdentifier/uniqueID"
                      },
                      "name": {
                        "example": "Required when creating a catalog filter",
                        "type": "string",
                        "x-entity-path": "catalogFilterIdentifier/externalIdentifier/identifier"
                      },
                      "storeId": {
                        "format": "int32",
                        "type": "integer",
                        "x-entity-path": "catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/catalogFilter"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "getCatalogFiltersByName",
        "summary": "Get catalog filters based on the name of the catalog filter.",
        "x-expression-builder-class": "com.ibm.commerce.foundation.internal.client.taglib.util.SearchExpressionBuilder",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "getCatalogFilter",
        "x-parameters": {
          "accessProfile": "IBM_Admin_Summary",
          "template": "/CatalogFilter[search(CatalogFilterIdentifier/ExternalIdentifier/Identifier='$name$')]"
        },
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.GetCatalogFilterType"
      }
    },
    "/rest/admin/v2/catalog-filters/{catalogFilterId}/catalog-entries": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The catalog entry selection.",
            "enum": [
              "Include",
              "Exclude"
            ],
            "in": "query",
            "name": "selection",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/productSetSelection[1]/selection"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "The identifier of the catalog entry.",
              "properties": {
                "id": {
                  "description": "The internal unique reference number of the catalog entry. In Delete, either this field or the PartNumber is required.",
                  "type": "string",
                  "x-entity-path": "uniqueID"
                },
                "ownerId": {
                  "description": "The numeric identifier of the organization that owns the catalog entry.",
                  "type": "string",
                  "x-entity-path": "externalIdentifier/ownerID"
                },
                "partNumber": {
                  "description": "The unique part number of the catalog entry. This field cannot be null in Insert or Replace. In Delete, either this field or the CatalogEntryUniqueId is required. The part number for a catalog entry displays in Management Center as the value for the catalog entry Code property.",
                  "type": "string",
                  "x-entity-path": "externalIdentifier/partNumber"
                },
                "storeId": {
                  "description": "The unique numeric ID for identifying the store.",
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "externalIdentifier/storeIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.CatalogEntryIdentifierType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/productSetSelection[1]/productSet/catalogEntryIdentifier[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of catalog filter.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/catalogFilter[1]/productSetSelection[1]/productSet/catalogEntryIdentifier[1]/uniqueID"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "createCatalogFilterCatalogEntry",
        "summary": "Create a catalog filter's catalog entry based on the ID of the catalog filter.",
        "x-action-code": "Add",
        "x-expression-template": "/CatalogFilter[1]/ProductSetSelection[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/catalog-filters/{catalogFilterId}/catalog-entries/{catalogEntryId}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The selection of catalog entry ID.",
            "enum": [
              "Include",
              "Exclude"
            ],
            "in": "query",
            "name": "selection",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/productSetSelection[1]/selection"
          },
          {
            "description": "The catalog entry ID.",
            "in": "path",
            "name": "catalogEntryId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/productSetSelection[1]/productSet/catalogEntryIdentifier[1]/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "deleteCatalogFilterCatalogEntry",
        "summary": "Delete a specific catalog filter's catalog entry based on the ID of the catalog entry.",
        "x-action-code": "Delete",
        "x-expression-template": "/CatalogFilter[1]/ProductSetSelection[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/catalog-filters/{catalogFilterId}/category-selections/{catalogGroupSelectionId}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "deleteCatalogFilterCategorySelection",
        "summary": "Delete a specific catalog filter category element selection based on the ID of the category selection.",
        "x-action-code": "Delete",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A category element selection.",
              "properties": {
                "catalogFilterId": {
                  "type": "string",
                  "x-entity-path": "catalogGroupSelectionIdentifier/externalIdentifier/catalogFilterIdentifier/uniqueID"
                },
                "catalogGroupId": {
                  "type": "string",
                  "x-entity-path": "catalogGroupSelectionIdentifier/externalIdentifier/catalogGroupIdentifier/uniqueID"
                },
                "catalogGroupSelectionId": {
                  "type": "string",
                  "x-entity-path": "catalogGroupSelectionIdentifier/uniqueID"
                },
                "conditionGroups": {
                  "items": {
                    "description": "A condition group of category element selection.",
                    "properties": {
                      "catalogGroupSelectionId": {
                        "type": "string",
                        "x-entity-path": "conditionGroupIdentifier/externalIdentifier/catalogGroupSelectionIdentifier/uniqueID"
                      },
                      "conditionGroupId": {
                        "type": "string",
                        "x-entity-path": "conditionGroupIdentifier/uniqueID"
                      },
                      "conditionName": {
                        "type": "string",
                        "x-entity-path": "conditionGroupIdentifier/externalIdentifier/identifier"
                      },
                      "conditionRelation": {
                        "type": "string"
                      },
                      "conditions": {
                        "items": {
                          "description": "A attribute and property of condition group.",
                          "properties": {
                            "catalogFilterConditionGroupId": {
                              "type": "string",
                              "x-entity-path": "conditionIdentifier/externalIdentifier/catalogFilterConditionGroupIdentifier/uniqueID"
                            },
                            "conditionAttributeAllowedValueId": {
                              "type": "string",
                              "x-entity-path": "conditionAttributeIdentifier/uniqueID"
                            },
                            "conditionAttributeName": {
                              "type": "string",
                              "x-entity-path": "conditionAttributeIdentifier/externalIdentifier/identifier"
                            },
                            "conditionAttributeValues": {
                              "items": {
                                "description": "The value of attribute and property.",
                                "properties": {
                                  "conditionAttributeValueId": {
                                    "type": "string",
                                    "x-entity-path": "conditionValueIdentifier/uniqueID"
                                  },
                                  "conditionValue": {
                                    "type": "string",
                                    "x-entity-path": "stringValue/value"
                                  },
                                  "identifier": {
                                    "example": "required for allowed value.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionValueType"
                              },
                              "type": "array",
                              "x-entity-path": "conditionAttributeValue"
                            },
                            "conditionId": {
                              "type": "string",
                              "x-entity-path": "conditionIdentifier/uniqueID"
                            },
                            "conditionOperator": {
                              "type": "string"
                            },
                            "conditionType": {
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionType"
                        },
                        "type": "array",
                        "x-entity-path": "condition"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionGroupType"
                  },
                  "type": "array",
                  "x-entity-path": "conditionGroup"
                },
                "selection": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogGroupSelectionType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "updateCatalogFilterCategorySelection",
        "summary": "Update a specific catalog filter category element selection based on the ID of the catergory selection.",
        "x-action-code": "Update",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType"
      }
    },
    "/rest/admin/v2/catalog-filters/{catalogFilterId}/category-selections/{catalogGroupSelectionId}/condition-groups": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A condition group of category element selection.",
              "properties": {
                "catalogGroupSelectionId": {
                  "type": "string",
                  "x-entity-path": "conditionGroupIdentifier/externalIdentifier/catalogGroupSelectionIdentifier/uniqueID"
                },
                "conditionGroupId": {
                  "type": "string",
                  "x-entity-path": "conditionGroupIdentifier/uniqueID"
                },
                "conditionName": {
                  "type": "string",
                  "x-entity-path": "conditionGroupIdentifier/externalIdentifier/identifier"
                },
                "conditionRelation": {
                  "type": "string"
                },
                "conditions": {
                  "items": {
                    "description": "A attribute and property of condition group.",
                    "properties": {
                      "catalogFilterConditionGroupId": {
                        "type": "string",
                        "x-entity-path": "conditionIdentifier/externalIdentifier/catalogFilterConditionGroupIdentifier/uniqueID"
                      },
                      "conditionAttributeAllowedValueId": {
                        "type": "string",
                        "x-entity-path": "conditionAttributeIdentifier/uniqueID"
                      },
                      "conditionAttributeName": {
                        "type": "string",
                        "x-entity-path": "conditionAttributeIdentifier/externalIdentifier/identifier"
                      },
                      "conditionAttributeValues": {
                        "items": {
                          "description": "The value of attribute and property.",
                          "properties": {
                            "conditionAttributeValueId": {
                              "type": "string",
                              "x-entity-path": "conditionValueIdentifier/uniqueID"
                            },
                            "conditionValue": {
                              "type": "string",
                              "x-entity-path": "stringValue/value"
                            },
                            "identifier": {
                              "example": "required for allowed value.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionValueType"
                        },
                        "type": "array",
                        "x-entity-path": "conditionAttributeValue"
                      },
                      "conditionId": {
                        "type": "string",
                        "x-entity-path": "conditionIdentifier/uniqueID"
                      },
                      "conditionOperator": {
                        "type": "string"
                      },
                      "conditionType": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionType"
                  },
                  "type": "array",
                  "x-entity-path": "condition"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionGroupType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of catalog filter category group condition.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/conditionGroupIdentifier/uniqueID"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "createCatalogFilterCategorySelectionConditionGroup",
        "summary": "Create a specific catalog filter's category group condition based on the ID of the category selection.",
        "x-action-code": "Add",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]/ConditionGroup[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/catalog-filters/{catalogFilterId}/category-selections/{catalogGroupSelectionId}/condition-groups/{conditionGroupId}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition group.",
            "in": "path",
            "name": "conditionGroupId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/conditionGroupIdentifier/uniqueID"
          },
          {
            "description": "The store id.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "deleteCatalogFilterCategorySelectionConditionGroup",
        "summary": "Delete a specific catalog filter's category group condition based on the ID of the condition group.",
        "x-action-code": "Delete",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]/ConditionGroup[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition group.",
            "in": "path",
            "name": "conditionGroupId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/conditionGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A condition group of category element selection.",
              "properties": {
                "catalogGroupSelectionId": {
                  "type": "string",
                  "x-entity-path": "conditionGroupIdentifier/externalIdentifier/catalogGroupSelectionIdentifier/uniqueID"
                },
                "conditionGroupId": {
                  "type": "string",
                  "x-entity-path": "conditionGroupIdentifier/uniqueID"
                },
                "conditionName": {
                  "type": "string",
                  "x-entity-path": "conditionGroupIdentifier/externalIdentifier/identifier"
                },
                "conditionRelation": {
                  "type": "string"
                },
                "conditions": {
                  "items": {
                    "description": "A attribute and property of condition group.",
                    "properties": {
                      "catalogFilterConditionGroupId": {
                        "type": "string",
                        "x-entity-path": "conditionIdentifier/externalIdentifier/catalogFilterConditionGroupIdentifier/uniqueID"
                      },
                      "conditionAttributeAllowedValueId": {
                        "type": "string",
                        "x-entity-path": "conditionAttributeIdentifier/uniqueID"
                      },
                      "conditionAttributeName": {
                        "type": "string",
                        "x-entity-path": "conditionAttributeIdentifier/externalIdentifier/identifier"
                      },
                      "conditionAttributeValues": {
                        "items": {
                          "description": "The value of attribute and property.",
                          "properties": {
                            "conditionAttributeValueId": {
                              "type": "string",
                              "x-entity-path": "conditionValueIdentifier/uniqueID"
                            },
                            "conditionValue": {
                              "type": "string",
                              "x-entity-path": "stringValue/value"
                            },
                            "identifier": {
                              "example": "required for allowed value.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionValueType"
                        },
                        "type": "array",
                        "x-entity-path": "conditionAttributeValue"
                      },
                      "conditionId": {
                        "type": "string",
                        "x-entity-path": "conditionIdentifier/uniqueID"
                      },
                      "conditionOperator": {
                        "type": "string"
                      },
                      "conditionType": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionType"
                  },
                  "type": "array",
                  "x-entity-path": "condition"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionGroupType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "createCatalogFilterCategorySelectionConditionGroup",
        "summary": "Update a specific catalog filter's category group condition based on the ID of the condition group.",
        "x-action-code": "Update",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]/ConditionGroup[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/catalog-filters/{catalogFilterId}/category-selections/{catalogGroupSelectionId}/condition-groups/{conditionGroupId}/attributes": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition group.",
            "in": "path",
            "name": "conditionGroupId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/conditionGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A attribute and property of condition group.",
              "properties": {
                "catalogFilterConditionGroupId": {
                  "type": "string",
                  "x-entity-path": "conditionIdentifier/externalIdentifier/catalogFilterConditionGroupIdentifier/uniqueID"
                },
                "conditionAttributeAllowedValueId": {
                  "type": "string",
                  "x-entity-path": "conditionAttributeIdentifier/uniqueID"
                },
                "conditionAttributeName": {
                  "type": "string",
                  "x-entity-path": "conditionAttributeIdentifier/externalIdentifier/identifier"
                },
                "conditionAttributeValues": {
                  "items": {
                    "description": "The value of attribute and property.",
                    "properties": {
                      "conditionAttributeValueId": {
                        "type": "string",
                        "x-entity-path": "conditionValueIdentifier/uniqueID"
                      },
                      "conditionValue": {
                        "type": "string",
                        "x-entity-path": "stringValue/value"
                      },
                      "identifier": {
                        "example": "required for allowed value.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionValueType"
                  },
                  "type": "array",
                  "x-entity-path": "conditionAttributeValue"
                },
                "conditionId": {
                  "type": "string",
                  "x-entity-path": "conditionIdentifier/uniqueID"
                },
                "conditionOperator": {
                  "type": "string"
                },
                "conditionType": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of catalog filter category group condition attribute.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionIdentifier/uniqueID"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "createCatalogFilterCategorySelectionConditionGroupAttribute",
        "summary": "Create a catalog filter category group condition attribute based on the ID of the condition group.",
        "x-action-code": "Add",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]/ConditionGroup[1]/Condition[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/catalog-filters/{catalogFilterId}/category-selections/{catalogGroupSelectionId}/condition-groups/{conditionGroupId}/attributes/{conditionId}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition group.",
            "in": "path",
            "name": "conditionGroupId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/conditionGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition.",
            "in": "path",
            "name": "conditionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "deleteCatalogFilterCategorySelectionConditionGroupAttribute",
        "summary": "Delete a specific catalog filter category group condition attribute based on the ID of the attribute.",
        "x-action-code": "Delete",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]/ConditionGroup[1]/Condition[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition group.",
            "in": "path",
            "name": "conditionGroupId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/conditionGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition.",
            "in": "path",
            "name": "conditionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A attribute and property of condition group.",
              "properties": {
                "catalogFilterConditionGroupId": {
                  "type": "string",
                  "x-entity-path": "conditionIdentifier/externalIdentifier/catalogFilterConditionGroupIdentifier/uniqueID"
                },
                "conditionAttributeAllowedValueId": {
                  "type": "string",
                  "x-entity-path": "conditionAttributeIdentifier/uniqueID"
                },
                "conditionAttributeName": {
                  "type": "string",
                  "x-entity-path": "conditionAttributeIdentifier/externalIdentifier/identifier"
                },
                "conditionAttributeValues": {
                  "items": {
                    "description": "The value of attribute and property.",
                    "properties": {
                      "conditionAttributeValueId": {
                        "type": "string",
                        "x-entity-path": "conditionValueIdentifier/uniqueID"
                      },
                      "conditionValue": {
                        "type": "string",
                        "x-entity-path": "stringValue/value"
                      },
                      "identifier": {
                        "example": "required for allowed value.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionValueType"
                  },
                  "type": "array",
                  "x-entity-path": "conditionAttributeValue"
                },
                "conditionId": {
                  "type": "string",
                  "x-entity-path": "conditionIdentifier/uniqueID"
                },
                "conditionOperator": {
                  "type": "string"
                },
                "conditionType": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "updateCatalogFilterCategorySelectionConditionGroupAttribute",
        "summary": "Update a specific catalog filter's category group condition attribute based on the ID of the attribute.",
        "x-action-code": "Update",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]/ConditionGroup[1]/Condition[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/catalog-filters/{catalogFilterId}/category-selections/{catalogGroupSelectionId}/condition-groups/{conditionGroupId}/attributes/{conditionId}/attribute-values": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition group.",
            "in": "path",
            "name": "conditionGroupId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/conditionGroupIdentifier/uniqueID"
          },
          {
            "description": "The condition attribute ID.",
            "in": "path",
            "name": "conditionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionAttributeValue[1]/conditionValueIdentifier/externalIdentifier/catalogFilterConditionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "The value of attribute and property.",
              "properties": {
                "conditionAttributeValueId": {
                  "type": "string",
                  "x-entity-path": "conditionValueIdentifier/uniqueID"
                },
                "conditionValue": {
                  "type": "string",
                  "x-entity-path": "stringValue/value"
                },
                "identifier": {
                  "example": "required for allowed value.",
                  "type": "string"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionValueType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionAttributeValue[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful.",
            "headers": {
              "Location": {
                "description": "The URI of catalog filter category group condition attribute value.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionAttributeValue[1]/conditionValueIdentifier/uniqueID"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "createCatalogFilterCategorySelectionConditionGroupAttributeValue",
        "summary": "Create a catalog filter's category group condition attribute value based on the ID of the attribute.",
        "x-action-code": "Add",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]/ConditionGroup[1]/Condition[1]/ConditionAttributeValue[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/catalog-filters/{catalogFilterId}/category-selections/{catalogGroupSelectionId}/condition-groups/{conditionGroupId}/attributes/{conditionId}/attribute-values/{conditionAttributeValueId}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition group.",
            "in": "path",
            "name": "conditionGroupId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/conditionGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition.",
            "in": "path",
            "name": "conditionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionAttributeValue[1]/conditionValueIdentifier/externalIdentifier/catalogFilterConditionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition attribute value.",
            "in": "path",
            "name": "conditionAttributeValueId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionAttributeValue[1]/conditionValueIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "deleteCatalogFilterCategorySelectionConditionGroupAttributeValue",
        "summary": "Delete a specific catalog filter's category group condition attribute value based on the ID of the attribute value.",
        "x-action-code": "Delete",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]/ConditionGroup[1]/Condition[1]/ConditionAttributeValue[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "catalogFilterId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the catalog group selection.",
            "in": "path",
            "name": "catalogGroupSelectionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition group.",
            "in": "path",
            "name": "conditionGroupId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/conditionGroupIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition.",
            "in": "path",
            "name": "conditionId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionAttributeValue[1]/conditionValueIdentifier/externalIdentifier/catalogFilterConditionIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the condition attribute value.",
            "in": "path",
            "name": "conditionAttributeValueId",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionAttributeValue[1]/conditionValueIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "The value of attribute and property.",
              "properties": {
                "conditionAttributeValueId": {
                  "type": "string",
                  "x-entity-path": "conditionValueIdentifier/uniqueID"
                },
                "conditionValue": {
                  "type": "string",
                  "x-entity-path": "stringValue/value"
                },
                "identifier": {
                  "example": "required for allowed value.",
                  "type": "string"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionValueType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/conditionGroup[1]/condition[1]/conditionAttributeValue[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "updateCatalogFilterCategorySelectionConditionGroupAttributeValue",
        "summary": "Update a specific catalog filter's category group condition attribute value based on the ID of the attribute value.",
        "x-action-code": "Update",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]/ConditionGroup[1]/Condition[1]/ConditionAttributeValue[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/catalog-filters/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "deleteCatalogFilter",
        "summary": "Delete a specific catalog filter based on the ID of catalog filter.",
        "x-action-code": "Delete",
        "x-expression-template": "/CatalogFilter[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "processCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ProcessCatalogFilterType"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "properties": {
                "catalogId": {
                  "type": "string",
                  "x-entity-path": "catalogFilterIdentifier/externalIdentifier/catalogIdentifier/uniqueID"
                },
                "description": {
                  "example": "Optionally required when creating a catalog filter.",
                  "type": "string",
                  "x-entity-path": "description[1]/value"
                },
                "id": {
                  "type": "string",
                  "x-entity-path": "catalogFilterIdentifier/uniqueID"
                },
                "name": {
                  "example": "Required when creating a catalog filter",
                  "type": "string",
                  "x-entity-path": "catalogFilterIdentifier/externalIdentifier/identifier"
                },
                "storeId": {
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "getCatalogFilterById",
        "summary": "Get a specific catalog filter based on the ID of the catalog filter.",
        "x-expression-template": "{_wcf.ap='IBM_CatalogFilter_details';_wcf.dataLanguageIds='{}'}/CatalogFilter[CatalogFilterIdentifier[(UniqueID='{id}')]]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "getCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.GetCatalogFilterType"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "catalogId": {
                  "type": "string",
                  "x-entity-path": "catalogFilterIdentifier/externalIdentifier/catalogIdentifier/uniqueID"
                },
                "description": {
                  "example": "Optionally required when creating a catalog filter.",
                  "type": "string",
                  "x-entity-path": "description[1]/value"
                },
                "id": {
                  "type": "string",
                  "x-entity-path": "catalogFilterIdentifier/uniqueID"
                },
                "name": {
                  "example": "Required when creating a catalog filter",
                  "type": "string",
                  "x-entity-path": "catalogFilterIdentifier/externalIdentifier/identifier"
                },
                "storeId": {
                  "format": "int32",
                  "type": "integer",
                  "x-entity-path": "catalogFilterIdentifier/externalIdentifier/storeIdentifier/uniqueID"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "updateCatalogFilter",
        "summary": "Update a specific catalog filter based on the ID of the catalog filter.",
        "x-action-code": "Change",
        "x-expression-template": "/CatalogFilter[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType"
      }
    },
    "/rest/admin/v2/catalog-filters/{id}/category-selections": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "properties": {
                "items": {
                  "items": {
                    "description": "A category element selection.",
                    "properties": {
                      "catalogFilterId": {
                        "type": "string",
                        "x-entity-path": "catalogGroupSelectionIdentifier/externalIdentifier/catalogFilterIdentifier/uniqueID"
                      },
                      "catalogGroupId": {
                        "type": "string",
                        "x-entity-path": "catalogGroupSelectionIdentifier/externalIdentifier/catalogGroupIdentifier/uniqueID"
                      },
                      "catalogGroupSelectionId": {
                        "type": "string",
                        "x-entity-path": "catalogGroupSelectionIdentifier/uniqueID"
                      },
                      "conditionGroups": {
                        "items": {
                          "description": "A condition group of category element selection.",
                          "properties": {
                            "catalogGroupSelectionId": {
                              "type": "string",
                              "x-entity-path": "conditionGroupIdentifier/externalIdentifier/catalogGroupSelectionIdentifier/uniqueID"
                            },
                            "conditionGroupId": {
                              "type": "string",
                              "x-entity-path": "conditionGroupIdentifier/uniqueID"
                            },
                            "conditionName": {
                              "type": "string",
                              "x-entity-path": "conditionGroupIdentifier/externalIdentifier/identifier"
                            },
                            "conditionRelation": {
                              "type": "string"
                            },
                            "conditions": {
                              "items": {
                                "description": "A attribute and property of condition group.",
                                "properties": {
                                  "catalogFilterConditionGroupId": {
                                    "type": "string",
                                    "x-entity-path": "conditionIdentifier/externalIdentifier/catalogFilterConditionGroupIdentifier/uniqueID"
                                  },
                                  "conditionAttributeAllowedValueId": {
                                    "type": "string",
                                    "x-entity-path": "conditionAttributeIdentifier/uniqueID"
                                  },
                                  "conditionAttributeName": {
                                    "type": "string",
                                    "x-entity-path": "conditionAttributeIdentifier/externalIdentifier/identifier"
                                  },
                                  "conditionAttributeValues": {
                                    "items": {
                                      "description": "The value of attribute and property.",
                                      "properties": {
                                        "conditionAttributeValueId": {
                                          "type": "string",
                                          "x-entity-path": "conditionValueIdentifier/uniqueID"
                                        },
                                        "conditionValue": {
                                          "type": "string",
                                          "x-entity-path": "stringValue/value"
                                        },
                                        "identifier": {
                                          "example": "required for allowed value.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionValueType"
                                    },
                                    "type": "array",
                                    "x-entity-path": "conditionAttributeValue"
                                  },
                                  "conditionId": {
                                    "type": "string",
                                    "x-entity-path": "conditionIdentifier/uniqueID"
                                  },
                                  "conditionOperator": {
                                    "type": "string"
                                  },
                                  "conditionType": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionType"
                              },
                              "type": "array",
                              "x-entity-path": "condition"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionGroupType"
                        },
                        "type": "array",
                        "x-entity-path": "conditionGroup"
                      },
                      "selection": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogGroupSelectionType"
                  },
                  "type": "array",
                  "x-entity-path": "catalogGroupSelection"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "getCatalogFilterCategorySelections",
        "summary": "Get a collection of a catalog filter's category selections based on the ID of the catalog filter.",
        "x-expression-template": "{_wcf.ap='IBM_CatalogFilter_Details_WithoutCatentries';_wcf.dataLanguageIds='{}'}/CatalogFilter[CatalogFilterIdentifier[(UniqueID='{id}')]]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "getCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.GetCatalogFilterType"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-entity-path": "dataArea/catalogFilter[1]/catalogFilterIdentifier/uniqueID"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          },
          {
            "description": "The request body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A category element selection.",
              "properties": {
                "catalogFilterId": {
                  "type": "string",
                  "x-entity-path": "catalogGroupSelectionIdentifier/externalIdentifier/catalogFilterIdentifier/uniqueID"
                },
                "catalogGroupId": {
                  "type": "string",
                  "x-entity-path": "catalogGroupSelectionIdentifier/externalIdentifier/catalogGroupIdentifier/uniqueID"
                },
                "catalogGroupSelectionId": {
                  "type": "string",
                  "x-entity-path": "catalogGroupSelectionIdentifier/uniqueID"
                },
                "conditionGroups": {
                  "items": {
                    "description": "A condition group of category element selection.",
                    "properties": {
                      "catalogGroupSelectionId": {
                        "type": "string",
                        "x-entity-path": "conditionGroupIdentifier/externalIdentifier/catalogGroupSelectionIdentifier/uniqueID"
                      },
                      "conditionGroupId": {
                        "type": "string",
                        "x-entity-path": "conditionGroupIdentifier/uniqueID"
                      },
                      "conditionName": {
                        "type": "string",
                        "x-entity-path": "conditionGroupIdentifier/externalIdentifier/identifier"
                      },
                      "conditionRelation": {
                        "type": "string"
                      },
                      "conditions": {
                        "items": {
                          "description": "A attribute and property of condition group.",
                          "properties": {
                            "catalogFilterConditionGroupId": {
                              "type": "string",
                              "x-entity-path": "conditionIdentifier/externalIdentifier/catalogFilterConditionGroupIdentifier/uniqueID"
                            },
                            "conditionAttributeAllowedValueId": {
                              "type": "string",
                              "x-entity-path": "conditionAttributeIdentifier/uniqueID"
                            },
                            "conditionAttributeName": {
                              "type": "string",
                              "x-entity-path": "conditionAttributeIdentifier/externalIdentifier/identifier"
                            },
                            "conditionAttributeValues": {
                              "items": {
                                "description": "The value of attribute and property.",
                                "properties": {
                                  "conditionAttributeValueId": {
                                    "type": "string",
                                    "x-entity-path": "conditionValueIdentifier/uniqueID"
                                  },
                                  "conditionValue": {
                                    "type": "string",
                                    "x-entity-path": "stringValue/value"
                                  },
                                  "identifier": {
                                    "example": "required for allowed value.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionValueType"
                              },
                              "type": "array",
                              "x-entity-path": "conditionAttributeValue"
                            },
                            "conditionId": {
                              "type": "string",
                              "x-entity-path": "conditionIdentifier/uniqueID"
                            },
                            "conditionOperator": {
                              "type": "string"
                            },
                            "conditionType": {
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionType"
                        },
                        "type": "array",
                        "x-entity-path": "condition"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogFilterConditionGroupType"
                  },
                  "type": "array",
                  "x-entity-path": "conditionGroup"
                },
                "selection": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.CatalogGroupSelectionType"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]"
          }
        ],
        "responses": {
          "201": {
            "description": "The operation is successful",
            "headers": {
              "Location": {
                "description": "The URI of catalog filter category element selection.",
                "type": "string"
              }
            },
            "x-entity-path": "dataArea/catalogFilter[1]/catalogGroupSelection[1]/catalogGroupSelectionIdentifier/uniqueID"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "createCatalogFilterCategorySelection",
        "summary": "Create a catalog filter category selection.",
        "x-action-code": "Add",
        "x-expression-template": "/CatalogFilter[1]/CatalogGroupSelection[1]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "changeCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilterType",
        "x-request-verb": "change"
      }
    },
    "/rest/admin/v2/catalog-filters/{id}/product-set-selections": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique numeric ID for identifying the catalog filter.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique numeric ID for identifying the store.",
            "format": "int32",
            "in": "query",
            "name": "storeId",
            "required": true,
            "type": "integer",
            "x-context-data": "storeId"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful.",
            "schema": {
              "properties": {
                "items": {
                  "items": {
                    "description": "ProductSets.",
                    "properties": {
                      "catalogEntryReferences": {
                        "items": {
                          "description": "The identifier of the catalog entry.",
                          "properties": {
                            "id": {
                              "description": "The internal unique reference number of the catalog entry. In Delete, either this field or the PartNumber is required.",
                              "type": "string",
                              "x-entity-path": "uniqueID"
                            },
                            "ownerId": {
                              "description": "The numeric identifier of the organization that owns the catalog entry.",
                              "type": "string",
                              "x-entity-path": "externalIdentifier/ownerID"
                            },
                            "partNumber": {
                              "description": "The unique part number of the catalog entry. This field cannot be null in Insert or Replace. In Delete, either this field or the CatalogEntryUniqueId is required. The part number for a catalog entry displays in Management Center as the value for the catalog entry Code property.",
                              "type": "string",
                              "x-entity-path": "externalIdentifier/partNumber"
                            },
                            "storeId": {
                              "description": "The unique numeric ID for identifying the store.",
                              "format": "int32",
                              "type": "integer",
                              "x-entity-path": "externalIdentifier/storeIdentifier/uniqueID"
                            }
                          },
                          "type": "object",
                          "x-entity-class": "com.ibm.commerce.foundation.common.datatypes.CatalogEntryIdentifierType"
                        },
                        "type": "array",
                        "x-entity-path": "productSet/catalogEntryIdentifier"
                      },
                      "productSetId": {
                        "type": "string",
                        "x-entity-path": "productSet/productSetIdentifier/uniqueID"
                      },
                      "selection": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-entity-class": "com.ibm.commerce.catalog.facade.datatypes.ProductSetSelectionType"
                  },
                  "type": "array",
                  "x-entity-path": "productSetSelection"
                }
              },
              "type": "object"
            },
            "x-entity-path": "dataArea/catalogFilter[1]/productSetSelection"
          }
        },
        "tags": [
          "Catalog Filters"
        ],
        "operationId": "getCatalogFilterProductSetSelections",
        "summary": "Get a collecton of catalog filter's product set selections based on the ID of the catalog filter.",
        "x-expression-template": "{_wcf.ap='IBM_CatalogFilter_details';_wcf.dataLanguageIds='{}'}/CatalogFilter[CatalogFilterIdentifier[(UniqueID='{id}')]]",
        "x-facade-client-class": "com.ibm.commerce.catalog.facade.client.CatalogFacadeClient",
        "x-facade-client-method": "getCatalogFilter",
        "x-request-bod-class": "com.ibm.commerce.catalog.facade.datatypes.GetCatalogFilterType"
      }
    }
  }
}
