{
  "host": "hostname.com",
  "basePath": "/rest/admin/v2",
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "tax-category-descriptions"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/tax-category-descriptions": {
      "get": {
        "tags": [
          "tax-category-descriptions"
        ],
        "description": "Get a collection of tax category description.",
        "operationId": "getTaxCategoryDescriptions",
        "parameters": [
          {
            "name": "taxCategoryId",
            "in": "query",
            "description": "The Tax Category ID.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "The Language ID.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "description",
            "in": "query",
            "description": "A brief description of the tax category, suitable for display to a customer for selection. For example, Sales tax, Shipping tax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of tax category description.",
            "schema": {
              "$ref": "#/definitions/TaxCategoryDescriptionCollection"
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tax-category-descriptions"
        ],
        "description": "Create a tax category description.",
        "operationId": "createTaxCategoryDescription",
        "parameters": [
          {
            "in": "body",
            "name": "TaxCategoryDescription",
            "description": "A tax category description.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxCategoryDescription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      }
    },
    "/tax-category-descriptions/languageId:{languageId},taxCategoryId:{taxCategoryId}": {
      "get": {
        "tags": [
          "tax-category-descriptions"
        ],
        "description": "Get a tax category description.",
        "operationId": "getTaxCategoryDescriptionById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A tax category description.",
            "schema": {
              "$ref": "#/definitions/TaxCategoryDescription"
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tax-category-descriptions"
        ],
        "description": "Delete a tax category description.",
        "operationId": "deleteTaxCategoryDescriptionById",
        "parameters": [],
        "responses": {
          "204": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tax-category-descriptions"
        ],
        "description": "Update a tax category description.",
        "operationId": "updateTaxCategoryDescriptionById",
        "parameters": [
          {
            "in": "body",
            "name": "TaxCategoryDescription",
            "description": "A tax category description.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxCategoryDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "languageId",
          "in": "path",
          "description": "The Language ID.",
          "required": true,
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "taxCategoryId",
          "in": "path",
          "description": "The Tax Category ID.",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    }
  },
  "definitions": {
    "Link": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "format": "uri",
          "description": "The URL of the link."
        }
      },
      "description": "Links to related resources."
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error message code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "messageKey": {
          "type": "string",
          "description": "The error message key."
        },
        "messageArguments": {
          "type": "array",
          "description": "The arguments used to construct the error message.",
          "items": {
            "type": "object"
          }
        },
        "correlationId": {
          "type": "string",
          "description": "The unique identifier for the request."
        },
        "locale": {
          "type": "string",
          "description": "The locale of the error message."
        }
      },
      "description": "The error message item model."
    },
    "ErrorResponseContainer": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "The request identifier."
        },
        "errors": {
          "type": "array",
          "description": "The errors.",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      },
      "description": "The error message model."
    },
    "TaxCategoryDescription": {
      "type": "object",
      "properties": {
        "taxCategoryId": {
          "type": "integer",
          "format": "int32",
          "description": "The Tax Category ID."
        },
        "languageId": {
          "type": "integer",
          "format": "int32",
          "description": "The Language ID."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the tax category, suitable for display to a customer for selection. For example, Sales tax, Shipping tax."
        }
      },
      "description": "A tax category description."
    },
    "TaxCategoryDescriptionCollection": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of items."
        },
        "items": {
          "type": "array",
          "description": "The items.",
          "items": {
            "$ref": "#/definitions/TaxCategoryDescription"
          }
        }
      },
      "description": "A collection of tax category description."
    }
  }
}