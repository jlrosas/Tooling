{
    "host": "hostname.com",
    "basePath": "/rest/admin/v2",
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "version": "2.0",
        "title": "fulfillment-centers"
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/fulfillment-centers": {
            "get": {
                "tags": [
                    "fulfillment-centers"
                ],
                "description": "Get a collection of fulfillment centers.",
                "operationId": "getFulfillmentCenters",
                "parameters": [
                    {
                        "name": "searchString",
                        "description": "Limits search results to only include fulfillment centers with a name that matches the value of this parameter. Searches are case-insensitive.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The fulfillment center ID.",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
		                "name": "storeId",
		                "in": "query",
		                "description": "The store ID.",
		                "required": false,
		                "type": "integer",
		                "format": "int32"
                    },
                    {
                        "name": "memberId",
                        "in": "query",
                        "description": "The owning organization ID.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A string that, along with the owner, uniquely identifies this fulfillment center.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultShipOffset",
                        "in": "query",
                        "description": "An estimate of the number seconds it takes for an item to be shipped from this fulfillment center.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "markForDelete",
                        "in": "query",
                        "description": "Indicates whether the fulfillment center should be deleted as follows, 0 = do not delete. 1 = delete if no longer in use. Refer to the Database Cleanup utility.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "externalFulfillmentStoreNumber",
                        "in": "query",
                        "description": "A reference number that can be used to locate a store or external fulfillment system.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inventoryOperationFlags",
                        "in": "query",
                        "description": "Contains bit flags indicating how to perform inventory operations. Enter an integer that is the sum of the number of the flags that you want to turn on. Example, Enter \"3\" to turn on flags 1 and 2. 1 = multiItem - operations accept multiple order items. 2 = noCheck - inventory is never checked (the check operation always appears to succeed). 4 = noAllocation - the allocate operation checks inventory, but does not actually allocate it (the allocate operation appears to succeed if the check succeeds). 8 = noBackorder - inventory is never backordered (the backorder operation always fails).",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "maxNumPick",
                        "in": "query",
                        "description": "The maximum number of the releases per pick batch.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "pickDelayInMin",
                        "in": "query",
                        "description": "The delay in minutes from the time an order is placed until one of its releases can be included.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "dropShip",
                        "in": "query",
                        "description": "Indicates whether the fulfillment center is a drop-ship fulfillment center. Y means that it is. N indicates that it is not.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of records to return.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of fulfillment centers.",
                        "schema": {
                            "$ref": "#/definitions/FulfillmentCenterCollection"
                        }
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "fulfillment-centers"
                ],
                "description": "Create a fulfillment center.",
                "operationId": "createFulfillmentCenter",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FulfillmentCenter",
                        "description": "Fulfillment center.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FulfillmentCenter"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The operation was successful."
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            }
        },
        "/fulfillment-centers/{id}": {
            "get": {
                "tags": [
                    "fulfillment-centers"
                ],
                "description": "Get a fulfillment center.",
                "operationId": "getFulfillmentCenterById",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fulfillment center.",
                        "schema": {
                            "$ref": "#/definitions/FulfillmentCenter"
                        }
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "404": {
                        "description": "The resource was not found."
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "fulfillment-centers"
                ],
                "description": "Delete a fulfillment center.",
                "operationId": "deleteFulfillmentCenterById",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "The operation was successful."
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "404": {
                        "description": "The resource was not found."
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "fulfillment-centers"
                ],
                "description": "Update a fulfillment center.",
                "operationId": "updateFulfillmentCenterById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FulfillmentCenter",
                        "description": "Fulfillment center.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FulfillmentCenter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful."
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "404": {
                        "description": "The resource was not found."
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The fulfillment center ID.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/fulfillment-centers/{id}/fulfillment-center-descriptions": {
            "get": {
                "tags": [
                    "fulfillment-centers"
                ],
                "description": "",
                "operationId": "getFulfillmentCenterDescriptionsOfFulfillmentCenter",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of records to return.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of fulfillment center descriptions.",
                        "schema": {
                            "$ref": "#/definitions/FulfillmentCenterDescriptionCollection"
                        }
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The fulfillment center ID.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        }
    },
    "definitions": {
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The error message code."
                },
                "message": {
                    "type": "string",
                    "description": "The error message."
                },
                "messageKey": {
                    "type": "string",
                    "description": "The error message key."
                },
                "messageArguments": {
                    "type": "array",
                    "description": "The arguments used to construct the error message.",
                    "items": {
                        "type": "object"
                    }
                },
                "correlationId": {
                    "type": "string",
                    "description": "The unique identifier for the request."
                },
                "locale": {
                    "type": "string",
                    "description": "The locale of the error message."
                }
            },
            "description": "The error message item model."
        },
        "ErrorResponseContainer": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "string",
                    "description": "The request identifier."
                },
                "errors": {
                    "type": "array",
                    "description": "The errors.",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                }
            },
            "description": "The error message model."
        },
        "FulfillmentCenter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The fulfillment center ID."
                },
                "memberId": {
                    "type": "string",
                    "description": "The owning organization ID."
                },
                "name": {
                    "type": "string",
                    "description": "A string that, along with the owner, uniquely identifies this fulfillment center."
                },
                "defaultShipOffset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate of the number seconds it takes for an item to be shipped from this fulfillment center."
                },
                "markForDelete": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether the fulfillment center should be deleted as follows, 0 = do not delete. 1 = delete if no longer in use. Refer to the Database Cleanup utility."
                },
                "externalFulfillmentStoreNumber": {
                    "type": "string",
                    "description": "A reference number that can be used to locate a store or external fulfillment system."
                },
                "inventoryOperationFlags": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Contains bit flags indicating how to perform inventory operations. Enter an integer that is the sum of the number of the flags that you want to turn on. Example, Enter \"3\" to turn on flags 1 and 2. 1 = multiItem - operations accept multiple order items. 2 = noCheck - inventory is never checked (the check operation always appears to succeed). 4 = noAllocation - the allocate operation checks inventory, but does not actually allocate it (the allocate operation appears to succeed if the check succeeds). 8 = noBackorder - inventory is never backordered (the backorder operation always fails)."
                },
                "maxNumPick": {
                    "type": "number",
                    "description": "The maximum number of the releases per pick batch."
                },
                "pickDelayInMin": {
                    "type": "number",
                    "description": "The delay in minutes from the time an order is placed until one of its releases can be included."
                },
                "dropShip": {
                    "type": "string",
                    "description": "Indicates whether the fulfillment center is a drop-ship fulfillment center. Y means that it is. N indicates that it is not."
                }
            },
            "description": "Fulfillment center."
        },
        "FulfillmentCenterCollection": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The total number of items."
                },
                "items": {
                    "type": "array",
                    "description": "The items.",
                    "items": {
                        "$ref": "#/definitions/FulfillmentCenter"
                    }
                }
            },
            "description": "A collection of fulfillment centers."
        },
        "FulfillmentCenterDescription": {
            "type": "object",
            "properties": {
                "fulfillmentCenterId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The fulfillment center ID."
                },
                "displayName": {
                    "type": "string",
                    "description": "A string that, along with its language Id, uniquely identifies this fulfillment center."
                },
                "description": {
                    "type": "string",
                    "description": "The fulfillment center description in the language."
                },
                "storeAddressId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The physical location of the FulfillmentCenter."
                },
                "languageId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The language of the description. For a list of integer language identifiers, please refer to the Knowledge Center."
                }
            },
            "description": "Fulfillment center description."
        },
        "FulfillmentCenterDescriptionCollection": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The total number of items."
                },
                "items": {
                    "type": "array",
                    "description": "The items.",
                    "items": {
                        "$ref": "#/definitions/FulfillmentCenterDescription"
                    }
                }
            },
            "description": "A collection of fulfillment center descriptions."
        }
    }
}