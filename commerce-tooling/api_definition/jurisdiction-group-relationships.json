{
    "host": "hostname.com",
    "basePath": "/rest/admin/v2",
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "version": "2.0",
        "title": "jurisdiction-group-relationships"
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/jurisdiction-group-relationships": {
            "get": {
                "tags": [
                    "jurisdiction-group-relationships"
                ],
                "description": "Get a collection of jurisdiction group to jurisdiction relationships.",
                "operationId": "getJurisdictionGroupRelationships",
                "parameters": [
                    {
                        "name": "jurisdictionId",
                        "in": "query",
                        "description": "The unique ID for the jurisdiction.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "jurisdictionGroupId",
                        "in": "query",
                        "description": "The unique ID for the jurisdiction group.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "subclass",
                        "in": "query",
                        "description": "The subclass of the jurisdiction and of the jurisdiction group should match as follows: 1 = ShippingJurisdiction[Group]. 2 = TaxJurisdiction[Group].",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of records to return.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of jurisdiction group to jurisdiction relationship.",
                        "schema": {
                            "$ref": "#/definitions/JurisdictionGroupRelationshipCollection"
                        }
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "jurisdiction-group-relationships"
                ],
                "description": "Create a jurisdiction group to jurisdiction relationship.",
                "operationId": "createJurisdictionGroupRelationship",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JurisdictionGroupRelationship",
                        "description": "Relate jurisdiction groups to the jurisdictions that are inside them.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JurisdictionGroupRelationship"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The operation was successful."
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            }
        },
        "/jurisdiction-group-relationships/jurisdictionId:{jurisdictionId},jurisdictionGroupId:{jurisdictionGroupId}": {
            "get": {
                "tags": [
                    "jurisdiction-group-relationships"
                ],
                "description": "Get a jurisdiction group to jurisdiction relationship.",
                "operationId": "getJurisdictionGroupRelationshipById",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relate jurisdiction groups to the jurisdictions that are inside them.",
                        "schema": {
                            "$ref": "#/definitions/JurisdictionGroupRelationship"
                        }
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "404": {
                        "description": "The resource was not found."
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "jurisdiction-group-relationships"
                ],
                "description": "Delete a jurisdiction group to jurisdiction relationship.",
                "operationId": "deleteJurisdictionGroupRelationshipById",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "The operation was successful."
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "404": {
                        "description": "The resource was not found."
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "jurisdiction-group-relationships"
                ],
                "description": "Update a jurisdiction group to jurisdiction relationship.",
                "operationId": "updateJurisdictionGroupRelationshipById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JurisdictionGroupRelationship",
                        "description": "Relate jurisdiction groups to the jurisdictions that are inside them.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JurisdictionGroupRelationship"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful."
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "404": {
                        "description": "The resource was not found."
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "jurisdictionId",
                    "in": "path",
                    "description": "The unique ID for the jurisdiction.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                },
                {
                    "name": "jurisdictionGroupId",
                    "in": "path",
                    "description": "The unique ID for the jurisdiction group.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/jurisdiction-group-relationships/jurisdictionId:{jurisdictionId},jurisdictionGroupId:{jurisdictionGroupId}/jurisdiction-group": {
            "get": {
                "tags": [
                    "jurisdiction-group-relationships"
                ],
                "description": "Finds the jurisdiction group in a jurisdiction group relationship.",
                "operationId": "getJurisdictionGroupOfJurisdictionGroupRelationship",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provides RESTful services to manage jurisdiction groups. Jurisdiction groups are used for grouping of Jurisdictions.",
                        "schema": {
                            "$ref": "#/definitions/JurisdictionGroup"
                        }
                    },
                    "404": {
                        "description": "The resource was not found."
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "jurisdictionId",
                    "in": "path",
                    "description": "The unique ID for the jurisdiction.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                },
                {
                    "name": "jurisdictionGroupId",
                    "in": "path",
                    "description": "The unique ID for the jurisdiction group.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/jurisdiction-group-relationships/jurisdictionId:{jurisdictionId},jurisdictionGroupId:{jurisdictionGroupId}/jurisdiction": {
            "get": {
                "tags": [
                    "jurisdiction-group-relationships"
                ],
                "description": "Finds the jurisdiction group in a jurisdiction group relationship.",
                "operationId": "getJurisdictionOfJurisdictionGroupRelationship",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provides RESTful services to manage jurisdictions. Jurisdictions are geographical regions or zones that represent a country, region, province, territory, or ZIP code range in which you sell goods.",
                        "schema": {
                            "$ref": "#/definitions/Jurisdiction"
                        }
                    },
                    "404": {
                        "description": "The resource was not found."
                    },
                    "400": {
                        "description": "There was a client error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    },
                    "500": {
                        "description": "There was a server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseContainer"
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "jurisdictionId",
                    "in": "path",
                    "description": "The unique ID for the jurisdiction.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                },
                {
                    "name": "jurisdictionGroupId",
                    "in": "path",
                    "description": "The unique ID for the jurisdiction group.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        }
    },
    "definitions": {
        "Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the link."
                }
            },
            "description": "Links to related resources."
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The error message code."
                },
                "message": {
                    "type": "string",
                    "description": "The error message."
                },
                "messageKey": {
                    "type": "string",
                    "description": "The error message key."
                },
                "messageArguments": {
                    "type": "array",
                    "description": "The arguments used to construct the error message.",
                    "items": {
                        "type": "object"
                    }
                },
                "correlationId": {
                    "type": "string",
                    "description": "The unique identifier for the request."
                },
                "locale": {
                    "type": "string",
                    "description": "The locale of the error message."
                }
            },
            "description": "The error message item model."
        },
        "ErrorResponseContainer": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "string",
                    "description": "The request identifier."
                },
                "errors": {
                    "type": "array",
                    "description": "The errors.",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                }
            },
            "description": "The error message model."
        },
        "JurisdictionGroupRelationship": {
            "type": "object",
            "properties": {
                "jurisdictionId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique ID for the jurisdiction."
                },
                "jurisdictionGroupId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique ID for the jurisdiction group."
                },
                "subclass": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The subclass of the jurisdiction and of the jurisdiction group should match as follows: 1 = ShippingJurisdiction[Group]. 2 = TaxJurisdiction[Group]."
                }
            },
            "description": "Relate jurisdiction groups to the jurisdictions that are inside them."
        },
        "JurisdictionGroupRelationshipCollection": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The total number of items."
                },
                "items": {
                    "type": "array",
                    "description": "The items.",
                    "items": {
                        "$ref": "#/definitions/JurisdictionGroupRelationship"
                    }
                }
            },
            "description": "A collection of jurisdiction group to jurisdiction relationship."
        },
        "JurisdictionGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique ID for the jurisdiction group."
                },
                "code": {
                    "type": "string",
                    "description": "A code which, together with its storeId and subclass, uniquely identifies this jurisdiction group."
                },
                "storeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The reference number of the store this jurisdiction associated with."
                },
                "subclass": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the jurisdiction group subclass as follows: 1 = ShippingJurisdictionGroup. 2 = TaxJurisdictionGroup."
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the jurisdiction group, suitable for display by a user interface that manages jurisdiction groups."
                },
                "markForDelete": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates if this jurisdiction group has been marked for deletion: 0 = No. 1 = Yes."
                }
            },
            "description": "Provides RESTful services to manage jurisdiction groups. Jurisdiction groups are used for grouping of Jurisdictions."
        },
        "Jurisdiction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique ID for the jurisdiction."
                },
                "code": {
                    "type": "string",
                    "description": "A code which, together with its storeId and subclass, uniquely identifies this jurisdiction."
                },
                "storeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The reference number of the store this jurisdiction associated with."
                },
                "subclass": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the jurisdiction types as follows: 1 = ShippingJurisdiction. 2 = TaxJurisdiction."
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the jurisdiction, suitable for display by a user interface that manages jurisdiction definitions."
                },
                "country": {
                    "type": "string",
                    "description": "The country or region."
                },
                "countryAbbreviation": {
                    "type": "string",
                    "description": "An optional ISO standard abbreviation code for the country or region."
                },
                "state": {
                    "type": "string",
                    "description": "The state, province, or other equivalent region."
                },
                "stateAbbreviation": {
                    "type": "string",
                    "description": "An optional country specific abbreviation code for the state or province."
                },
                "city": {
                    "type": "string",
                    "description": "The city or an equivalent."
                },
                "district": {
                    "type": "string",
                    "description": "The district or an equivalent."
                },
                "county": {
                    "type": "string",
                    "description": "The county or an equivalent."
                },
                "zipcodeStart": {
                    "type": "string",
                    "description": "The starting ZIP code or postal code of a range of ZIP codes or postal codes."
                },
                "zipcodeEnd": {
                    "type": "string",
                    "description": "The ending ZIP code or postal code of a range of ZIP codes or postal codes."
                },
                "geoCode": {
                    "type": "string",
                    "description": "A tax code that is based on geographic region. This code is used to support Taxware integration."
                },
                "markForDelete": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates if this jurisdiction has been marked for deletion: 0 = No. 1 = Yes."
                }
            },
            "description": "Provides RESTful services to manage jurisdictions. Jurisdictions are geographical regions or zones that represent a country, region, province, territory, or ZIP code range in which you sell goods."
        }
    }
}