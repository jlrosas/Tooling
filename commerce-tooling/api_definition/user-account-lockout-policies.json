{
  "host": "hostname.com",
  "basePath": "/rest/admin/v2",
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "user-account-lockout-policies"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user-account-lockout-policies": {
      "get": {
        "tags": [
          "user-account-lockout-policies"
        ],
        "description": "Get a collection of user account lockout policies.",
        "operationId": "getUserAccountLockoutPolicies",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The user account lockout policy ID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lockoutThreshold",
            "in": "query",
            "description": "The number of times a user can consecutively enter an incorrect password before the system locks the users account. The default value is 6.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "waitTime",
            "in": "query",
            "description": "The starting value (in seconds) of the time before the user is allowed to re-enter another password.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of user account lockout policies.",
            "schema": {
              "$ref": "#/definitions/UserAccountLockoutPolicyCollection"
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-account-lockout-policies"
        ],
        "description": "Create a user account lockout policy.",
        "operationId": "createUserAccountLockoutPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "UserAccountLockoutPolicy",
            "description": "The user account lockout policy.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAccountLockoutPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      }
    },
    "/user-account-lockout-policies/{id}": {
      "get": {
        "tags": [
          "user-account-lockout-policies"
        ],
        "description": "Get a user account lockout policy.",
        "operationId": "getUserAccountLockoutPolicyById",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The user account lockout policy.",
            "schema": {
              "$ref": "#/definitions/UserAccountLockoutPolicy"
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-account-lockout-policies"
        ],
        "description": "Delete a user account lockout policy.",
        "operationId": "deleteUserAccountLockoutPolicyById",
        "parameters": [],
        "responses": {
          "204": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user-account-lockout-policies"
        ],
        "description": "Update a user account lockout policy.",
        "operationId": "updateUserAccountLockoutPolicyById",
        "parameters": [
          {
            "in": "body",
            "name": "UserAccountLockoutPolicy",
            "description": "The user account lockout policy.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAccountLockoutPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful."
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "404": {
            "description": "The resource was not found."
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The user account lockout policy ID.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/user-account-lockout-policies/{id}/descriptions": {
      "get": {
        "tags": [
          "user-account-lockout-policies"
        ],
        "description": "",
        "operationId": "getDescriptionsOfUserAccountLockoutPolicy",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of user account lockout policy descriptions.",
            "schema": {
              "$ref": "#/definitions/UserAccountLockoutPolicyDescriptionCollection"
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The user account lockout policy ID.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/user-account-lockout-policies/{id}/user-account-policies": {
      "get": {
        "tags": [
          "user-account-lockout-policies"
        ],
        "description": "",
        "operationId": "getUserAccountPoliciesOfUserAccountLockoutPolicy",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The position within the resulting dataset where the query begins returning item records. If the offset is \"5\", the records that returned begin with the sixth record that matches the query parameters. If the offset is \"0\", the records that are returned begin with the first record that matches the query parameters.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of user account policies records.",
            "schema": {
              "$ref": "#/definitions/UserAccountPolicyCollection"
            }
          },
          "400": {
            "description": "There was a client error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          },
          "500": {
            "description": "There was a server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContainer"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The user account lockout policy ID.",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error message code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "messageKey": {
          "type": "string",
          "description": "The error message key."
        },
        "messageArguments": {
          "type": "array",
          "description": "The arguments used to construct the error message.",
          "items": {
            "type": "object"
          }
        },
        "correlationId": {
          "type": "string",
          "description": "The unique identifier for the request."
        },
        "locale": {
          "type": "string",
          "description": "The locale of the error message."
        }
      },
      "description": "The error message item model."
    },
    "ErrorResponseContainer": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "The request identifier."
        },
        "errors": {
          "type": "array",
          "description": "The errors.",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      },
      "description": "The error message model."
    },
    "UserAccountLockoutPolicy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The user account lockout policy ID."
        },
        "lockoutThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "The number of times a user can consecutively enter an incorrect password before the system locks the users account. The default value is 6."
        },
        "waitTime": {
          "type": "integer",
          "format": "int32",
          "description": "The starting value (in seconds) of the time before the user is allowed to re-enter another password."
        }
      },
      "description": "The user account lockout policy."
    },
    "UserAccountLockoutPolicyCollection": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of items."
        },
        "items": {
          "type": "array",
          "description": "The items.",
          "items": {
            "$ref": "#/definitions/UserAccountLockoutPolicy"
          }
        }
      },
      "description": "A collection of user account lockout policies."
    },
    "UserAccountLockoutPolicyDescription": {
      "type": "object",
      "properties": {
        "userAccountLockoutPolicyId": {
          "type": "string",
          "description": "The unique numeric ID for identifying the user account lockout policy."
        },
        "description": {
          "type": "string",
          "description": "The description of the user account lockout policy."
        },
        "languageId": {
          "type": "integer",
          "format": "int32",
          "description": "The language of the description. For a list of integer language identifiers, please refer to the Knowledge Center."
        }
      },
      "description": "The description of a user account lockout policy."
    },
    "UserAccountLockoutPolicyDescriptionCollection": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of items."
        },
        "items": {
          "type": "array",
          "description": "The items.",
          "items": {
            "$ref": "#/definitions/UserAccountLockoutPolicyDescription"
          }
        }
      },
      "description": "A collection of user account lockout policy descriptions."
    },
    "UserAccountPolicy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The unique numeric ID for identifying a user account policy."
        },
        "userAccountLockoutPolicyId": {
          "type": "string",
          "description": "The unique numeric ID for identifying a user account lockout policy."
        },
        "passwordPolicyId": {
          "type": "string",
          "description": "The unique numeric ID for identifying a password policy."
        }
      },
      "description": "The user account policy."
    },
    "UserAccountPolicyCollection": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of items."
        },
        "items": {
          "type": "array",
          "description": "The items.",
          "items": {
            "$ref": "#/definitions/UserAccountPolicy"
          }
        }
      },
      "description": "A collection of user account policies records."
    }
  }
}